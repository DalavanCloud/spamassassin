#!/usr/bin/perl

use strict;
use Fcntl;

BEGIN { @AnyDBM_File::ISA = qw(DB_File GDBM_File NDBM_File SDBM_File); }
use AnyDBM_File;

# for the DB format...
use constant FORMAT_FLAG        => 0xc0;        # 11000000
use constant ONE_BYTE_FORMAT    => 0xc0;        # 11000000
use constant TWO_LONGS_FORMAT   => 0x00;        # 00000000

use constant ONE_BYTE_SSS       => 0x38;        # 00111000
use constant ONE_BYTE_HHH       => 0x07;        # 00000111

use vars qw{
    %h $k $v @DBNAMES
    $opt_dbpath $opt_min_hits
  };

use Getopt::Long;
GetOptions("dbpath=s", "min-hits=i");

@DBNAMES = qw(toks probs);

my $path = $opt_dbpath;
$path ||= $ENV{HOME}."/.spamassassin/bayes";

foreach my $dbname (@DBNAMES) {
  my $name = $path.'_'.$dbname;
  my $db_var = 'db_'.$dbname;
  tie %{$h{$db_var}}, "AnyDBM_File",$name, O_RDONLY,0600
        or die "Cannot open file $name: $!\n";
}

printf ("%3.3f %8d %8d   %s\n", 0.0, 0,
	$h{db_probs}->{'**NSPAM'}, 'non-token data: nspam');
printf ("%3.3f %8d %8d   %s\n", 0.0, 0,
	$h{db_probs}->{'**NHAM'}, 'non-token data: nham');

my %seen = ();
for my $key ( keys(%{$h{db_toks}}) ) {
  next if (exists $seen{$key});
  $seen{$key} = 1;

  my $prob = $h{db_probs}->{$key};
  if (defined $prob) {
    $prob = unpack ('f', $prob);
  } else {
    $prob = 0.5;
  }

  my ($ts, $th) = tok_unpack ($h{db_toks}->{$key});
  $ts ||= 0;
  $th ||= 0;

  next if ($opt_min_hits && (($ts + $th) < $opt_min_hits));
  printf ("%3.3f %8d %8d   %s\n", $prob, $ts, $th, $key);
}

foreach my $dbname (@DBNAMES) {
  my $name = $path.'_'.$dbname;
  my $db_var = 'db_'.$dbname;
  untie %{$h{$db_var}};
}

sub tok_unpack {
  my ($packed, $ts, $th) = unpack("CLL", $_[0] || 0);

  if (($packed & FORMAT_FLAG) == ONE_BYTE_FORMAT) {
    $ts = ($packed & ONE_BYTE_SSS) >> 3;
    $th = ($packed & ONE_BYTE_HHH);
  }
  # else use $ts and $th we just unpacked.

  return ($ts, $th);
}


