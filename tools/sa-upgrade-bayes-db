#!/usr/bin/perl

if (!defined $ARGV[0]) {
  die "usage: sa-upgrade-bayes-db /path/to/db/file\n";
}

use DB_File;

foreach my $filename (@ARGV) {
  if (!tie %output, 'DB_File', $filename, O_RDWR|O_CREAT, 0600) {
    warn "tie failed to $filename, skipping\n";
    next;
  }

  print "upgrading to DB_File: $filename\n";

  my $count = 0;
  eval '
    use GDBM_File; tie %in, "GDBM_File", $filename, &GDBM_READER, 0600;
    $count = copy_entries (\%in, \%output);
    untie %in;
  ';
  if ($@) {
    print "GDBM: GDBM_File module not installed, nothing copied.\n";
  } elsif ($count == 0) {
    print "GDBM: no database of that kind found, nothing copied.\n";
  } else {
    print "GDBM: copied $count entries.\n";
  }

  my $count = 0;
  eval '
    use NDBM_File; tie %in, "NDBM_File", $filename, O_RDONLY, 0600;
    $count = copy_entries (\%in, \%output);
    untie %in;
  ';
  if ($@) {
    print "NDBM: NDBM_File module not installed, nothing copied.\n";
  } elsif ($count == 0) {
    print "NDBM: no database of that kind found, nothing copied.\n";
  } else {
    print "NDBM: copied $count entries.\n";
  }


  my $count = 0;
  eval '
    use SDBM_File; tie %in, "SDBM_File", $filename, O_RDONLY, 0600;
    $count = copy_entries (\%in, \%output);
    untie %in;
  ';
  if ($@) {
    print "SDBM: SDBM_File module not installed, nothing copied.\n";
  } elsif ($count == 0) {
    print "SDBM: no database of that kind found, nothing copied.\n";
  } else {
    print "SDBM: copied $count entries.\n";
  }

  untie %output;
}

exit;


sub copy_entries {
  my ($inhash, $outhash) = @_;
  my ($key, $value);
  my $count = 0;
  while (($key, $value) = each %{$inhash}) {
    $outhash->{$key} = $value;
    $count++;
  }
  return $count;
}
