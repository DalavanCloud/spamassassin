#!/bin/sh

# <@LICENSE>
# Copyright 2004 Apache Software Foundation
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# </@LICENSE>
#
# This is a small script used to interact with run-masses to do a full
# corpus mass-check run, including the rsync to the SA server.
# Change the appropriate variables below.
#
# By default, it'll do a set0 run, but you can change that by adding
# --net or --bayes to the commandline.
#
# --net by itself will automatically try running 4 mass-checks in parallel
#

PATH=/bin:/usr/bin:/usr/local/bin
export PATH

RSYNC_USER=YOURNAME
RSYNC_PASSWORD="YOURPASSWORD"; export RSYNC_PASSWORD
CORPUS=$HOME/SA/corpus
SA_VER=$HOME/SA/spamassassin-corpora
OUTDIR=$SA_VER/masses
FINALDIR=

SVN=svn
SVNVERS=svnversion
WGET=wget
RSYNC=rsync

NET=0
BAYES=0
OPTS=""
VERS=nightly
FILENAME=$RSYNC_USER
umask 002

while [ ! -z "$1" ]; do
  if [ "$1" = "--net" ]; then
    NET=1
  elif [ "$1" = "--bayes" ]; then
    BAYES=1
  fi
  shift
done

if [ $NET -eq 1 ]; then
  FILENAME="net-$FILENAME"
  OPTS="$OPTS --net --reuse"
  AFTER="-60 days"
  VERS=weekly

  # We want to do this with more parallelization, but not if Bayes is also running ...
  if [ $BAYES -eq 0 ]; then
    OPTS="$OPTS -j 4"
  fi
else
  AFTER="-120 days"
fi

if [ $BAYES -eq 1 ]; then
  FILENAME="bayes-$FILENAME"
  OPTS="$OPTS --bayes"
else
  OPTS="$OPTS -n"
fi

cd $OUTDIR
if [ -f ham.log -o -f spam.log ]; then
  echo "A previous run still has log files, exiting." >&2
  exit 2
fi

# Verify appropriate version to run with
echo "[Updating $SA_VER]"
COUNT=0
while ! $WGET -q -nd -m http://rsync.spamassassin.org/$VERS-versions.txt ; do
  sleep 60
  COUNT=`expr $COUNT + 1`
  if [ $COUNT -gt 5 ]; then
    echo "Couldn't get the $VERS revision version, aborting!" >&2
    exit 2
  fi
done

NREV=`tail -1 $VERS-versions.txt | awk '{print $2}'`
if [ -f "$SA_VER/masses/svninfo.tmp" ]; then
  CREV=`grep ^Revision: $SA_VER/masses/svninfo.tmp | awk '{print $2}'`
  if [ $CREV -eq $NREV ]; then
    echo "Looks like a problem with the $VERS-versions.txt update, same rev ($CREV)" >&2
    exit 2
  fi
fi

if ! $RSYNC -uaqrC --exclude masses/spamassassin/ --delete rsync.spamassassin.org::tagged_builds/nightly_mass_check/ $SA_VER; then
  echo "Couldn't rsync update the $VERS spamassassin corpora code" >&2
  exit 2
fi

CREV=`grep ^Revision: $SA_VER/masses/svninfo.tmp | awk '{print $2}'`
if [ $CREV -ne $NREV ]; then
  echo "Looks like a problem with the rsync area, found rev $CREV but expected rev $NREV" >&2
  exit 2
fi

# remove existing bayes db set
echo "[Removing old Bayes DB]"
rm -f $SA_VER/masses/spamassassin/bayes*

# do the run, treat $AFTER differently due to commandline parsing and "-"
echo "[Running mass-check '$OPTS' in $CORPUS]"
if [ -z "$AFTER" ]; then
  $CORPUS/run-masses $SA_VER $OPTS > /dev/null
else
  echo "[Using '$AFTER' for --after setting]"
  $CORPUS/run-masses $SA_VER $OPTS --after "$AFTER" > /dev/null
fi

if [ ! -s ham.log -o ! -s spam.log ]; then
  echo "There seems to be a problem with either ham.log or spam.log, aborting!" >&2
  exit 1
fi

# now we have our ham.log and spam.log files...
echo "[Uploading daily corpus logs]"
mv ham.log ham-$FILENAME.log
mv spam.log spam-$FILENAME.log
mv results.log results-$FILENAME.log

if ! $RSYNC -qPcvzb ham-$FILENAME.log spam-$FILENAME.log $RSYNC_USER@rsync.spamassassin.org::corpus/; then
  echo "There was an error during rsync!" >&2
fi

RESULTDIR=.
if [ "$FINALDIR" ]; then
  mv -f ham-$FILENAME.log spam-$FILENAME.log $FINALDIR

  if [ -f "ham-$FILENAME.log" -o -f "spam-$FILENAME.log" ]; then
    echo "There was an error moving files around, aborting!" >&2
    exit 1
  fi

  RESULTDIR=$FINALDIR
  if [ -d "$FINALDIR/hf" ]; then
    RESULTDIR="$FINALDIR/hf"
  fi
  mv -f results-$FILENAME.log $RESULTDIR
fi

echo "[Our results]"
cat $RESULTDIR/results-$FILENAME.log
