#! /usr/bin/perl -w

# <@LICENSE>
# Copyright 2004 Apache Software Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# </@LICENSE>
#
# This goes with the run-masses script to take the ham/spam directories
# and spit out the appropriate spam:mbox:path statements for mass-check.
#

use strict;

my $actualdir = "./";

if (@ARGV) {
  $actualdir = shift(@ARGV) . "/";
  chdir $actualdir;
}

my $include_traps = 1;
my @do_dirs;

foreach ( 'ham', 'spam' ) {
  push(@do_dirs, "$_/personal");
  push(@do_dirs, "$_/${_}trap") if $include_traps;
}

# mbox laden areas
my @dirs = ( 'ham' ); #, 'spam/evil' );
foreach my $dir (@dirs) {
  if (-d $dir) {
    $dir =~ m@^([^/]+)@;
    print "$1:mbox:$actualdir$dir\n";
  }
  else {
    die "$dir isn't a directory!\n";
  }
}

# Ok, now figure out the most recent X days of spam ...
my $RECENT = 120;

@dirs = ();
foreach my $pdir ( @do_dirs ) {
  $pdir =~ m@^([^/]+)@;
  my $type = $1;

  my @dlist = ();

  if (opendir(DIR1, $pdir)) {
    while(my $dir = readdir(DIR1)) {
      next unless ($dir =~ /^\d+$/);

      $dir = "$pdir/$dir";
      next unless (opendir(DIR2, $dir));

      while(my $dir2 = readdir(DIR2)) {
        next unless ($dir2 =~ /^\d+$/ && opendir(DIR3, "$dir/$dir2"));
        $dir2 = "$dir/$dir2";

        push(@dlist, map { "$type:dir:$actualdir$dir2/$_" } grep(-d "$dir2/$_" && /^\d+$/, readdir(DIR3)));
        closedir(DIR3);
      }
      closedir(DIR2);
    }
    closedir(DIR1);
    @dlist = reverse sort @dlist;
    splice @dlist, $RECENT if (@dlist > $RECENT);
    push(@dirs, @dlist);
  }
}

print join("\n", @dirs, "");
exit;
