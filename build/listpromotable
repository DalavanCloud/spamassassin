#!/usr/bin/perl

use strict;
use warnings;

use File::Temp ();
use LWP::Simple;
use URI::Escape;
use Data::Dumper;

my $cgi_url = "http://buildbot.spamassassin.org/";

my $url = $cgi_url."ruleqa?daterev=last-night";
my $doc = get ($url);
if (!$doc) {
  die "HTTP get failed: $doc\n";
}

# print $doc;

# <rule><test>__HIGHBITS</test><promo>0</promo>
# <spc>8.7654</spc><hpc>0.2056</hpc><so>0.977</so>
# <detailhref>ruleqa%3Fdaterev%3Dlast-night%26rule%3D__HIGHBITS%26s_detail%3D1</detailhref></rule>

my $todump = { };
while ($doc =~ m!<rule>(.*?)</rule>!xg) {
  my $xml = $1;
  my $obj = { };

  while ($xml =~ s!<([A-Za-z0-9_]+)>(.*?)</\1>!!) {
    $obj->{$1} = $2;
  }
  while ($xml =~ s!<([A-Za-z0-9_]+)\s+esc=["']1["']>(.*?)</\1>!!) {
    $obj->{$1} = uri_unescape($2);
  }

  my $name = $obj->{test};
  $obj->{detailhref} = $cgi_url.$obj->{detailhref};

  $todump->{$name} = $obj;
}

if (!scalar keys %$todump) {
  die "no rules found?\n$doc\n";
}

my $dump = Data::Dumper->Dump([$todump], ['promolist']);
# print $dump;

# now write that to a tmp file so 'mkrules' can use it
my $tmp = new File::Temp( UNLINK => 1, SUFFIX => '.pl' );
print $tmp $dump;

my $perl = $^X;
if (!$perl) {
  die "no perl path found in ARGV!";
}

# and exec that script
exec $perl, "build/mkrules", "--listpromotable=$tmp";
die "exec failed";

