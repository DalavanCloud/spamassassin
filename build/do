#!/usr/bin/perl
# <@LICENSE>
# Copyright 2004 Apache Software Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# </@LICENSE>
# 
#
# Some symlink-safe file routines.  Can copy, move or link one file somewhere
# else.  On systems where no symlinks are supported, files are simply copied.

use strict;
use warnings;

use File::Copy;

# Check whether symlink is supported.
use constant SYMLINK => eval { symlink("",""); 1 };

if (scalar (@ARGV) != 3) {
  die "Usage: $0 command source target\n\twhere command can be copy move or link\n\tand source and target must be single files.\n"
}

my ($cmd, $src, $tgt, $lnk) = @ARGV;

# If symlinks work and source is a symlink and we're copying, do a symlink.
$cmd = 'symlink' if (SYMLINK && -l $src);
# If symlinks do not work and we're symlinking, do a copy.
$cmd = 'copy' if (!SYMLINK && $cmd eq 'symlink');

# Figure out the symlink source.
if ($cmd eq 'symlink') {
  $lnk = (-l $src) ? readlink($src) : $src;
}

# Shall we link?
unless ($lnk) {
  if ($cmd eq 'copy') {
    copy($src, $tgt) || die "Can't copy '$src' to '$tgt': $!\n";
    chmod((stat($src))[2], $tgt);
  }
  elsif ($cmd eq 'move') {
    move($src, $tgt) || die "Can't move '$src' to '$tgt': $!\n";
  }
  else {
    die "Unknown command '$cmd'";
  }
}
else {
  symlink($lnk, $tgt) || die "Can't link '$lnk' to '$tgt': $!\n";
}

exit 0;
