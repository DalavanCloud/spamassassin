# SpamAssassin rules file: tests.
###########################################################################

header NO_REAL_NAME		From =~ /^\s*\<?\S+\@\S+\>?\s*$/
describe NO_REAL_NAME		From: does not include a real name

header FROM_ENDS_IN_NUMS	From =~ /\d\d\@/
describe FROM_ENDS_IN_NUMS	From: ends in numbers

header FROM_HAS_MIXED_NUMS	From =~ /\d+[a-z]+\d+\S*@/i
describe FROM_HAS_MIXED_NUMS	From: contains numbers mixed in with letters

# (contrib: David Hull)
header FROM_NO_USER		From =~ /(?:^\@|<\@| \@|<>)/ [if-unset: unset@unset.unset]
describe FROM_NO_USER		From: has no local-part before @ sign

header TO_NO_USER		To =~ /(?:^\@|<\@| \@|<>)/ [if-unset: unset@unset.unset]
describe TO_NO_USER		To: has no local-part before @ sign

header TO_MALFORMED		To !~ /(?:(?:\"[^\"]+\"|\S+)\@\S+\.\S+|undisclosed-recipients:)/ [if-unset: unset@unset.unset]
describe TO_MALFORMED		To: has a malformed address

header FROM_MALFORMED		From !~ /(?:\"[^\"]+\"|\S+)\@\S+\.\S+/ [if-unset: unset@unset.unset]
describe FROM_MALFORMED		From: has a malformed address

header PLING			Subject =~ /\!/
describe PLING			Subject has an exclamation mark

header PLING_PLING		Subject =~ /\!\!\!+/
describe PLING_PLING		Subject has lots of exclamation marks

header SUBJ_HAS_UNIQ_ID		eval:check_for_unique_subject_id()
describe SUBJ_HAS_UNIQ_ID	Subject contains a unique ID number

header SUBJ_HAS_SPACES		Subject =~ /(?:\s{5,}|\t)/
describe SUBJ_HAS_SPACES	Subject contains lots of white space

header UNDISC_RECIPS		To =~ /^undisclosed-recipients?:\s*;$/
describe UNDISC_RECIPS		Valid-looking To "undisclosed-recipients"

header FAKED_UNDISC_RECIPS	To =~ /Undisclosed.*Recipient\S*@/i
describe FAKED_UNDISC_RECIPS	Faked To "Undisclosed-Recipients"

header TO_INVESTORS		To =~ /\bInvestors\@/
describe TO_INVESTORS		To: non-existent 'Investors' address

header SUBJ_ALL_CAPS		Subject =~ /^[A-Z0-9\W]{6,}[^a-z]+$/
describe SUBJ_ALL_CAPS		Subject is all capitals

# (allow this test to pass if there's no Message-Id header)
header MSGID_HAS_NO_AT		Message-Id !~ /\@/ [if-unset: NO@MSGID]
describe MSGID_HAS_NO_AT	Message-Id has no @ sign

header MSGID_SPAMSIGN_1		Message-Id =~ /^<[0-9a-f]{12,12}\$[0-9a-f]{8,8}\$[0-9a-f]{8,8}\@>$/
describe MSGID_SPAMSIGN_1	Message-Id generated by a spam tool

header INVALID_MSGID		Message-Id !~ /^<(?:\".+\"|[^\s]+)\@(?:\[.+\]|[^\s]+)>$/ [if-unset: <NO@MSGID>]
describe INVALID_MSGID		Message-Id is not valid, according to RFC-2822

header INVALID_DATE		Date =~ / AM| PM/i
describe INVALID_DATE		Invalid Date: header (has AM/PM)

header INVALID_DATE_NO_TZ	Date =~ /^..., \d+ ... .... ..:..:..$/
describe INVALID_DATE_NO_TZ	Invalid Date: header (no timezone)

header SUBJ_HAS_Q_MARK		Subject =~ /\?.{2,}$/
describe SUBJ_HAS_Q_MARK	Subject: contains a question mark

header SUBJ_ENDS_IN_Q_MARK	Subject =~ /\?+\s*$/
describe SUBJ_ENDS_IN_Q_MARK	Subject: ends in a question mark

header ADVERT_CODE		Subject =~ /(^\s*|\s+)ADV:/i
describe ADVERT_CODE		Subject: contains advertising tag

header FRIEND_AT_PUBLIC	To =~ /(yourdomain|you|your|public).(com|org|net)/i
describe FRIEND_AT_PUBLIC	sent to you@you.com or similar

header TO_EMPTY			To =~ /^(?:\@|\s*$)/ [if-unset: UNSET]
describe TO_EMPTY		To: is empty

header REPLY_TO_EMPTY		Reply-To =~ /^(?:\@|\s*$)/ [if-unset: UNSET]
describe REPLY_TO_EMPTY		Reply-To: is empty

header ALL_CAPS_SUBJECT		ALL =~ /\nSUBJECT: /s
describe ALL_CAPS_SUBJECT	SUBJECT: header found

header X_EM_VER_PRESENT		X-Em-Version =~ /\S/
describe X_EM_VER_PRESENT	Found an X-Em-Version: header

header X_PMFLAGS_PRESENT	X-PMFLAGS =~ /\S/
describe X_PMFLAGS_PRESENT	Found an X-PMFLAGS: (all caps) header

header X_UIDL_SPAMSIGN		X-UIDL =~ /[^a-f0-9]/
describe X_UIDL_SPAMSIGN	X-UIDL: header found, contains non-hex chars

header A_FROM_IN_AUTO_WLIST	eval:check_for_auto_whitelist()
describe A_FROM_IN_AUTO_WLIST	have seen non-spam mail from same From: address

header NO_MX_FOR_FROM		eval:check_for_from_mx()
describe NO_MX_FOR_FROM		No MX records for the From: domain

header KNOWN_BAD_DIALUPS	eval:check_for_bad_dialup_ips()
describe KNOWN_BAD_DIALUPS	Received via known spam-harbouring dialups

header FROM_AND_TO_SAME		eval:check_for_from_to_equivalence()
describe FROM_AND_TO_SAME	From and To the same address

header BAD_HELO_WARNING		eval:check_for_bad_helo()
describe BAD_HELO_WARNING	Fake name used in SMTP HELO command

header SUBJ_FULL_OF_8BITS	eval:check_subject_for_lotsa_8bit_chars()
describe SUBJ_FULL_OF_8BITS	Subject is full of 8-bit characters

header MDAEMON_2_7_4		Received =~ /with SMTP .MDaemon.v2.7.SP4.R./
describe MDAEMON_2_7_4		Received via buggy SMTP server (MDaemon 2.7.4SP4R)

header FAKED_IP_IN_RCVD		Received =~ /from [-0-9a-z\._]+_\[\d+\.\d+\.\d+\.\d+\] /i
describe FAKED_IP_IN_RCVD	Received: contains a name with a faked IP-address

header SMTPD_IN_RCVD		Received =~ /\(SMTPD32-\d+\..+\)/
describe SMTPD_IN_RCVD		Received via SMTPD32 server (SMTPD32-n.n)

header POST_IN_RCVD		Received =~ / Post\.(?:sk|cz)/
describe POST_IN_RCVD		Received contains fake 'Post.cz' hostname

# the new first arg for check_rbl() indicates what type of check it is;
# each type of check is stored in a separate set, and if an IP has already
# been hit in that set, it will not be checked with any other zone in
# that set.
header RCVD_IN_RELAYS_ORDB_ORG	eval:check_rbl('relay', 'relays.ordb.org.')
describe RCVD_IN_RELAYS_ORDB_ORG Received via a relay in relays.ordb.org

header RCVD_IN_OSIRUSOFT_COM	eval:check_rbl('relay', 'relays.osirusoft.com.')
describe RCVD_IN_OSIRUSOFT_COM	Received via a relay in relays.osirusoft.com

# X prefix is so that these are run after RCVD_IN_OSIRUSOFT_COM. tests
# are run in alphanumerically-sorted order.
header X_OSIRU_SPAM_SRC		eval:check_rbl_results_for('relay', '127.0.0.4')
describe X_OSIRU_SPAM_SRC	Osirusoft.com: sender is Confirmed Spam Source

header X_OSIRU_SPAMWARE_SITE	eval:check_rbl_results_for('relay', '127.0.0.6')
describe X_OSIRU_SPAMWARE_SITE	Osirusoft.com: sender is a Spamware site or vendor

# NOTE: commercial tests, see README file for details
header RCVD_IN_RBL		eval:check_rbl('rbl', 'blackholes.mail-abuse.org.')
describe RCVD_IN_RBL		Received via RBLed relay, see http://www.mail-abuse.org/rbl/

header RCVD_IN_RSS		eval:check_rbl('relay', 'relays.mail-abuse.org.')
describe RCVD_IN_RSS		Received via RSSed relay, see http://www.mail-abuse.org/rss/

header RCVD_IN_DUL		eval:check_rbl('dialup', 'dialups.mail-abuse.org.')
describe RCVD_IN_DUL		Received from dialup, see http://www.mail-abuse.org/dul/

# NOTE: commercial test, see README file for details
header RCVD_IN_BL_SPAMCOP_NET	eval:check_rbl('spamcop', 'bl.spamcop.net.')
describe RCVD_IN_BL_SPAMCOP_NET	Received via a relay in bl.spamcop.net

# don't include From:!  Many UNIX MTA's get false positives otherwise
# ditto for Reply-To:, some list software inserts Received and Reply-To hdrs
header FORGED_RCVD_FOUND	ALL =~ /\nSubject:.*\nReceived: /s
describe FORGED_RCVD_FOUND	Possibly-forged 'Received:' header found

header YR_MEMBERSHIP_EXCH	Subject =~ /Your Membership Exchange/
describe YR_MEMBERSHIP_EXCH	Subject contains 'Your Membership Exchange'

header FROM_FORGED_HOTMAIL	From =~ /^[^"]+\S+\@hotmail\.com/i
describe FROM_FORGED_HOTMAIL	Forged From: line claiming to be from hotmail.com

header DIFFERENT_REPLY_TO	eval:check_for_spam_reply_to()
describe DIFFERENT_REPLY_TO	Reply-To: massively different from From: or To:

header LOTS_OF_CC_LINES		eval:check_lots_of_cc_lines()
describe LOTS_OF_CC_LINES	Lots and lots of Cc: headers

header FROM_NAME_EQ_FROM_ADDR	eval:check_from_name_eq_from_address()
describe FROM_NAME_EQ_FROM_ADDR	'From:' address also used as sender's real name

header FORGED_HOTMAIL_RCVD	eval:check_for_forged_hotmail_received_headers()
describe FORGED_HOTMAIL_RCVD	Forged hotmail.com 'Received:' header found

header FORGED_YAHOO_RCVD	eval:check_for_forged_yahoo_received_headers()
describe FORGED_YAHOO_RCVD	Forged yahoo.com 'Received:' header found

header FORGED_GW05_RCVD		eval:check_for_forged_gw05_received_headers()
describe FORGED_GW05_RCVD	Forged 'by gw05' 'Received:' header found

header CHARSET_FARAWAY		eval:check_for_faraway_charset()
describe CHARSET_FARAWAY	Character set indicates a foreign language

header NONEXISTENT_CHARSET	Content-Type =~ /charset=.?DEFAULT/
describe NONEXISTENT_CHARSET	Character set doesn't exist

header X_MAILER_GIBBERISH	X-Mailer =~ /^[A-Fa-f0-9\.]{48,}$/
describe X_MAILER_GIBBERISH	'X-Mailer' line contains gibberish

header X_PRIORITY_HIGH		X-Priority =~ /^1/
describe X_PRIORITY_HIGH	Sent with 'X-Priority' set to high

header X_MSMAIL_PRIORITY_HIGH	X-Msmail-Priority =~ /^High/
describe X_MSMAIL_PRIORITY_HIGH	Sent with 'X-Msmail-Priority' set to high

header MAY_BE_FORGED            Received =~ /\(may be forged\)/i
describe MAY_BE_FORGED          'Received:' has 'may be forged' warning

header SHORT_RECEIVED_LINE	Received =~ /\S{120,}/s
describe SHORT_RECEIVED_LINE	'Received:' contains huge hostname

header CORRUPT_MSGID		Message-Id =~ /\@Received: /
describe CORRUPT_MSGID		'Message-Id' contains bits of Received header

header MSG_ID_ADDED_BY_MTA	Message-Id =~ / \(added by /
describe MSG_ID_ADDED_BY_MTA	'Message-Id' was added by a relay

header MANY_FROMS		From =~ /^[^\"\<\(]+, [^\"\<\(]+$/
describe MANY_FROMS		'From' contains more than one address

# *so* many spams come from here.
header FROM_BTAMAIL		From =~ /\@btamail.net.cn/i
describe FROM_BTAMAIL		From an address @btamail.net.cn

header USER_IN_BLACKLIST	eval:check_from_in_blacklist()
describe USER_IN_BLACKLIST	From: address is in the user's black-list

header FROM_MISSING		From =~ /^UNSET$/ [if-unset: UNSET]
describe FROM_MISSING		Missing From: header

header DATE_MISSING		Date =~ /^UNSET$/ [if-unset: UNSET]
describe DATE_MISSING		Missing Date: header

header ROUND_THE_WORLD		eval:check_for_round_the_world_received()
describe ROUND_THE_WORLD	Received: says mail bounced all around the world

# this is a quite common false positive, as it's legal to remove a To but leave
# a CC. so don't score it high.
header MISSING_HEADERS		eval:check_for_missing_to_header()
describe MISSING_HEADERS	Missing To: header

# (contrib: skod)
# modified by jm to remove bulk_mailer, matches on a mailing list I'm on
header RATWARE ALL =~ /(?:4\.\.72\.1712\.3|ACE Contact Manager|Aristotle Mail|Avalanche|Calypso|clansoft|Cognigen|Cold Fusion|Cyber-Bomber|Crescent|DiffondiCool|Dynamic Mail Server|CTMailer|E-Broadcaster|E-mail Magnet|Ellipse Bulk Emailer|EmailBlaster|Emailer.Platinum|eMerge|Extractor|Floodgate|FlashSend|Goldrush|Group Mail|Internet Marketing|Mailcast|MailKing|MassE-Mail|massmail\.pl|Matchmaker|NetMailer|News Breaker|pop3.report|RamoMail|Ready Aim|Shopping.Planet|Stalker.s|TBBS\/TIGER|TOO BAD|TotalMailTURBO Mail|V3,1,6,1|V3,1,2,0|V3,2,2,0|V.null.\.1712\.3|WindoZ|WinNT.s.Blat|WorldMerge|YMR)/

describe RATWARE 		Bulk email software fingerprints found in headers

# contrib: Craig (total regexp wizardry here ;)
header SUSPICIOUS_RECIPS        To =~ /(@[-a-z0-9_.]+).*(?:\1.*){9,}/is
describe SUSPICIOUS_RECIPS      To: contains same domain at least 10 times

header SUSPICIOUS_CC_RECIPS	Cc =~ /(@[-a-z0-9_.]+).*(?:\1.*){9,}/is
describe SUSPICIOUS_CC_RECIPS	Cc: contains same domain at least 10 times

header VERY_SUSP_RECIPS		To =~ /\b([a-z][a-z])[^@\s,]*((?>@[-a-z0-9_.]+))\b.*(?:\b\1[^@\s,]*\2.*\b){9,}/is
describe VERY_SUSP_RECIPS       To: contains very similar addresses 10 times

header VERY_SUSP_CC_RECIPS	Cc =~ /\b([a-z][a-z])[^@\s,]*((?>@[-a-z0-9_.]+))\b.*(?:\b\1[^@\s,]*\2.*\b){9,}/is
describe VERY_SUSP_CC_RECIPS	Cc: contains very similar addresses 10 times

header Q_FOR_SELLER		Subject =~ /Question for seller/
describe Q_FOR_SELLER		Subject is an eBay question

