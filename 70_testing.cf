# SpamAssassin rules file: rules under test, $Rev$
#
# This file is a placeholder for rules "under probation", ie. checked into
# SVN for testing. It should not be distributed; if the rules have good
# stats after a mass-check or two, then fold them into the distributed
# rules files.
#
# I suggest adding a prefix to rules in this file, "T_" -- this
# helps identify probationary rules in test output.
#
# <@LICENSE>
# Copyright 2004 Apache Software Foundation
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# </@LICENSE>
#
###########################################################################

# replacements for PORN_4; split out sub-patterns as some are more FP-prone
# than others.
uri T_PORN_URL_SEX	/^https?:\/\/[\w\.-]*(?<!es|ba)(?<!dle|sus)sex(?!press)[\w-]*\./
uri T_PORN_URL_ANAL	/^https?:\/\/[\w\.-]*anal(?!og|y[sz])[\w-]*\./
uri T_PORN_URL_SLUT	/^https?:\/\/[\w\.-]*slut[\w-]*\./
uri T_PORN_URL_CUM	/^https?:\/\/[\w\.-]*(?<!cir)(?<!\bdo)cum(?!ul|be?r|b?en)[\w-]*\./
uri T_PORN_URL_LUST	/^https?:\/\/[\w\.-]*lust(?!(?<=illust)(?:rat|rious)|(?<=clust)er)[\w-]*\./
uri T_PORN_URL_PANT	/^https?:\/\/[\w\.-]*pant(?:y|ies)[\w-]*\./
uri T_PORN_URL_TEEN	/^https?:\/\/[\w\.-]*(?<!thir|four|eigh|nine)(?<!fif|six)(?<!seven)teen(?!th)[\w-]*\./
uri T_PORN_URL_MISC	/^https?:\/\/[\w\.-]*(pussy|nympho|porn|hard-?core|taboo|whore|voyeur|lesbian|gurlpages|naughty|lolita|schoolgirl|kooloffer|erotic)[\w-]*\./

########################################################################
# SPF support.  "pass" is nice, "fail" is bad, "softfail" is bad, but
# not as bad as "fail".

header T_SPF_PASS		eval:check_for_spf_pass()
tflags T_SPF_PASS		net nice
score T_SPF_PASS		-0.1
header T_SPF_FAIL		eval:check_for_spf_fail()
tflags T_SPF_FAIL		net
score T_SPF_FAIL		0.2
header T_SPF_SOFTFAIL		eval:check_for_spf_softfail()
tflags T_SPF_SOFTFAIL		net
score T_SPF_SOFTFAIL		0.1

header T_SPF_HELO_PASS		eval:check_for_spf_helo_pass()
tflags T_SPF_HELO_PASS		net nice
score T_SPF_HELO_PASS		-0.1
header T_SPF_HELO_FAIL		eval:check_for_spf_helo_fail()
tflags T_SPF_HELO_FAIL		net
score T_SPF_HELO_FAIL		0.2
header T_SPF_HELO_SOFTFAIL	eval:check_for_spf_helo_softfail()
tflags T_SPF_HELO_SOFTFAIL	net
score T_SPF_HELO_SOFTFAIL	0.1

########################################################################
# This ratware always uses a +0000 TZ in the Date header, and has a multiplicity
# of From: header formats. ("From" header samples from Steven Champeon
# <schampeo.hesketh.com> via the spamtools.lists.abuse.net and SPAM-L lists).
#
# Note that this ratware is also quite buggy -- it regularly sends out spam
# mails with no subject line or body text!
#
# "First Last" <firstlast_[a-z][a-z]@somedomain>	1
# "First Last" <firstlast[a-z][a-z]@somedomain>		1
# "First Last" <first.last[a-z][a-z]@somedomain>	1
# "First Last" <first_last[a-z][a-z]@somedomain>	1
# "First Last" <first_last_[a-z][a-z]@somedomain>	1
# "First Last" <flast_[a-z][a-z]@somedomain>		2
# "First Last" <flast[a-z][a-z]@somedomain>		2
# "First Last" <f.last_[a-z][a-z]@somedomain>		2
# "First Last" <f.last[a-z][a-z]@somedomain>		2
# "First Last" <f_last[a-z][a-z]@somedomain>		2
# "First Last" <last[a-z][a-z]@somedomain>		3
# "First M. Last" <firstlast_[a-z][a-z]@somedomain>	4
# "First M. Last" <firstlast[a-z][a-z]@somedomain>	4
# "First M. Last" <first.m.last[a-z][a-z]@somedomain>	5
# "First M. Last" <firstmlast[a-z][a-z]@somedomain>	5
# "First M. Last" <firstmlast_[a-z][a-z]@somedomain>	5
# "First M. Last" <fmlast_[a-z][a-z]@somedomain>	6
# "First M. Last" <mlast[a-z][a-z]@somedomain>		7
# "First M. Last" <m.last[a-z][a-z]@somedomain>		7
header __T_0_TZ_1	    From =~ /^\"(\w)(\w+) (\w+)\" <\1\2[\._]?\3_?[a-z][a-z]\@/i
header __T_0_TZ_2	    From =~ /^\"(\w)(\w+) (\w+)\" <\1[\._]?\3_?[a-z][a-z]\@/i
header __T_0_TZ_3	    From =~ /^\"(\w)(\w+) (\w+)\" <\3_?[a-z][a-z]\@/i
header __T_0_TZ_4	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\1\2[\._]?\4_?[a-z][a-z]\@/i
header __T_0_TZ_5	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\1\2[\._]?\3[\._]?\4_?[a-z][a-z]\@/i
header __T_0_TZ_6	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\1\3\4_?[a-z][a-z]\@/i
header __T_0_TZ_7	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\3[\._]?\4_?[a-z][a-z]\@/i

header __T_RATWARE_0_TZ_DATE		Date =~ / \+0000$/

meta T_RATWARE_0_TZ_1	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_1)
meta T_RATWARE_0_TZ_2	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_2)
meta T_RATWARE_0_TZ_3	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_3)
meta T_RATWARE_0_TZ_4	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_4)
meta T_RATWARE_0_TZ_5	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_5)
meta T_RATWARE_0_TZ_6	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_6)
meta T_RATWARE_0_TZ_7	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_7)

########################################################################
# rules to detect certain generally unnecessary encodings in HTML

rawbody T_ENTITY_WHITESPACE_R	/\&\#(?:10|32)\;/
body T_ENTITY_WHITESPACE_B	/\&\#(?:10|32)\;/
meta T_ENTITY_WHITESPACE_M	(T_ENTITY_WHITESPACE_R || T_ENTITY_WHITESPACE_B)

rawbody T_ENTITY_ALPHANUM_R	/\&\#(?:4[89]|5[0-7]|6[5-9][78]\d|9[0789]|1[01]\d|12[012])\;/
body T_ENTITY_ALPHANUM_B	/\&\#(?:4[89]|5[0-7]|6[5-9][78]\d|9[0789]|1[01]\d|12[012])\;/
meta T_ENTITY_ALPHANUM_M	(T_ENTITY_ALPHANUM_R || T_ENTITY_ALPHANUM_B)

rawbody T_ENTITY_OTHER1_R	/\&\#(?:46|47)\;/
body T_ENTITY_OTHER1_B		/\&\#(?:46|47)\;/
meta T_ENTITY_OTHER1_M		(T_ENTITY_OTHER1_R || T_ENTITY_OTHER1_B)

rawbody T_ENTITY_OTHER2_R	/\&\#(?:33|39|40|46|47)\;/
body T_ENTITY_OTHER2_B		/\&\#(?:33|39|40|46|47)\;/
meta T_ENTITY_OTHER2_M		(T_ENTITY_OTHER2_R || T_ENTITY_OTHER2_B)

# according to the postmaster at qualcomm, no mail is sent from
# eudora.com, but it's heavily joe-jobbed ...
header T_FROM_EUDORA            From:addr =~ /\@eudora\.com/i

# similar concept for Delphi.com.  Was an ISP, now a car company!
# I think their username format is "First.Last"; requiring 2 digits
# will be pretty safe.  (lower rule as a baseline to see if we miss much)
header T_FROM_DELPHI		From:addr =~ /\d[^\@]+\d[^\@]+\@delphi\.com/i
header T_FROM_DELPHI_BASIC	From:addr =~ /\@delphi\.com/i

# great Yahoo! forgery rule, but is it going to be stable?
header __YAHOO_MSGID		Message-ID =~ /\@yahoo\.com>/i
header __YAHOO_BEGINNING	Message-ID =~ /<\S+(?:\.\S+|\.\S+\.\S+\.\S+)\@/
meta T_FORGED_YAHOO_MSGID	(__YAHOO_MSGID && !__YAHOO_BEGINNING)

header T_HASHCASH_20		eval:check_hashcash_value('20', '21')
header T_HASHCASH_21		eval:check_hashcash_value('21', '22')
header T_HASHCASH_22		eval:check_hashcash_value('22', '23')
header T_HASHCASH_23		eval:check_hashcash_value('23', '24')
header T_HASHCASH_24		eval:check_hashcash_value('24', '25')
header T_HASHCASH_25		eval:check_hashcash_value('25', '26')
header T_HASHCASH_26		eval:check_hashcash_value('26', '9999')
tflags T_HASHCASH_20		nice
tflags T_HASHCASH_21		nice
tflags T_HASHCASH_22		nice
tflags T_HASHCASH_23		nice
tflags T_HASHCASH_24		nice
tflags T_HASHCASH_25		nice
tflags T_HASHCASH_26		nice
score T_HASHCASH_20		-0.5
score T_HASHCASH_21		-0.7
score T_HASHCASH_22		-1.0
score T_HASHCASH_23		-2.0
score T_HASHCASH_24		-3.0
score T_HASHCASH_25		-4.0
score T_HASHCASH_26		-5.0

header T_HASHCASH_2SPEND	eval:check_hashcash_double_spend()
describe T_HASHCASH_2SPEND	HashCash token already spent in another mail
score T_HASHCASH_2SPEND		0.1

# Altavista.com's Greg Connor gconnor at nekodojo.org says 'they never send
# mail'; <2423209050.1071572609@[172.23.65.45]>, Tue, 16 Dec 2003 11:03:29
# -0800, on the spf-discuss at v2.listbox.com mailing list.  Let's see
# what this results in!
#
header T_FAKE_FROM_ALTAVISTA	From:addr =~ /\@altavista\.com$/i
header T_FAKE_TO_ALTAVISTA	To:addr =~ /\@altavista\.com$/i
header T_FAKE_REPTO_ALTAVISTA	Reply-To:addr =~ /\@altavista\.com$/i
header T_FAKE_ERRSTO_ALTAVISTA	Errors-To:addr =~ /\@altavista\.com$/i
header T_FAKE_ENVFROM_ALTAVISTA	EnvelopeFrom =~ /\@altavista\.com$/i

header T_FAKE_OUTBLAZE_RCVD	Received =~ /\.mr\.outblaze\.com/
header T_FAKE_OUTBLAZE_MID_1	Message-Id =~ /\.mr\.outblaze\.com/
header T_FAKE_OUTBLAZE_MID_2	MESSAGEID =~ /\.mr\.outblaze\.com/

header T_ALL_TRUSTED		eval:check_all_trusted()
describe T_ALL_TRUSTED		Did not pass through any untrusted hosts
tflags T_ALL_TRUSTED		nice

# some tests to catch long lines of random dictionary words
# this could be slow, being a rawbody rule, but if it works well maybe
# we should consider a way to spot these kinds of auto-generated
# text patterns efficiently...
# quinlan: I think the unique word tests might do a better job of this,
#          this seems very specific to one spamware program.
rawbody T_BAYESBUSTER_LINE_12	/^([a-z]{3,} ){12,}<[Bb][Rr]>$/
rawbody T_BAYESBUSTER_LINE_15	/^([a-z]{3,} ){15,}<[Bb][Rr]>$/
rawbody T_BAYESBUSTER_LINE_15I	/^([a-z]{3,} ){15,}<br>$/i

# reported by Kurtis Rader, bug 2890
uri T_MSN_REDIR		m{^https?://shopping\.msn\.com/trackurl\.aspx\?}i
describe T_MSN_REDIR	Has MSN Redirect URI

# reported by Kurtis Rader, bug 2901
uri T_AOL_REDIR_1	m{^https?://www\.aol\.com/ams/clickThruRedirect.adp\?}i
uri T_AOL_REDIR_2	m{^https?://www\.aol\.com/ams/}i
uri T_AOL_REDIR_3	m{^https?://www\.aol\.com/.*https?://}i
uri T_AOL_REDIR_4	m{^https?://www\.aol\.com/ams/.*https?://}i
#describe T_AOL_REDIR	Has AOL Redirect URI

# more portable replacement for RCVD_NUMERIC_HELO that doesn't rely on
# Received headers using "helo=" prefix
header T_RCVD_NUMERIC_HELO	X-Spam-Relays-Untrusted =~ / helo=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} /
describe T_RCVD_NUMERIC_HELO	Received: contains an IP address used for HELO
# same but not for first line
header T_RCVD_NUMERIC_HELO_NOTFIRST	X-Spam-Relays-Untrusted =~ / helo=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} .+\[/
describe T_RCVD_NUMERIC_HELO_NOTFIRST	Received: contains IP for HELO (not first line)

# If the Message-Id claims to be added by one ISP, there should be a Received
# header which mentions that ISP.
header __MSGID_HAS_HOTMAIL	MESSAGEID =~ /hotmail\.com/
header __RCVD_HAS_HOTMAIL	Received =~ /(?:hotmail|msn)\.com/
meta T_MID_RCVD_DIFF_HOTMAIL	(__MSGID_HAS_HOTMAIL && !__RCVD_HAS_HOTMAIL)
describe T_MID_RCVD_DIFF_HOTMAIL Message-Id does not match Received (hotmail.com)

header __MSGID_HAS_AOL	MESSAGEID =~ /aol\.com/
header __RCVD_HAS_AOL	Received =~ /aol\.com/
meta T_MID_RCVD_DIFF_AOL	(__MSGID_HAS_AOL && !__RCVD_HAS_AOL)
describe T_MID_RCVD_DIFF_AOL	Message-Id does not match Received (aol.com)

uri	T_URI_UNPRINTABLE	/%0/
describe T_URI_UNPRINTABLE	URI contains unprintable characters

# 0 nonspam hits, hundreds of spam hits.  Serious problems there
uri T_TERRA_ES		/terra\.es\//i
describe T_TERRA_ES	Contains URI to a document hosted at 'terra.es'

# bug 2957
uri T_INFO_TLD			/^(?:https?:\/\/|mailto:)[^\/]+\.info(?:\/|$)/i
describe T_INFO_TLD		Contains a URL in the INFO top-level domain    

header T_RCVD_IN_BOGUSMX	rbleval:check_rbl_from_host('rfci-bmx', 'bogusmx.rfc-ignorant.org.')
describe T_RCVD_IN_BOGUSMX	Received via a relay in BogusMX (rfc-ignorant.org)
tflags T_RCVD_IN_BOGUSMX	net

# bug 2071
body            T_GEVALIACOFFEE           /\bGevalia (?:Coffee|Kaffe)\b/i
describe        T_GEVALIACOFFEE           Selling Gevalia Coffee

# bug 2970: Bob Menschel's "longwords" rules
# describe LONGWORDS Long string of long words
body     T_RM_BPT_LONGWORDS_5_6_A /\b(?:[a-z]{5,}\s+){6}/
body     T_RM_BPT_LONGWORDS_5_7_A /\b(?:[a-z]{5,}\s+){7}/
body     T_RM_BPT_LONGWORDS_5_8_A /\b(?:[a-z]{5,}\s+){8}/
body     T_RM_BPT_LONGWORDS_5_9_A /\b(?:[a-z]{5,}\s+){9}/
body     T_RM_BPT_LONGWORDS_5_10_A /\b(?:[a-z]{5,}\s+){10}/
body     T_RM_BPT_LONGWORDS_6_6_A /\b(?:[a-z]{6,}\s+){6}/
body     T_RM_BPT_LONGWORDS_6_7_A /\b(?:[a-z]{6,}\s+){7}/
body     T_RM_BPT_LONGWORDS_6_8_A /\b(?:[a-z]{6,}\s+){8}/
body     T_RM_BPT_LONGWORDS_6_9_A /\b(?:[a-z]{6,}\s+){9}/
body     T_RM_BPT_LONGWORDS_6_10_A /\b(?:[a-z]{6,}\s+){10}/
body     T_RM_BPT_LONGWORDS_7_6_A /\b(?:[a-z]{7,}\s+){6}/
body     T_RM_BPT_LONGWORDS_7_7_A /\b(?:[a-z]{7,}\s+){7}/
body     T_RM_BPT_LONGWORDS_7_8_A /\b(?:[a-z]{7,}\s+){8}/
body     T_RM_BPT_LONGWORDS_7_9_A /\b(?:[a-z]{7,}\s+){9}/
body     T_RM_BPT_LONGWORDS_7_10_A /\b(?:[a-z]{7,}\s+){10}/
body     T_RM_BPT_LONGWORDS_8_6_A /\b(?:[a-z]{8,}\s+){6}/
body     T_RM_BPT_LONGWORDS_8_7_A /\b(?:[a-z]{8,}\s+){7}/
body     T_RM_BPT_LONGWORDS_8_8_A /\b(?:[a-z]{8,}\s+){8}/
body     T_RM_BPT_LONGWORDS_8_9_A /\b(?:[a-z]{8,}\s+){9}/
body     T_RM_BPT_LONGWORDS_8_10_A /\b(?:[a-z]{8,}\s+){10}/
body     T_RM_BPT_LONGWORDS_9_6_A /\b(?:[a-z]{9,}\s+){6}/
body     T_RM_BPT_LONGWORDS_9_7_A /\b(?:[a-z]{9,}\s+){7}/
body     T_RM_BPT_LONGWORDS_9_8_A /\b(?:[a-z]{9,}\s+){8}/
body     T_RM_BPT_LONGWORDS_9_9_A /\b(?:[a-z]{9,}\s+){9}/
body     T_RM_BPT_LONGWORDS_9_10_A /\b(?:[a-z]{9,}\s+){10}/
body     T_RM_BPT_LONGWORDS_10_6_A /\b(?:[a-z]{10,}\s+){6}/
body     T_RM_BPT_LONGWORDS_10_7_A /\b(?:[a-z]{10,}\s+){7}/
body     T_RM_BPT_LONGWORDS_10_8_A /\b(?:[a-z]{10,}\s+){8}/
body     T_RM_BPT_LONGWORDS_10_9_A /\b(?:[a-z]{10,}\s+){9}/
body     T_RM_BPT_LONGWORDS_10_10_A /\b(?:[a-z]{10,}\s+){10}/

# "www" hidden as "%77%77%77", "ww%77", etc.
# note: *not* anchored to start of string, to catch use of redirectors
uri	 T_HTTP_77	/http:\/\/.{0,2}\%77/
describe T_HTTP_77	Contains a URL-encoded hostname (HTTP77)

# Interesting new feature; spamware HELO'ing, from a dialup IP addr,
# using that IP's rDNS entry.  We can catch this easily.
#
# Note the '^[^\]]+ ' stanza: this ensures that we only match spamware
# connecting to a trusted relay; if a mail came from a dynamic addr but
# was relayed through their smarthost, that's fine.

# dhcp024-210-034-053.columbus.rr.com [24.210.34.53]
# c-66-176-16-108.se.client2.attbi.com [66.176.16.108]
# c-67-168-174-61.client.comcast.net [67.168.174.61]
# NNN-NNN-NNN-NNN.fibertel.com.ar
# NN.NN.NNN.NNN.ap.yournet.ne.jp
# NN.NNN.NN-NN.rev.gaoland.net
# (require an alpha first, as legit HELO'ing-as-IP-address is hit otherwise)
header T_HELO_DYNAMIC_IPADDR X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=[a-z]\S*\d+\D\d+\D\d+\D\d+\D[^\.]*\.\S+\.\S+/i
header T_HELO_DYNAMIC_IPADDR2 X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=\d+\D\d+\D\d+\D\d+\D[^\.]*\.\S+\.\S+/i
# dhcp024-210-034-053.columbus.rr.com [24.210.34.53]
header T_HELO_DYNAMIC_RR   X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=\S*(?:docsis|cable|dsl|dhcp|cpe)\S*\d+\D+\d+/i
# fia83-8.dsl.hccnet.nl [62.251.8.83]
# fia160-115-100.dsl.hccnet.nl [80.100.115.160]
header T_HELO_DYNAMIC_HCC   X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=\S*\d+\D+\d+\S*\.(?:docsis|cable|dsl|adsl|dhcp|cpe)\./i
# f88114.upc-f.chello.nl [80.56.88.114]
header T_HELO_DYNAMIC_CHELLO X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=\S+upc-f\.chello\.nl/i
# h0002a5d76857.ne.client2.attbi.com [65.96.12.59]
header T_HELO_DYNAMIC_ATTBI  X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=\S+\d+\S+\.client2\.attbi\.com/i
# pcp04024417pcs.toresd01.pa.comcast.net [68.86.206.126]
# bgp542174bgs.ewndsr01.nj.comcast.net[68.38.144.91]
# CPE0004e2372711-CM000a73666706.cpe.net.cable.rogers.com
# CPE00e0184f0eba-CM014490118324.cpe.net.cable.rogers.com [24.43.109.140]
header T_HELO_DYNAMIC_ROGERS X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=CPE\d+\S+\.rogers\.com/i
# ca-morpark-cuda1-zone7-b-159.vnnyca.adelphia.net[67.23.129.159]
# tn-greenvillecuda1cable7a-36.atlaga.adelphia.net [68.171.113.36]
# ky-richmond2a-123.rhmdky.adelphia.net [68.71.36.123]
# ny-lackawannacadent4-chtwga3a-b-117.buf.adelphia.net [68.71.205.117]
# fl-edel-u2-c3c-233.pbc.adelphia.net [68.64.89.233]
header T_HELO_DYNAMIC_ADELPHIA X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=[a-z]{2}-\S+-\d{1,3}\.[a-z]{3,8}\.adelphia\.net/i
# pD9E4F89F.dip.t-dialin.net [217.228.248.159]
header T_HELO_DYNAMIC_DIALIN X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=[a-z][A-F0-9]+\.dip\./
# 0xd5aaf40b.dhcp.kabelnettet.dk
# 0x50a46949.virnxx11.adsl-dhcp.tele.dk
header T_HELO_DYNAMIC_HEXIP X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=0x[a-f0-9]{8}\./
# 118.Red-80-35-201.pooles.rima-tde.net
header T_HELO_DYNAMIC_SPLIT_IP X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=\d+\.\S+\d+\D\d+\D\d+\D/
# YahooBB219173000034.bbtec.net [219.173.0.34]
header T_HELO_DYNAMIC_YAHOOBB X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=YahooBB/i
# ool-18be1aaf.dyn.optonline.net [24.190.26.175]
header T_HELO_OPTONLINE X-Spam-Relays-Untrusted =~ /^[^\]]+ helo=\S+\.dyn\.optonline\.net/

# TODO:
# port-212-202-77-203.reverse.qsc.de [212.202.77.203]
# Computer-udp135632uds.union01.nj.comcast.net [68.39.99.32]
# lns-vlq-11-62-147-186-141.adsl.proxad.net [62.147.186.141]
# pD9E62653.dip.t-dialin.net [217.230.38.83]
# g1u3v7.cpe.net.cable.rogers.com [24.230.206.35]
# h00096b2fb5ff.ne.client2.attbi.com [24.34.132.193]
# c-67-164-133-216.client.comcast.net [67.164.133.216]
# d53-64-35-171.nap.wideopenwest.com [64.53.171.35]
# CM-vina5-168-207.cm.vtr.net [200.104.168.207]
# h234n2fls32o895.telia.com [217.208.73.234]
# vaise-1-82-67-44-166.fbx.proxad.net [82.67.44.166]
# cpe-069-132-010-017.carolina.rr.com [69.132.10.17]
# 200-171-228-6.customer.telesp.net.br [200.171.228.6]
# wiley-170-10231.roadrunner.nf.net [205.251.210.249]
# modemcable090.28-201-24.mc.videotron.ca [24.201.28.90]
# CM-anto1-98-153.cm.vtr.net [200.104.98.153]
# 80-218-47-160.dclient.hispeed.ch [80.218.47.160]
# adsl-64-170-53-19.dsl.lsan03.pacbell.net [64.170.53.19]
# catv-506237d8.miskcatv.broadband.hu [80.98.55.216]
# dsl-200-95-109-107.prod-infinitum.com.mx [200.95.109.107]
# user-0can22v.cable.mindspring.com [24.171.136.95]
# fgwcq@74.67-201-80.adsl.skynet.be [80.201.67.74]
# lnngmi06edg01-xdata2-a3.lnngmi.tds.net [134.215.229.67]
# cdm-68-226-239-16.laft.cox-internet.com [68.226.239.16]
# adsl-68-248-121-117.dsl.applwi.ameritech.net [68.248.121.117]
# pool-151-203-32-68.bos.east.verizon.net [151.203.32.68]
# 12-218-225-223.client.mchsi.com [12.218.225.223]

# some simple subject rules to catch a persistent spammer
header T_SUBJ_XANAX		Subject =~ /x.{0,2}a.{0,2}n.{0,2}a.{0,2}x/i
header T_SUBJ_VALIUM		Subject =~ /v.{0,2}a.{0,2}l.{0,2}i.{0,2}u.{0,2}m/i
header T_SUBJ_DRUG_ED_V		Subject =~ /v.{0,2}i.{0,2}a.{0,2}g.{0,2}r.{0,2}a/i
header T_SUBJ_VICODIN		Subject =~ /v.{0,2}i.{0,2}c.{0,4}d.{0,2}i.{0,2}n/i
header T_SUBJ_VICODIN_2		Subject =~ /v.{0,2}i.{0,2}c.{0,3}d.{0,2}i.{0,2}n/i
header T_SUBJ_VICODIN_3		Subject =~ /v.{0,2}i.{0,2}c.{0,3}[0o].{0,2}d.{0,2}i.{0,2}n/i
header T_SUBJ_VICODIN_4		Subject =~ /v.{0,2}i.{0,2}c.{0,2}[0o].{0,2}d.{0,2}i.{0,2}n/i
header T_SUBJ_SOMA		Subject =~ /\bs.{0,1}o.{0,1}m.{0,1}a\b/i
header T_SUBJ_PHENTER		Subject =~ /p.{0,2}h.{0,6}t.{0,2}e.{0,2}r.{0,2}m/i
header T_SUBJ_DRUG_ED_C		Subject =~ /\bc.{0,2}i.{0,2}a.{0,2}l.{0,2}i.{0,2}s\b/i
header T_SUBJ_DRUG_ED_L		Subject =~ /l.{0,2}e.{0,2}v.{0,2}i.{0,2}t.{0,2}r.{0,2}a/i

# partial messages; currently-theoretical attack
header T_FRAGMENTED_MESSAGE	Content-Type =~ /message\/partial/i

# affiliateid, aff_id, aff_sub_id etc.
uri T_URI_AFFILIATE		/aff\w+id=/i

# some HTML rules to try
body T_HTML_TAG_BALANCE_FONT_0	eval:html_tag_balance('font', '!= 0')
describe T_HTML_TAG_BALANCE_FONT_0	HTML has unbalanced "font" tags

body T_HTML_TAG_BALANCE_FONT_1	eval:html_tag_balance('font', '> 0')
describe T_HTML_TAG_BALANCE_FONT_1	HTML is missing "font" close tags

body T_HTML_TAG_BALANCE_FONT_2	eval:html_tag_balance('font', '> 1')
describe T_HTML_TAG_BALANCE_FONT_2	HTML is missing some "font" close tags

body T_HTML_TAG_BALANCE_DIV_1	eval:html_tag_balance('div', '!= 0')
describe T_HTML_TAG_BALANCE_DIV_1	HTML has unbalanced "font" tags

body T_HTML_TAG_BALANCE_DIV_2	eval:html_tag_balance('div', '> 0')
describe T_HTML_TAG_BALANCE_DIV_2	HTML is missing "div" tags

body T_HTML_FONT_SMALL_SIZE_1	eval:html_eval('min_size', '< 1')
body T_HTML_FONT_SMALL_SIZE_2	eval:html_eval('min_size', '< 0')
body T_HTML_FONT_SMALL_SIZE_3	eval:html_eval('min_size', '< -1')

body T_HTML_FONT_LARGE_SIZE	eval:html_eval('max_size', '> 3')
body T_HTML_FONT_LARGE_SIZE_0	eval:html_eval('max_size', '> 4')
body T_HTML_FONT_LARGE_SIZE_1	eval:html_eval('max_size', '> 5')
body T_HTML_FONT_LARGE_SIZE_2	eval:html_eval('max_size', '> 6')
body T_HTML_FONT_LARGE_SIZE_3	eval:html_eval('max_size', '> 7')
body T_HTML_FONT_LARGE_SIZE_4	eval:html_eval('max_size', '> 8')

########################################################################

header T_RCVD_BONUS_SPC_DATE	Received =~ /with SMTP;  \d\d \S\S\S /

# bug 1985
body T_URGENT_BIZ /urgent.{0,16}(?:assistance|business|buy|confidential|notice|proposal|reply|request|response)/i

# bug 2950
uri T_GOOGLE_IMAGES	m{^http://images\.google(\.\S+)?\.[a-z]{2,3}/imgres\?}i
uri T_GOOGLE_REDIR	m{^http://www\.google(\.\S+)?\.[a-z]{2,3}/url\?}i

# bug 2996: HTML attribute testing
body T_HTML_ATTR_00_10	eval:html_range('attr_bad','0.0','0.1')
body T_HTML_ATTR_10_20	eval:html_range('attr_bad','0.1','0.2')
body T_HTML_ATTR_20_30	eval:html_range('attr_bad','0.2','0.3')
body T_HTML_ATTR_30_40	eval:html_range('attr_bad','0.3','0.4')
body T_HTML_ATTR_40_50	eval:html_range('attr_bad','0.4','0.5')
body T_HTML_ATTR_50_75	eval:html_range('attr_bad','0.5','0.75')
body T_HTML_ATTR_75_100	eval:html_range('attr_bad','0.75','1.0')

body T_HTML_ATTR_UNIQUE_00_10	eval:html_range('attr_unique_bad','0.0','0.1')
body T_HTML_ATTR_UNIQUE_10_20	eval:html_range('attr_unique_bad','0.1','0.2')
body T_HTML_ATTR_UNIQUE_20_30	eval:html_range('attr_unique_bad','0.2','0.3')
body T_HTML_ATTR_UNIQUE_30_40	eval:html_range('attr_unique_bad','0.3','0.4')
body T_HTML_ATTR_UNIQUE_40_50	eval:html_range('attr_unique_bad','0.4','0.5')
body T_HTML_ATTR_UNIQUE_50_75	eval:html_range('attr_unique_bad','0.5','0.75')
body T_HTML_ATTR_UNIQUE_75_100	eval:html_range('attr_unique_bad','0.75','1.0')

body     T_SILDENAFIL          /\bsildenafil\b/i
describe T_SILDENAFIL          Talks about viagra using its chemical name

# http://www.ahbl.org/using/spamassassin.txt :
# SpamAssassin local.cf for AHBL BlackList / BlockList
# "Old blackholes.2mbit.com resurrected as AHBL (dnsbl.ahbl.org)"
# URL: http://www.ahbl.org
header __RCVD_IN_AHBL eval:check_rbl('ahbl', 'dnsbl.ahbl.org.')
describe __RCVD_IN_AHBL AHBL: sender is in DNSbl dnsbl.ahbl.org
tflags __RCVD_IN_AHBL net

header T_RCVD_IN_AHBL_UNKNOWN_1 eval:check_rbl_sub('ahbl', '127.0.0.1')
describe T_RCVD_IN_AHBL_UNKNOWN_1 AHBL: Unknown Category 1 (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_UNKNOWN_1 net

header T_RCVD_IN_AHBL_SMTP eval:check_rbl_sub('ahbl', '127.0.0.2')
describe T_RCVD_IN_AHBL_SMTP AHBL: Open SMTP relay (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_SMTP net

header T_RCVD_IN_AHBL_PROXY eval:check_rbl_sub('ahbl', '127.0.0.3')
describe T_RCVD_IN_AHBL_PROXY AHBL: Open Proxy server (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_PROXY net

header T_RCVD_IN_AHBL_SPAM eval:check_rbl_sub('ahbl', '127.0.0.4')
describe T_RCVD_IN_AHBL_SPAM AHBL: Spam Source (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_SPAM net

header T_RCVD_IN_AHBL_RTB eval:check_rbl_sub('ahbl', '127.0.0.5')
describe T_RCVD_IN_AHBL_RTB AHBL: Real-Time Blocked (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_RTB net

header T_RCVD_IN_AHBL_FORMMAIL eval:check_rbl_sub('ahbl', '127.0.0.6')
describe T_RCVD_IN_AHBL_FORMMAIL AHBL: Abuseable Form Mail (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_FORMMAIL net

header T_RCVD_IN_AHBL_SPAM_SUPPORT eval:check_rbl_sub('ahbl', '127.0.0.7')
describe T_RCVD_IN_AHBL_SPAM_SUPPORT AHBL: Spam Supporter (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_SPAM_SUPPORT net

header T_RCVD_IN_AHBL_I_SPAM_SUPPORT eval:check_rbl_sub('ahbl', '127.0.0.8')
describe T_RCVD_IN_AHBL_I_SPAM_SUPPORT AHBL: Indirect Spam supporter (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_I_SPAM_SUPPORT net

header T_RCVD_IN_AHBL_ENDUSER eval:check_rbl_sub('ahbl', '127.0.0.9')
describe T_RCVD_IN_AHBL_ENDUSER AHBL: End User listed (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_ENDUSER net

header T_RCVD_IN_AHBL_SOS eval:check_rbl_sub('AHBL-notfirsthop', '127.0.0.10')
describe T_RCVD_IN_AHBL_SOS AHBL: Shoot On Sight (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_SOS net

header T_RCVD_IN_AHBL_RFCI_PA eval:check_rbl_sub('ahbl', '127.0.0.11')
describe T_RCVD_IN_AHBL_RFCI_PA AHBL: No Postmaster/Abuse Address (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_RFCI_PA net

header T_RCVD_IN_AHBL_5XXI eval:check_rbl_sub('ahbl', '127.0.0.12')
describe T_RCVD_IN_AHBL_5XXI AHBL: Spurious 5xx error handling (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_5XXI net

header T_RCVD_IN_AHBL_RFCI_MISC eval:check_rbl_sub('ahbl', '127.0.0.13')
describe T_RCVD_IN_AHBL_RFCI_MISC AHBL: Other Non-RFC Compliant (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_RFCI_MISC net

header T_RCVD_IN_AHBL_CMPR_DDOS eval:check_rbl_sub('ahbl', '127.0.0.14')
describe T_RCVD_IN_AHBL_CMPR_DDOS AHBL: Compromised - DDoS (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_CMPR_DDOS net

header T_RCVD_IN_AHBL_CMPR_RELAY eval:check_rbl_sub('ahbl', '127.0.0.15')
describe T_RCVD_IN_AHBL_CMPR_RELAY AHBL: Compromised - Relay (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_CMPR_RELAY net

header T_RCVD_IN_AHBL_CMPR_SCAN eval:check_rbl_sub('ahbl', '127.0.0.16')
describe T_RCVD_IN_AHBL_CMPR_SCAN AHBL: Compromised - Autorooter/Scanner
tflags T_RCVD_IN_AHBL_CMPR_SCAN net

header T_RCVD_IN_AHBL_CMPR_WORM eval:check_rbl_sub('ahbl', '127.0.0.17')
describe T_RCVD_IN_AHBL_CMPR_WORM AHBL: Compromised - Worm or mass mailing virus
tflags T_RCVD_IN_AHBL_CMPR_WORM net

header T_RCVD_IN_AHBL_CMPR_VIRUS eval:check_rbl_sub('ahbl', '127.0.0.18')
describe T_RCVD_IN_AHBL_CMPR_VIRUS AHBL: Compromised - Other virus
tflags T_RCVD_IN_AHBL_CMPR_VIRUS net

header T_RCVD_IN_AHBL_OTHER eval:check_rbl_sub('ahbl', '127.0.0.127')
describe T_RCVD_IN_AHBL_OTHER AHBL: Other (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_OTHER net

header T_RCVD_IN_AHBL_EXEMPT_T	eval:check_rbl('ahbl-ex-firsttrusted', 'exemptions.ahbl.org.')
describe T_RCVD_IN_AHBL_EXEMPT_T AHBL: Sender is in Exempt zone (trusted)
tflags T_RCVD_IN_AHBL_EXEMPT_T	net nice

header T_RCVD_IN_AHBL_EXEMPT_O	eval:check_rbl('ahbl-ex-untrusted', 'exemptions.ahbl.org.')
describe T_RCVD_IN_AHBL_EXEMPT_O AHBL: Sender is in Exempt zone (other)
tflags T_RCVD_IN_AHBL_EXEMPT_O	net nice

header T_RCVD_IN_AHBL_RHSBL	eval:check_rbl_from_host('ahbl-rhs', 'rhsbl.ahbl.org.')
describe T_RCVD_IN_AHBL_RHSBL	AHBL: From sender in DNSbl dnsbl.ahbl.org
tflags T_RCVD_IN_AHBL_RHSBL	net

# these are here for testing and debugging improvements to the HTML
# rendering code
body T_HTML_TEXT_CONTRAST_16	eval:html_test('text_contrast_16')
body T_HTML_TEXT_CONTRAST_24	eval:html_test('text_contrast_24')
body T_HTML_TEXT_CONTRAST_32	eval:html_test('text_contrast_32')

# bug 2164
# You must be joking, can you say "unix pipes" and "regular expressions"?
body T_PIPE_OBFU           /[a-z]\|[a-z]/i
describe T_PIPE_OBFU       Words dis|guised with a pipe sym|bol

# bug 2525: FORGED_IMS_HTML fp'ing because new IMS *DOES* use text/html
# ctype.  ARGH.  This was noted in build 5.5.2656.59, so permit builds
# after that to get away with it.
# compare against FORGED_IMS_HTML
header __IMS_HTML_BUILDS     X-Mailer =~ /^Internet Mail Service .(?:[6789]\.|5\.[6789]|5\.5\.(?:[3456789]|2[789]|26[6789]|265[6789]))/
header __IMS_HTML_RCVD	     Received =~ /\bby \S+ with Internet Mail Service .(?:[6789]\.|5\.[6789]|5\.5\.(?:[3456789]|2[789]|26[6789]|265[6789]))/
meta T_FORGED_IMS_HTML       (__IMS_MUA && MIME_HTML_ONLY && !(__IMS_HTML_BUILDS && __IMS_HTML_RCVD))
describe T_FORGED_IMS_HTML   IMS can't send HTML message only

# bug 2973: "opt2.com" is net a spammy domain.
# compare against OPT_HEADER
header __T_OPT_HEADER_SUBJ   ALL =~ /^(?:Resent-)?Subject:.*opt.?(in|out|oem|ion-in)(?:\b|\d|\@)/im
header __T_OPT_HEADER_ALL    ALL =~ /opt.?(?:in|out|oem|ion-in)(?:\b|\d|\@)/i
meta T_OPT_HEADER            (__T_OPT_HEADER_ALL && !__T_OPT_HEADER_SUBJ)
describe T_OPT_HEADER        Headers include an "opt"ed phrase

body T_HTML_COMMENT_TAG		eval:html_text('comment', '=~ /<.*?>/')
describe T_HTML_COMMENT_TAG	HTML comment probably contains HTML tag

# back to the drawing board (demoted for development or deletion)
header T_FAKED_IP_IN_RCVD	Received =~ /from [-0-9a-z\._]+_\[\d+\.\d+\.\d+\.\d+\] /i
describe T_FAKED_IP_IN_RCVD	Received: contains a name with a faked IP-address

# Should catch Atriks, for one
uri T_LONG_HOSTNAME_20		/^https?:\/\/[a-z0-9]{20,24}\./i
uri T_LONG_HOSTNAME_25		/^https?:\/\/[a-z0-9]{25,29}\./i
uri T_LONG_HOSTNAME_30		/^https?:\/\/[a-z0-9]{30,40}\./i
uri T_LONG_HOSTNAME_40		/^https?:\/\/[a-z0-9]{40,}\./i

# bug 2809: PRIORITY_NO_NAME FPs on mails with no X-Mailer but with a User-Agent
header __USER_AGENT             exists:User-Agent
meta T_PRIORITY_NO_NAME         ((__HAS_X_PRIORITY || __HAS_MSMAIL_PRI) && !__HAS_X_MAILER && !__IS_EXCH && !__USER_AGENT)

# bug 2876: catch faked Reply messages
header __HAS_THREAD_TOPIC	exists:Thread-Topic
header __HAS_IRT		exists:In-Reply-To
header __HAS_REFS		exists:References
header __HAS_SUBJ_RE		Subject =~ /^re: /i
meta T_REPLY_WITHOUT_HDRS	(__HAS_SUBJ_RE && !(__HAS_THREAD_TOPIC || __HAS_IRT || __HAS_REFS))

# a new test idea. most ratware uses message templates I would guess.
# Here's two popular ones...
header T_HDR_ORDER_TRIMRS	ALL =~ /\nTo: [^\n]+\nReferences: <\S+@\S+>\nIn-Reply-To: <\S+@\S+>\nMessage-ID: <\S+@\S+>\nReply-To: [^\n]+\nSender: /
header T_HDR_ORDER_MTSRIX	ALL =~ /\nMessage-ID: <\S+@\S+>\nTo: [^\n]+ <\S+>\nSubject: [^\n]+\nReferences: <\S+@\S+>\nIn-Reply-To: <\S+@\S+>\nX-Mailer: /

body T_DOMAIN_RATIO_001		eval:domain_ratio('0.001')
body T_DOMAIN_RATIO_002		eval:domain_ratio('0.002')
body T_DOMAIN_RATIO_003		eval:domain_ratio('0.003')
body T_DOMAIN_RATIO_004		eval:domain_ratio('0.004')
body T_DOMAIN_RATIO_005		eval:domain_ratio('0.005')
body T_DOMAIN_RATIO_006		eval:domain_ratio('0.006')
body T_DOMAIN_RATIO_007		eval:domain_ratio('0.007')
body T_DOMAIN_RATIO_008		eval:domain_ratio('0.008')
body T_DOMAIN_RATIO_009		eval:domain_ratio('0.009')
body T_DOMAIN_RATIO_010		eval:domain_ratio('0.010')
body T_DOMAIN_RATIO_011		eval:domain_ratio('0.011')
body T_DOMAIN_RATIO_012		eval:domain_ratio('0.012')
body T_DOMAIN_RATIO_013		eval:domain_ratio('0.013')
body T_DOMAIN_RATIO_014		eval:domain_ratio('0.014')
body T_DOMAIN_RATIO_015		eval:domain_ratio('0.015')
body T_DOMAIN_RATIO_016		eval:domain_ratio('0.016')
body T_DOMAIN_RATIO_017		eval:domain_ratio('0.017')
body T_DOMAIN_RATIO_018		eval:domain_ratio('0.018')
body T_DOMAIN_RATIO_019		eval:domain_ratio('0.019')
body T_DOMAIN_RATIO_020		eval:domain_ratio('0.020')
body T_DOMAIN_RATIO_021		eval:domain_ratio('0.021')
body T_DOMAIN_RATIO_022		eval:domain_ratio('0.022')
body T_DOMAIN_RATIO_023		eval:domain_ratio('0.023')
body T_DOMAIN_RATIO_024		eval:domain_ratio('0.024')
body T_DOMAIN_RATIO_025		eval:domain_ratio('0.025')
body T_DOMAIN_RATIO_026		eval:domain_ratio('0.026')
body T_DOMAIN_RATIO_027		eval:domain_ratio('0.027')
body T_DOMAIN_RATIO_028		eval:domain_ratio('0.028')
body T_DOMAIN_RATIO_029		eval:domain_ratio('0.029')
body T_DOMAIN_RATIO_030		eval:domain_ratio('0.030')
body T_DOMAIN_RATIO_031		eval:domain_ratio('0.031')
body T_DOMAIN_RATIO_032		eval:domain_ratio('0.032')
body T_DOMAIN_RATIO_033		eval:domain_ratio('0.033')
body T_DOMAIN_RATIO_034		eval:domain_ratio('0.034')
body T_DOMAIN_RATIO_035		eval:domain_ratio('0.035')
body T_DOMAIN_RATIO_036		eval:domain_ratio('0.036')
body T_DOMAIN_RATIO_037		eval:domain_ratio('0.037')
body T_DOMAIN_RATIO_038		eval:domain_ratio('0.038')
body T_DOMAIN_RATIO_039		eval:domain_ratio('0.039')
body T_DOMAIN_RATIO_040		eval:domain_ratio('0.040')
body T_DOMAIN_RATIO_041		eval:domain_ratio('0.041')
body T_DOMAIN_RATIO_042		eval:domain_ratio('0.042')
body T_DOMAIN_RATIO_043		eval:domain_ratio('0.043')
body T_DOMAIN_RATIO_044		eval:domain_ratio('0.044')
body T_DOMAIN_RATIO_045		eval:domain_ratio('0.045')
body T_DOMAIN_RATIO_046		eval:domain_ratio('0.046')
body T_DOMAIN_RATIO_047		eval:domain_ratio('0.047')
body T_DOMAIN_RATIO_048		eval:domain_ratio('0.048')
body T_DOMAIN_RATIO_049		eval:domain_ratio('0.049')
body T_DOMAIN_RATIO_050		eval:domain_ratio('0.050')

# other possibly good formats
header T_RCVD_DOUBLE_IP_SPAM_1	Received =~ /from \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3};/
header T_RCVD_DOUBLE_IP_SPAM_2	Received =~ /from \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/
header T_RCVD_DOUBLE_IP_SPAM_3	Received =~ /from \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1) by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1);/
header T_RCVD_DOUBLE_IP_SPAM_4	Received =~ /from \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1) by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\b/
header T_RCVD_DOUBLE_IP_SPAM_5	Received =~ /from \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1);/
header T_RCVD_DOUBLE_IP_SPAM_6	Received =~ /from \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\b/
header T_RCVD_DOUBLE_IP_SPAM_7	Received =~ /from \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1) by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3};/
header T_RCVD_DOUBLE_IP_SPAM_8	Received =~ /from \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1) by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/
header T_RCVD_DOUBLE_IP_SPAM_9	Received =~ /from\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\sby\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3};/
header T_RCVD_DOUBLE_IP_SPAM_10	Received =~ /from\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\sby\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/
header T_RCVD_DOUBLE_IP_SPAM_11	Received =~ /from\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\sby\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1);/
header T_RCVD_DOUBLE_IP_SPAM_12	Received =~ /from\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\sby\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\b/
header T_RCVD_DOUBLE_IP_SPAM_13	Received =~ /from\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\sby\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1);/
header T_RCVD_DOUBLE_IP_SPAM_14	Received =~ /from\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\sby\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\b/
header T_RCVD_DOUBLE_IP_SPAM_15	Received =~ /from\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\sby\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3};/
header T_RCVD_DOUBLE_IP_SPAM_16	Received =~ /from\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\sby\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/
header T_RCVD_DOUBLE_IP_SPAM_17	Received =~ /from\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\s+by\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3};/
header T_RCVD_DOUBLE_IP_SPAM_18	Received =~ /from\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\s+by\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/
header T_RCVD_DOUBLE_IP_SPAM_19	Received =~ /from\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\s+by\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1);/
header T_RCVD_DOUBLE_IP_SPAM_20	Received =~ /from\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\s+by\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\b/
header T_RCVD_DOUBLE_IP_SPAM_21	Received =~ /from\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\s+by\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1);/
header T_RCVD_DOUBLE_IP_SPAM_22	Received =~ /from\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\s+by\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\b/
header T_RCVD_DOUBLE_IP_SPAM_23	Received =~ /from\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\s+by\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3};/
header T_RCVD_DOUBLE_IP_SPAM_24	Received =~ /from\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?<!127\.0\.0\.1)\s+by\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/

# bug 2220
meta T_DIGEST_MULTIPLE       RAZOR2_CHECK + DCC_CHECK + PYZOR_CHECK > 1
describe T_DIGEST_MULTIPLE   Message hits more than one network digest check

# too easy.
body T_SUBJ_VIA_GRA		/\bvia.gra\b/i

# spams that are assembled from a Javascript array
rawbody T_JS_FROMCHARCODE	/String\.fromCharCode/

