# SpamAssassin rules file: rules under test, $Rev$
#
# This file is a placeholder for rules "under probation", i.e. checked into
# SVN for testing. It should not be distributed; if the rules have good
# stats after a mass-check or two, then fold them into the distributed
# rules files.
#
# I suggest adding a prefix to rules in this file, "T_" -- this
# helps identify probationary rules in test output.
#
# <@LICENSE>
# Copyright 2004 Apache Software Foundation
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# </@LICENSE>
#
########################################################################

# header T_FORGED_IN_WHITELIST      eval:check_forged_in_whitelist()
# describe T_FORGED_IN_WHITELIST    Forged From: is in user's white-list
# tflags T_FORGED_IN_WHITELIST      userconf
#
# header T_FORGED_DEF_WHITELIST     eval:check_forged_in_default_whitelist()
# describe T_FORGED_DEF_WHITELIST   Forged From: is in default white-list
# tflags T_FORGED_DEF_WHITELIST     userconf

# testing for Jeff, do not use!!!
ifplugin Mail::SpamAssassin::Plugin::URIDNSBL
urirhsbl T_URIBL_MP fraud.rhs.mailpolice.com.   A
body     T_URIBL_MP eval:check_uridnsbl('URIBL_MP')
describe T_URIBL_MP URI's domain appears in MailPolice fraud list
tflags   T_URIBL_MP net
endif	# Mail::SpamAssassin::Plugin::URIDNSBL

##########################################################################
# bug 2843

header   T_LEADINGPREP       From =~ /^(?:A|About|All|An|And|Any|As|At|Be|Best|Bulk|Cash|Earn|Easy|Fast|Find|For|Free|From|Get|Hi|Home|In|Instant|Is|It|Its|Limited|Lose|Love|Make|Need|New|No|Save|Sex|She|Special|Stock|Stop|Take|Test|There|This|To|Try|Want|We|What|Where|Why|You|Your)[_ ]/i
describe T_LEADINGPREP       From begins with preposition or similar word

header    T_WORTHCASH        Subject =~ /\b(?:Worth|Win|take|extra|earn|dollars|Short|need|claim|free|get|opinions?|surveys?)\b.{0,15}(?:fast)?(?:C[a\@]sh|M[0o]ney)\b/i
describe  T_WORTHCASH        Subject mentions something is worth cash

header    T_FOREVER       Subject =~ /\bf[\W_]?(?:\[\]|\(\)|[o0\*\xD2-\xD6\xF2-\xF6])[\W_]?[r\xAE][\W_]?[e3\*\xC8-\xCB\xE8-\xEB][\W_]?[vu][\W_]?[e3\*\xC8-\xCB\xE8-\xEB][\W_]?[r\xAE]\b/i
describe  T_FOREVER       Forever in Subject

header    T_SUBJPROVEN        Subject =~ /\bp[\W_]?[r\xAE][\W_]?(?:\[\]|\(\)|[o0\*\xD2-\xD6\xF2-\xF6])[\W_]?[vu][\W_]?[e3\*\xC8-\xCB\xE8-\xEB][\W_]?[n\xD1\xF1]\b/i
describe  T_SUBJPROVEN        Proven in Subject

header    T_SUBJDEBT         Subject =~ /[d\xD0][\W_]?[e3\*\xC8-\xCB\xE8-\xEB][\W_]?[b8\xDF][\W_]?t/i
describe  T_SUBJDEBT         Subject mentions debt

header    T_INVESTORS         Subject =~ /investors/i
describe  T_INVESTORS         Subject mentions investors

header    T_PAYING            Subject =~ /Paying/i
describe  T_PAYING            Subject mentions Paying for something

header    T_SUBJDRUGS       Subject =~ /[vu][\W_]?[il1:\|\*\xCC-\xCF\xEC-\xEF][\W_]?[a4\*\@\xC0-\xC5\xAA\xE0-\xE5][\W_]?[g6][\W_]?[r\xAE][\W_]?[a4\*\@\xC0-\xC5\xAA\xE0-\xE5]/i
describe  T_SUBJDRUGS       Subject mentions known spam subject

header    T_MEDICATION   Subject =~ /(?:\/\\\/\\|\/V\\|rn|[m])[\W_]?[e3\*\xC8-\xCB\xE8-\xEB][\W_]?[d\xD0][\W_]?[il1:\|\*\xCC-\xCF\xEC-\xEF][\W_]?[c\xC7\xE7\xA2\xA9][\W_]?[a4\*\@\xC0-\xC5\xAA\xE0-\xE5][\W_]?t[\W_]?[il1:\|\*\xCC-\xCF\xEC-\xEF][\W_]?(?:\[\]|\(\)|[o0\*\xD2-\xD6\xF2-\xF6])[\W_]?[n\xD1\xF1]/i
describe  T_MEDICATION   Subject mentions medication

header    T_MEDS          Subject =~ /m(e|3)ds/i
describe  T_MEDS          Meds in subject

header    T_CONSONANTS        Subject =~ /\b[bcghjklmnpqrstvwxz]{6,20}\b/
describe  T_CONSONANTS        Subject contains consecutive consonants in "word"

header    T_SPAMWORDS      Subject =~ /(?!tion)t[\W_]?[il1:\|\*\xCC-\xCF\xEC-\xEF][\W_]?(?:\[\]|\(\)|[o0\*\xD2-\xD6\xF2-\xF6])[\W_]?[n\xD1\xF1]/i
describe  T_SPAMWORDS      masked spam word(s) in subject

header    T_SPAMWORDS2      Subject =~ /(?!\bcheap(er)?)\b[c\xC7\xE7\xA2\xA9][\W_]?h[\W_]?[e3\*\xC8-\xCB\xE8-\xEB][\W_]?[a4\*\@\xC0-\xC5\xAA\xE0-\xE5][\W_]?p([e3\*\xC8-\xCB\xE8-\xEB][\W_]?[r\xAE])?/i
describe  T_SPAMWORDS2      masked spam word(s) in subject

header    T_PENIS          Subject =~ /\bpenis\b/i
describe  T_PENIS          masked spam word(s) in subject

header    T_SPAMWORDS4      Subject =~ /(?!\bpenis\b)\bp[\W_]?[e3\*\xC8-\xCB\xE8-\xEB][\W_]?[n\xD1\xF1][\W_]?[il1:\|\*\xCC-\xCF\xEC-\xEF][\W_]?[s5\$\xA7]\b/i
describe  T_SPAMWORDS4      masked spam word(s) in subject

header   T_TELESPRLY            Received =~ /dsl\.telesp\.net\.br/
describe T_TELESPRLY            Spam passed through known spam relay domain

##########################################################################

# bug 3570
# anti-phishing rules, will probably have a low hit-rate
#
#  0.057   0.0698   0.0000    1.000   0.55    0.01  T_FORGED_EBAY
#  0.047   0.0573   0.0000    1.000   0.54    0.01  T_FORGED_CITI
#  0.034   0.0412   0.0000    1.000   0.52    0.01  T_FORGED_SUNTRUST
#  0.016   0.0191   0.0000    1.000   0.49    0.01  T_FORGED_ABOUT
#  0.009   0.0112   0.0000    1.000   0.48    0.01  T_FORGED_PAYPAL

header   __RCVD_PAYPAL		Received =~ /\.paypal\.com\b/i
header   __FROM_PAYPAL		From =~ /[\@\.]paypal\.com\b/i
uri      __URI_PAYPAL		m{^https?://.{0,32}\bpaypal\.com\b}i
meta     T_FORGED_PAYPAL	(__FROM_PAYPAL && __URI_PAYPAL && !__RCVD_PAYPAL)
describe T_FORGED_PAYPAL	Message appears to be forged, (paypal.com)

header   __RCVD_EBAY		Received =~ /(?:email)?[^\s@]ebay\.com\b/i
header   __FROM_EBAY		From =~ /\@(?:email)?ebay\.com\b/i
uri      __URI_EBAY		m{^https?://.{0,32}\bebay\.com\b}i
meta     T_FORGED_EBAY		(__FROM_EBAY && __URI_EBAY && !__RCVD_EBAY)
describe T_FORGED_EBAY		Message appears to be forged, (ebay.com)

header   __RCVD_CITIBNK		Received =~ /\b(?:citi(?:bank|cards|corp|bankcards)|acxiom|c2it)\.com\b/i
header   __FROM_CITIBNK		From =~ /\bciti(?:bank)?\.com\b/i
uri      __URI_CITIBNK		m{^https?://.{0,32}\bciti(?:bank)?\.com\b}i
meta     T_FORGED_CITI		(__FROM_CITIBNK && __URI_CITIBNK && !__RCVD_CITIBNK)
describe T_FORGED_CITI		Message appears to be forged, (citibank.com)

header   __RCVD_SUNTRUST	Received =~ /\.suntrust\.com\b/i
header   __FROM_SUNTRUST	From =~ /[\@\.]suntrust\.com\b/i
uri      __URI_SUNTRUST		m{^https?://.{0,32}\bsuntrust\.com\b}i
meta     T_FORGED_SUNTRUST	(__FROM_SUNTRUST && __URI_SUNTRUST && !__RCVD_SUNTRUST)
describe T_FORGED_SUNTRUST	Message appears to be forged, (suntrust.com)

header   __RCVD_ABOUT_COM	Received =~ /\babout\.com\b/i
header   __FROM_ABOUT_COM	From =~ /\babout\.com\b/i
uri      __URI_ABOUT_COM	m{^https?://.{0,32}\babout\.com\b}i
meta     T_FORGED_ABOUT		(!__RCVD_ABOUT_COM && __FROM_ABOUT_COM && !__URI_ABOUT_COM)
describe T_FORGED_ABOUT		Message appears to be forged, (about.com)

##########################################################################

# http://bugzilla.spamassassin.org/show_bug.cgi?id=3645
header    T_SARE_SUB_DOLLARS    Subject =~ /^\s*(?:\w+ )?(?:\w+: )?\$\d+\s*$/
describe  T_SARE_SUB_DOLLARS    Subject is dollar sign and numerics only

# http://bugzilla.spamassassin.org/show_bug.cgi?id=2016
rawbody T_INTERRUPTUS           /(?:[a-zA-Z0-9]<[\/ ]{0,2}?(?!br)(?!p)(?!sup)(?!li)(?!b)(?!i)(?!option)(?!a (?:href|name))(?:\b|!--)[^>]{0,64}?>[a-zA-Z0-9].{0,64}){3}/i
describe T_INTERRUPTUS          Hypertextus Interruptus - HTML-obfuscated text

########################################################################

body T_NORMAL_HTTP_TO_IP	eval:check_numeric_http()

########################################################################

# bug 2004 - trivial rules
rawbody T_HTML_FONT_SIZE_0PX	/<font\b[^>]+0px/i
rawbody T_HTML_FONT_COLOR_WHITE	/<font\b[^>]+white/i

########################################################################

# bug 3999
header __HAS_REFERENCES		exists:References
meta T_PRIORITY_NO_NAME_BOTH		((__HAS_X_PRIORITY && __HAS_MSMAIL_PRI) && !__HAS_X_MAILER && !__IS_EXCH && !__USER_AGENT)
meta T_PRIORITY_NO_NAME_ONE		((__HAS_X_PRIORITY + __HAS_MSMAIL_PRI == 1) && !__HAS_X_MAILER && !__IS_EXCH && !__USER_AGENT)
meta T_PRIORITY_NO_NAME_BOTH_REF	((__HAS_X_PRIORITY && __HAS_MSMAIL_PRI) && !__HAS_X_MAILER && !__IS_EXCH && !__USER_AGENT && !__HAS_REFERENCES)
meta T_PRIORITY_NO_NAME_ONE_REF		((__HAS_X_PRIORITY + __HAS_MSMAIL_PRI == 1) && !__HAS_X_MAILER && !__IS_EXCH && !__USER_AGENT && !__HAS_REFERENCES)

########################################################################

# remove evals if these aren't promoted
header T_UNPARSEABLE_RELAY  eval:check_relays_unparseable()
#
header T_NO_RELAYS      eval:check_no_relays()
tflags T_NO_RELAYS      nice
#
header __NO_RCVD        exists:Received
meta T_NO_RCVD        (!__NO_RCVD)

# possible IDN spoofing attack: http://www.shmoo.com/idn/homograph.txt
# not expecting any hits on this (yet)
uri T_HIGH_CODEPAGE_URI         /^https?:\/\/[^\/]*\&\#(?:\d{4,}|[3456789]\d\d);/i

# bug 3013: poss replacements for RATWARE_HASH_2 and _2_V2
header T_RATWARE_HASH_2_A       X-Mailer =~ /^(?!com)(?!OpenGroupware)[A-Za-z0-9_\.]{16,}$/
header T_RATWARE_HASH_2_V2_A    X-Mailer =~ /^(?!com)(?!OpenGroupware)[A-Za-z0-9_\.]{14,}$/
header T_RATWARE_HASH_2_B       X-Mailer =~ /^[A-Za-z0-9_]{16,}$/
header T_RATWARE_HASH_2_V2_B    X-Mailer =~ /^[A-Za-z0-9_]{14,}$/
header T_RATWARE_HASH_2_C       X-Mailer =~ /^[A-Za-z0-9]{16,}$/
header T_RATWARE_HASH_2_V2_C    X-Mailer =~ /^[A-Za-z0-9]{14,}$/

uri T_HTML_JS_0			/^javascript:/i
uri T_HTML_JS_1			/^\s*javascript:/i
uri T_HTML_JS_2			/^javascript:.*;/is
uri T_HTML_JS_3			/^\s*javascript:.*;/is

uri T_HTML_JS_LONG_040		/^javascript:.{40}/is
uri T_HTML_JS_LONG_080		/^javascript:.{80}/is
uri T_HTML_JS_LONG_120		/^javascript:.{120}/is
uri T_HTML_JS_LONG_160		/^javascript:.{160}/is
uri T_HTML_JS_LONG_200		/^javascript:.{200}/is

uri T_HTML_JS_EXPR_1		/^javascript:.*;/is
uri T_HTML_JS_EXPR_2		/^javascript:.*;.*;/is
uri T_HTML_JS_EXPR_3		/^javascript:.*;.*;.*;/is
uri T_HTML_JS_EXPR_4		/^javascript:.*;.*;.*;.*;/is
uri T_HTML_JS_EXPR_5		/^javascript:.*;.*;.*;.*;.*;/is

body T_HTML_SCRIPT_0		eval:html_text_match('script', '.')
body T_HTML_SCRIPT_1		eval:html_text_match('script', ';')

body T_HTML_SCRIPT_LONG_040	eval:html_text_match('script', '.{40}')
body T_HTML_SCRIPT_LONG_080	eval:html_text_match('script', '.{80}')
body T_HTML_SCRIPT_LONG_120	eval:html_text_match('script', '.{120}')
body T_HTML_SCRIPT_LONG_160	eval:html_text_match('script', '.{160}')
body T_HTML_SCRIPT_LONG_200	eval:html_text_match('script', '.{200}')

body T_HTML_SCRIPT_EXPR_1	eval:html_text_match('script', ';')
body T_HTML_SCRIPT_EXPR_2	eval:html_text_match('script', ';.*;')
body T_HTML_SCRIPT_EXPR_3	eval:html_text_match('script', ';.*;.*;')
body T_HTML_SCRIPT_EXPR_4	eval:html_text_match('script', ';.*;.*;.*;')
body T_HTML_SCRIPT_EXPR_5	eval:html_text_match('script', ';.*;.*;.*;.*;')

header T_NUMINTERUPTUS		Subject =~ /\b[a-z]{2,}\d+[a-z]{2,}/i
header T_CRAZYCASE		Subject =~ /\b[a-z]{2,}[A-Z]+[a-z]{2,}/
header T_PUNCTUSINTERUPTUS	Subject =~ m%\b[A-Z]{2,}[^/\sa-z0-9:+,@._=&'-]+[A-Z]{2,}%i

# these need to have "decently long" words.  things like "sex" FP too easily
# in normal use, ala: "jackson's ex-wife" vs "Best S E X you"
body T_INT_AFFORDABLE	eval:check_obfu_word('affordable')
body T_INT_ANXIETY	eval:check_obfu_word('anxiety')
body T_INT_BILLION	eval:check_obfu_word('billion')
body T_INT_CELEBREX	eval:check_obfu_word('celebrex')
body T_INT_CIALIS	eval:check_obfu_word('cialis')
body T_INT_CREDIT	eval:check_obfu_word('credit')
body T_INT_ERECT	eval:check_obfu_word('erection')
body T_INT_FREE		eval:check_obfu_word('free')
body T_INT_HUNDREDS	eval:check_obfu_word('hundreds')
body T_INT_LEVITRA	eval:check_obfu_word('levitra')
body T_INT_MILF		eval:check_obfu_word('milf')
body T_INT_MILLION	eval:check_obfu_word('million')
body T_INT_MONEY	eval:check_obfu_word('money')
body T_INT_MORTGAGE	eval:check_obfu_word('mortgage')
body T_INT_OBLIGATION	eval:check_obfu_word('obligation')
body T_INT_OFFERS	eval:check_obfu_word('offers')
body T_INT_PENIS	eval:check_obfu_word('penis')
body T_INT_PHARMACY	eval:check_obfu_word('pharmacy')
body T_INT_PHENT	eval:check_obfu_word('phentermine')
body T_INT_PRESCRIPT	eval:check_obfu_word('prescription')
body T_INT_PROFIT	eval:check_obfu_word('profit')
body T_INT_REFINANCE	eval:check_obfu_word('refinance')
body T_INT_ROLEX	eval:check_obfu_word('rolex')
body T_INT_SOFTWARE	eval:check_obfu_word('software')
body T_INT_THOUSANDS	eval:check_obfu_word('thousands')
body T_INT_VALIUM	eval:check_obfu_word('valium')
body T_INT_VIAGRA	eval:check_obfu_word('viagra')
body T_INT_VICODIN	eval:check_obfu_word('vicodin')
body T_INT_VIOXX	eval:check_obfu_word('vioxx')
body T_INT_XANAX	eval:check_obfu_word('xanax')

# TVD: my FPs for this are all things like "pill's benefits"
body T_INT_PILLS	eval:check_obfu_word('pills')

# TVD: my FPs for this are from last names in sentences.
# ala "... see Dave Price's results for ..."
body T_INT_PRICES	eval:check_obfu_word('prices')

# these don't hit a lot, but it's a definite obfuscation technique
uri T_HTTP_BAD_HOST_CHAR	m@^https?://[^/]*[\000-\037\200-\377]@i

#  0.091   0.1027   0.0000    1.000   0.10    0.01  T_RATWARE_HASH_3
header T_RATWARE_HASH_3 Message-ID =~ /^<\d{8}[a-zA-Z0-9]{14}@/

# use ReplaceTags
ifplugin Mail::SpamAssassin::Plugin::ReplaceTags
body T_INT_AFFORDABLE2	/(?!affordable)<A><F><F><O><R><D><A><B><L><E>/i
body T_INT_ANXIETY2	/(?!anxiety)<A><N><X><I><E><T><Y>/i
body T_INT_BILLION2	/(?!billion)<B><I><L><L><I><O><N>/i
body T_INT_CELEBREX2	/(?!celebrex)<C><E><L><E><B><R><E><X>/i
body T_INT_CIALIS2	/(?!cialis)<C><I><A><L><I><S>/i
body T_INT_CREDIT2	/(?!credit)<C><R><E><D><I><T>/i
body T_INT_ERECT2	/(?!erection)<E><R><E><C><T><I><O><N>/i
body T_INT_FREE2	/(?!free)<F><R><E><E>/i
body T_INT_HUNDREDS2	/(?!hundreds)<H><U><N><D><R><E><D><S>/i
body T_INT_LEVITRA2	/(?!levitra)<L><E><V><I><T><R><A>/i
body T_INT_MILF2	/(?!milf)<M><I><L><F>/i
body T_INT_MILLION2	/(?!million)<M><I><L><L><I><O><N>/i
body T_INT_MONEY2	/(?!money)<M><O><N><E><Y>/i
body T_INT_MORTGAGE2	/(?!mortgage)<M><O><R><T><G><A><G><E>/i
body T_INT_OBLIGATION2	/(?!obligation)<O><B><L><I><G><A><T><I><O><N>/i
body T_INT_OFFERS2	/(?!offers)<O><F><F><E><R><S>/i
body T_INT_PENIS2	/(?!penis)<P><E><N><I><S>/i
body T_INT_PHARMACY2	/(?!pharmacy)<P><H><A><R><M><A><C><Y>/i
body T_INT_PHENT2	/(?!phentermine)<P><H><E><N><T><E><R><M><I><N><E>/i
body T_INT_PRESCRIPT2	/(?!prescription)<P><R><E><S><C><R><I><P><T><I><O><N>/i
body T_INT_PROFIT2	/(?!profit)<P><R><O><F><I><T>/i
body T_INT_REFINANCE2	/(?!refinance)<R><E><F><I><N><A><N><C><E>/i
body T_INT_ROLEX2	/(?!rolex)<R><O><L><E><X>/i
body T_INT_SOFTWARE2	/(?!software)<S><O><F><T><W><A><R><E>/i
body T_INT_THOUSANDS2	/(?!thousands)<T><H><O><U><S><A><N><D><S>/i
body T_INT_VALIUM2	/(?!valium)<V><A><L><I><U><M>/i
body T_INT_VIAGRA2	/(?!viagra)<V><I><A><G><R><A>/i
body T_INT_VICODIN2	/(?!vicodin)<V><I><C><O><D><I><N>/i
body T_INT_VIOXX2	/(?!vioxx)<V><I><O><X><X>/i
body T_INT_XANAX2	/(?!xanax)<X><A><N><A><X>/i
body T_INT_PILLS2	/(?!pills)<P><I><L><L><S>/i
body T_INT_PRICES2	/(?!prices)<P><R><I><C><E><S>/i
replace_rules T_INT_AFFORDABLE2 T_INT_ANXIETY2 T_INT_BILLION2 T_INT_CELEBREX2 T_INT_CIALIS2 T_INT_CREDIT2 T_INT_ERECT2 T_INT_FREE2 T_INT_HUNDREDS2 T_INT_LEVITRA2 T_INT_MILF2 T_INT_MILLION2 T_INT_MONEY2 T_INT_MORTGAGE2 T_INT_OBLIGATION2 T_INT_OFFERS2 T_INT_PENIS2 T_INT_PHARMACY2 T_INT_PHENT2 T_INT_PRESCRIPT2 T_INT_PROFIT2 T_INT_REFINANCE2 T_INT_ROLEX2 T_INT_SOFTWARE2 T_INT_THOUSANDS2 T_INT_VALIUM2 T_INT_VIAGRA2 T_INT_VICODIN2 T_INT_VIOXX2 T_INT_XANAX2 T_INT_PILLS2 T_INT_PRICES2

# bug 2166
body T_OBFU_COST	/(?!cost)<C><O><S><T>/i
body T_OBFU_MEDICATION	/(?!medication)<M><E><D><I><C><A><T><I><O><N>/i
body T_OBFU_PATIENTS	/(?!patients)<P><A><T><I><E><N><T><S>/i
body T_OBFU_PHARMACIES	/(?!pharmacies)<P><H><A><R><M><A><C><I><E><S>/i
body T_OBFU_PLEASE	/(?!please)<P><L><E><A><S><E>/i
body T_OBFU_REMOVE	/(?!remove)<R><E><M><O><V><E>/i
body T_OBFU_SAVE	/(?!save)<S><A><V><E>/i
replace_rules T_OBFU_COST
replace_rules T_OBFU_MEDICATION
replace_rules T_OBFU_PATIENTS
replace_rules T_OBFU_PHARMACIES
replace_rules T_OBFU_PLEASE
replace_rules T_OBFU_REMOVE
replace_rules T_OBFU_SAVE

# bug 2584
body T_OBFU_DICK	/(?!dick)<D><I><C><K>/i
body T_OBFU_DOCTORS	/(?!doctors)<D><O><C><T><O><R><S>/i
body T_OBFU_ENLARGE	/(?!enlarge)<E><N><L><A><R><G><E>/i
body T_OBFU_GUARANTEE	/(?!guarantee)<G><U><A><R><A><N><T><E><E>/i
replace_rules T_OBFU_DICK
replace_rules T_OBFU_DOCTORS
replace_rules T_OBFU_ENLARGE
replace_rules T_OBFU_GUARANTEE

# bug 2886 and bug 3478
body T_OBFU_AMBIEN	/(?!ambien)<A><M><B><I><E><N>/i
body T_OBFU_PHENTER	/(?!phenter)<P><H><E><N><T><E><R>/i
body T_OBFU_PHERENTERMINE	/(?!pherentermine)<P><H><E><R><E><N><T><E><R><M><I><N><E>/i
body T_OBFU_SOMA	/(?!soma)<S><O><M><A>/i
body T_OBFU_TRAMADOL	/(?!tramadol)<T><R><A><M><A><D><O><L>/i
replace_rules T_OBFU_AMBIEN
replace_rules T_OBFU_PHENTER
replace_rules T_OBFU_PHERENTERMINE
replace_rules T_OBFU_SOMA
replace_rules T_OBFU_TRAMADOL

# bug 2989
body T_OBFU_CLICK	/(?!click)<C><L><I><C><K>/i
body T_OBFU_FOLLOW	/(?!follow)<F><O><L><L><O><W>/i
body T_OBFU_MOVE	/(?!move)<M><O><V><E>/i
body T_OBFU_PHARMAC	/(?!pharmac)<P><H><A><R><M><A><C>/i
body T_OBFU_PICTURE	/(?!picture)<P><I><C><T><U><R><E>/i
body T_OBFU_PUSH	/(?!push)<P><U><S><H>/i
body T_OBFU_SUBMIT	/(?!submit)<S><U><B><M><I><T>/i
body T_OBFU_VISIT	/(?!visit)<V><I><S><I><T>/i
replace_rules T_OBFU_CLICK
replace_rules T_OBFU_FOLLOW
replace_rules T_OBFU_MOVE
replace_rules T_OBFU_PHARMAC
replace_rules T_OBFU_PICTURE
replace_rules T_OBFU_PUSH
replace_rules T_OBFU_SUBMIT
replace_rules T_OBFU_VISIT

endif   #ifplugin Mail::SpamAssassin::Plugin::ReplaceTags

# catch non-RFC2047 compliant messages
# Apple Mail has a bug where headers will have whitespace around the encoded
# text, so try to ignore that
header T_BAD_ENC_HEADER		ALL =~ /=\?[^?\s]+\?[^?\s]\?[^?]*\s/
header T_BAD_ENC_HEADER2	ALL =~ /=\?[^?\s]+\?[^?\s]\?\s*[^?]*\s(?!\?=)/
