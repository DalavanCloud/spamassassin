# SpamAssassin rules file: rules under test, $Rev$
#
# This file is a placeholder for rules "under probation", ie. checked into
# SVN for testing. It should not be distributed; if the rules have good
# stats after a mass-check or two, then fold them into the distributed
# rules files.
#
# I suggest adding a prefix to rules in this file, "T_" -- this
# helps identify probationary rules in test output.
#
# <@LICENSE>
# Copyright 2004 Apache Software Foundation
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# </@LICENSE>
#
###########################################################################
# SPF support.  "pass" is nice, "fail" is bad, "softfail" is bad, but
# not as bad as "fail".

header T_SPF_PASS		eval:check_for_spf_pass()
tflags T_SPF_PASS		net nice
score T_SPF_PASS		-0.1
header T_SPF_FAIL		eval:check_for_spf_fail()
tflags T_SPF_FAIL		net
score T_SPF_FAIL		0.2
header T_SPF_SOFTFAIL		eval:check_for_spf_softfail()
tflags T_SPF_SOFTFAIL		net
score T_SPF_SOFTFAIL		0.1

header T_SPF_HELO_PASS		eval:check_for_spf_helo_pass()
tflags T_SPF_HELO_PASS		net nice
score T_SPF_HELO_PASS		-0.1
header T_SPF_HELO_FAIL		eval:check_for_spf_helo_fail()
tflags T_SPF_HELO_FAIL		net
score T_SPF_HELO_FAIL		0.2
header T_SPF_HELO_SOFTFAIL	eval:check_for_spf_helo_softfail()
tflags T_SPF_HELO_SOFTFAIL	net
score T_SPF_HELO_SOFTFAIL	0.1

########################################################################
# rules to detect certain generally unnecessary encodings in HTML

rawbody T_ENTITY_WHITESPACE_R	/\&\#(?:10|32)\;/
body T_ENTITY_WHITESPACE_B	/\&\#(?:10|32)\;/
meta T_ENTITY_WHITESPACE_M	(T_ENTITY_WHITESPACE_R || T_ENTITY_WHITESPACE_B)

rawbody T_ENTITY_ALPHANUM_R	/\&\#(?:4[89]|5[0-7]|6[5-9][78]\d|9[0789]|1[01]\d|12[012])\;/
body T_ENTITY_ALPHANUM_B	/\&\#(?:4[89]|5[0-7]|6[5-9][78]\d|9[0789]|1[01]\d|12[012])\;/
meta T_ENTITY_ALPHANUM_M	(T_ENTITY_ALPHANUM_R || T_ENTITY_ALPHANUM_B)

rawbody T_ENTITY_OTHER1_R	/\&\#(?:46|47)\;/
body T_ENTITY_OTHER1_B		/\&\#(?:46|47)\;/
meta T_ENTITY_OTHER1_M		(T_ENTITY_OTHER1_R || T_ENTITY_OTHER1_B)

rawbody T_ENTITY_OTHER2_R	/\&\#(?:33|39|40|46|47)\;/
body T_ENTITY_OTHER2_B		/\&\#(?:33|39|40|46|47)\;/
meta T_ENTITY_OTHER2_M		(T_ENTITY_OTHER2_R || T_ENTITY_OTHER2_B)

# according to the postmaster at qualcomm, no mail is sent from
# eudora.com, but it's heavily joe-jobbed ...
# jm: maybe we should just collate these all into one "postmaster said
# they're never used" rule, even if they're hitting 0/0 right now
header T_FROM_EUDORA            From:addr =~ /\@eudora\.com/i

# similar concept for Delphi.com.  Was an ISP, now a car company!
# I think their username format is "First.Last"; requiring 2 digits
# will be pretty safe.  (lower rule as a baseline to see if we miss much)
header T_FROM_DELPHI		From:addr =~ /\d[^\@]+\d[^\@]+\@delphi\.com/i
header T_FROM_DELPHI_BASIC	From:addr =~ /\@delphi\.com/i

# great Yahoo! forgery rule, but is it going to be stable?
# hmm.  good question :(
header __YAHOO_MSGID		Message-ID =~ /\@yahoo\.com>/i
header __YAHOO_BEGINNING	Message-ID =~ /<\S+(?:\.\S+|\.\S+\.\S+\.\S+)\@/
meta T_FORGED_YAHOO_MSGID	(__YAHOO_MSGID && !__YAHOO_BEGINNING)

# Altavista.com's Greg Connor gconnor at nekodojo.org says 'they never send
# mail'; <2423209050.1071572609@[172.23.65.45]>, Tue, 16 Dec 2003 11:03:29
# -0800, on the spf-discuss at v2.listbox.com mailing list.  Let's see
# what this results in!
#
header T_ALL_TRUSTED		eval:check_all_trusted()
describe T_ALL_TRUSTED		Did not pass through any untrusted hosts
tflags T_ALL_TRUSTED		nice

# some tests to catch long lines of random dictionary words
# this could be slow, being a rawbody rule, but if it works well maybe
# we should consider a way to spot these kinds of auto-generated
# text patterns efficiently...
# quinlan: I think the unique word tests might do a better job of this,
#          this seems very specific to one spamware program.
rawbody T_BAYESBUSTER_LINE_12	/^([a-z]{3,} ){12,}<[Bb][Rr]>$/
rawbody T_BAYESBUSTER_LINE_15	/^([a-z]{3,} ){15,}<[Bb][Rr]>$/
rawbody T_BAYESBUSTER_LINE_15I	/^([a-z]{3,} ){15,}<br>$/i

# reported by Kurtis Rader, bug 2890
uri T_MSN_REDIR		m{^https?://shopping\.msn\.com/trackurl\.aspx\?}i
describe T_MSN_REDIR	Has MSN Redirect URI

# reported by Kurtis Rader, bug 2901
# miniscule hits
uri T_AOL_REDIR_1	m{^https?://www\.aol\.com/ams/clickThruRedirect.adp\?}i
uri T_AOL_REDIR_2	m{^https?://www\.aol\.com/ams/}i
uri T_AOL_REDIR_3	m{^https?://www\.aol\.com/.*https?://}i
uri T_AOL_REDIR_4	m{^https?://www\.aol\.com/ams/.*https?://}i
#describe T_AOL_REDIR	Has AOL Redirect URI

# more portable replacement for RCVD_NUMERIC_HELO that doesn't rely on
# Received headers using "helo=" prefix
header T_RCVD_NUMERIC_HELO	X-Spam-Relays-Untrusted =~ / helo=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} /
describe T_RCVD_NUMERIC_HELO	Received: contains an IP address used for HELO
# same but not for first line
header T_RCVD_NUMERIC_HELO_NOTFIRST	X-Spam-Relays-Untrusted =~ / helo=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} .+\[/
describe T_RCVD_NUMERIC_HELO_NOTFIRST	Received: contains IP for HELO (not first line)

# If the Message-Id claims to be added by one ISP, there should be a Received
# header which mentions that ISP.
header __MSGID_HAS_HOTMAIL	MESSAGEID =~ /hotmail\.com/
header __RCVD_HAS_HOTMAIL	Received =~ /(?:hotmail|msn)\.com/
meta T_MID_RCVD_DIFF_HOTMAIL	(__MSGID_HAS_HOTMAIL && !__RCVD_HAS_HOTMAIL)
describe T_MID_RCVD_DIFF_HOTMAIL Message-Id does not match Received (hotmail.com)

header __MSGID_HAS_AOL	MESSAGEID =~ /aol\.com/
header __RCVD_HAS_AOL	Received =~ /aol\.com/
meta T_MID_RCVD_DIFF_AOL	(__MSGID_HAS_AOL && !__RCVD_HAS_AOL)
describe T_MID_RCVD_DIFF_AOL	Message-Id does not match Received (aol.com)

# 0.683   1.3791   0.0134    0.990   0.90    0.01  T_URI_UNPRINTABLE:quinlan
# 0.956   1.1479   0.5948    0.659   0.26    0.01  T_URI_UNPRINTABLE:rODbegbie
# 0.734   0.7756   0.0885    0.898   0.66    0.01  T_URI_UNPRINTABLE:theo
# FPs?  wierd
uri	T_URI_UNPRINTABLE	/%0/
describe T_URI_UNPRINTABLE	URI contains unprintable characters

# bug 2957
# really not sure if this is a good idea
uri T_INFO_TLD			/^(?:https?:\/\/|mailto:)[^\/]+\.info(?:\/|$)/i
describe T_INFO_TLD		Contains a URL in the INFO top-level domain    

header T_RCVD_IN_BOGUSMX	rbleval:check_rbl_from_host('rfci-bmx', 'bogusmx.rfc-ignorant.org.')
describe T_RCVD_IN_BOGUSMX	Received via a relay in BogusMX (rfc-ignorant.org)
tflags T_RCVD_IN_BOGUSMX	net

# bug 2071
body            T_GEVALIACOFFEE           /\bGevalia (?:Coffee|Kaffe)\b/i
describe        T_GEVALIACOFFEE           Selling Gevalia Coffee

# bug 2970: Bob Menschel's "longwords" rules
# describe LONGWORDS Long string of long words
body     T_RM_BPT_LONGWORDS_5_6_A /\b(?:[a-z]{5,}\s+){6}/
body     T_RM_BPT_LONGWORDS_5_7_A /\b(?:[a-z]{5,}\s+){7}/
body     T_RM_BPT_LONGWORDS_5_8_A /\b(?:[a-z]{5,}\s+){8}/
body     T_RM_BPT_LONGWORDS_5_9_A /\b(?:[a-z]{5,}\s+){9}/
body     T_RM_BPT_LONGWORDS_5_10_A /\b(?:[a-z]{5,}\s+){10}/
body     T_RM_BPT_LONGWORDS_6_6_A /\b(?:[a-z]{6,}\s+){6}/
body     T_RM_BPT_LONGWORDS_6_7_A /\b(?:[a-z]{6,}\s+){7}/
body     T_RM_BPT_LONGWORDS_6_8_A /\b(?:[a-z]{6,}\s+){8}/
body     T_RM_BPT_LONGWORDS_6_9_A /\b(?:[a-z]{6,}\s+){9}/
body     T_RM_BPT_LONGWORDS_6_10_A /\b(?:[a-z]{6,}\s+){10}/
body     T_RM_BPT_LONGWORDS_7_6_A /\b(?:[a-z]{7,}\s+){6}/
body     T_RM_BPT_LONGWORDS_7_7_A /\b(?:[a-z]{7,}\s+){7}/
body     T_RM_BPT_LONGWORDS_7_8_A /\b(?:[a-z]{7,}\s+){8}/
body     T_RM_BPT_LONGWORDS_7_9_A /\b(?:[a-z]{7,}\s+){9}/
body     T_RM_BPT_LONGWORDS_7_10_A /\b(?:[a-z]{7,}\s+){10}/
body     T_RM_BPT_LONGWORDS_8_6_A /\b(?:[a-z]{8,}\s+){6}/
body     T_RM_BPT_LONGWORDS_8_7_A /\b(?:[a-z]{8,}\s+){7}/
body     T_RM_BPT_LONGWORDS_8_8_A /\b(?:[a-z]{8,}\s+){8}/
body     T_RM_BPT_LONGWORDS_8_9_A /\b(?:[a-z]{8,}\s+){9}/
body     T_RM_BPT_LONGWORDS_8_10_A /\b(?:[a-z]{8,}\s+){10}/
body     T_RM_BPT_LONGWORDS_9_6_A /\b(?:[a-z]{9,}\s+){6}/
body     T_RM_BPT_LONGWORDS_9_7_A /\b(?:[a-z]{9,}\s+){7}/
body     T_RM_BPT_LONGWORDS_9_8_A /\b(?:[a-z]{9,}\s+){8}/
body     T_RM_BPT_LONGWORDS_9_9_A /\b(?:[a-z]{9,}\s+){9}/
body     T_RM_BPT_LONGWORDS_9_10_A /\b(?:[a-z]{9,}\s+){10}/
body     T_RM_BPT_LONGWORDS_10_6_A /\b(?:[a-z]{10,}\s+){6}/
body     T_RM_BPT_LONGWORDS_10_7_A /\b(?:[a-z]{10,}\s+){7}/
body     T_RM_BPT_LONGWORDS_10_8_A /\b(?:[a-z]{10,}\s+){8}/
body     T_RM_BPT_LONGWORDS_10_9_A /\b(?:[a-z]{10,}\s+){9}/
body     T_RM_BPT_LONGWORDS_10_10_A /\b(?:[a-z]{10,}\s+){10}/


# partial messages; currently-theoretical attack
# unsurprisingly this hits 0/0 right now.  But should we promote it anyway
# to protect against the possibility?
header T_FRAGMENTED_MESSAGE	Content-Type =~ /message\/partial/i

# some HTML rules to try
body T_HTML_TAG_BALANCE_FONT_0	eval:html_tag_balance('font', '!= 0')
describe T_HTML_TAG_BALANCE_FONT_0	HTML has unbalanced "font" tags

body T_HTML_TAG_BALANCE_FONT_1	eval:html_tag_balance('font', '> 0')
describe T_HTML_TAG_BALANCE_FONT_1	HTML is missing "font" close tags

body T_HTML_TAG_BALANCE_FONT_2	eval:html_tag_balance('font', '> 1')
describe T_HTML_TAG_BALANCE_FONT_2	HTML is missing some "font" close tags

body T_HTML_TAG_BALANCE_DIV_1	eval:html_tag_balance('div', '!= 0')
describe T_HTML_TAG_BALANCE_DIV_1	HTML has unbalanced "font" tags

body T_HTML_TAG_BALANCE_DIV_2	eval:html_tag_balance('div', '> 0')
describe T_HTML_TAG_BALANCE_DIV_2	HTML is missing "div" tags

body T_HTML_FONT_SMALL_SIZE_1	eval:html_eval('min_size', '< 1')
body T_HTML_FONT_SMALL_SIZE_2	eval:html_eval('min_size', '< 0')
body T_HTML_FONT_SMALL_SIZE_3	eval:html_eval('min_size', '< -1')

body T_HTML_FONT_LARGE_SIZE	eval:html_eval('max_size', '> 3')
body T_HTML_FONT_LARGE_SIZE_0	eval:html_eval('max_size', '> 4')
body T_HTML_FONT_LARGE_SIZE_1	eval:html_eval('max_size', '> 5')
body T_HTML_FONT_LARGE_SIZE_2	eval:html_eval('max_size', '> 6')
body T_HTML_FONT_LARGE_SIZE_3	eval:html_eval('max_size', '> 7')
body T_HTML_FONT_LARGE_SIZE_4	eval:html_eval('max_size', '> 8')

########################################################################

# bug 1985
body T_URGENT_BIZ /urgent.{0,16}(?:assistance|business|buy|confidential|notice|proposal|reply|request|response)/i

# bug 2950
# both look promotable
uri T_GOOGLE_IMAGES	m{^http://images\.google(\.\S+)?\.[a-z]{2,3}/imgres\?}i
uri T_GOOGLE_REDIR	m{^http://www\.google(\.\S+)?\.[a-z]{2,3}/url\?}i

# http://www.ahbl.org/using/spamassassin.txt :
# SpamAssassin local.cf for AHBL BlackList / BlockList
# "Old blackholes.2mbit.com resurrected as AHBL (dnsbl.ahbl.org)"
# URL: http://www.ahbl.org
# 0.000   0.0000   0.0000    0.500   0.11    0.00  __RCVD_IN_AHBL
header __RCVD_IN_AHBL eval:check_rbl('ahbl', 'dnsbl.ahbl.org.')
describe __RCVD_IN_AHBL AHBL: sender is in DNSbl dnsbl.ahbl.org
tflags __RCVD_IN_AHBL net

#  0.023   0.0315   0.0024    0.930   0.71    0.01  T_RCVD_IN_AHBL_UNKNOWN_1
header T_RCVD_IN_AHBL_UNKNOWN_1 eval:check_rbl_sub('ahbl', '127.0.0.1')
describe T_RCVD_IN_AHBL_UNKNOWN_1 AHBL: Unknown Category 1 (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_UNKNOWN_1 net

#  0.002   0.0029   0.0000    1.000   0.89    0.01  T_RCVD_IN_AHBL_SMTP
header T_RCVD_IN_AHBL_SMTP eval:check_rbl_sub('ahbl', '127.0.0.2')
describe T_RCVD_IN_AHBL_SMTP AHBL: Open SMTP relay (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_SMTP net

# 12.154  17.1401   0.0951    0.994   0.90    0.01  T_RCVD_IN_AHBL_PROXY
header T_RCVD_IN_AHBL_PROXY eval:check_rbl_sub('ahbl', '127.0.0.3')
describe T_RCVD_IN_AHBL_PROXY AHBL: Open Proxy server (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_PROXY net

# 3.956   5.5534   0.0927    0.984   0.85    0.01  T_RCVD_IN_AHBL_SPAM
# jm: -1
header T_RCVD_IN_AHBL_SPAM eval:check_rbl_sub('ahbl', '127.0.0.4')
describe T_RCVD_IN_AHBL_SPAM AHBL: Spam Source (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_SPAM net

# these are all 0 or not so good:
header T_RCVD_IN_AHBL_RTB eval:check_rbl_sub('ahbl', '127.0.0.5')
describe T_RCVD_IN_AHBL_RTB AHBL: Real-Time Blocked (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_RTB net

header T_RCVD_IN_AHBL_FORMMAIL eval:check_rbl_sub('ahbl', '127.0.0.6')
describe T_RCVD_IN_AHBL_FORMMAIL AHBL: Abuseable Form Mail (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_FORMMAIL net

header T_RCVD_IN_AHBL_SPAM_SUPPORT eval:check_rbl_sub('ahbl', '127.0.0.7')
describe T_RCVD_IN_AHBL_SPAM_SUPPORT AHBL: Spam Supporter (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_SPAM_SUPPORT net

header T_RCVD_IN_AHBL_I_SPAM_SUPPORT eval:check_rbl_sub('ahbl', '127.0.0.8')
describe T_RCVD_IN_AHBL_I_SPAM_SUPPORT AHBL: Indirect Spam supporter (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_I_SPAM_SUPPORT net

header T_RCVD_IN_AHBL_ENDUSER eval:check_rbl_sub('ahbl', '127.0.0.9')
describe T_RCVD_IN_AHBL_ENDUSER AHBL: End User listed (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_ENDUSER net

header T_RCVD_IN_AHBL_SOS eval:check_rbl_sub('AHBL-notfirsthop', '127.0.0.10')
describe T_RCVD_IN_AHBL_SOS AHBL: Shoot On Sight (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_SOS net

header T_RCVD_IN_AHBL_RFCI_PA eval:check_rbl_sub('ahbl', '127.0.0.11')
describe T_RCVD_IN_AHBL_RFCI_PA AHBL: No Postmaster/Abuse Address (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_RFCI_PA net

header T_RCVD_IN_AHBL_5XXI eval:check_rbl_sub('ahbl', '127.0.0.12')
describe T_RCVD_IN_AHBL_5XXI AHBL: Spurious 5xx error handling (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_5XXI net

header T_RCVD_IN_AHBL_RFCI_MISC eval:check_rbl_sub('ahbl', '127.0.0.13')
describe T_RCVD_IN_AHBL_RFCI_MISC AHBL: Other Non-RFC Compliant (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_RFCI_MISC net

header T_RCVD_IN_AHBL_CMPR_DDOS eval:check_rbl_sub('ahbl', '127.0.0.14')
describe T_RCVD_IN_AHBL_CMPR_DDOS AHBL: Compromised - DDoS (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_CMPR_DDOS net

header T_RCVD_IN_AHBL_CMPR_RELAY eval:check_rbl_sub('ahbl', '127.0.0.15')
describe T_RCVD_IN_AHBL_CMPR_RELAY AHBL: Compromised - Relay (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_CMPR_RELAY net

header T_RCVD_IN_AHBL_CMPR_SCAN eval:check_rbl_sub('ahbl', '127.0.0.16')
describe T_RCVD_IN_AHBL_CMPR_SCAN AHBL: Compromised - Autorooter/Scanner
tflags T_RCVD_IN_AHBL_CMPR_SCAN net

header T_RCVD_IN_AHBL_CMPR_WORM eval:check_rbl_sub('ahbl', '127.0.0.17')
describe T_RCVD_IN_AHBL_CMPR_WORM AHBL: Compromised - Worm or mass mailing virus
tflags T_RCVD_IN_AHBL_CMPR_WORM net

header T_RCVD_IN_AHBL_CMPR_VIRUS eval:check_rbl_sub('ahbl', '127.0.0.18')
describe T_RCVD_IN_AHBL_CMPR_VIRUS AHBL: Compromised - Other virus
tflags T_RCVD_IN_AHBL_CMPR_VIRUS net

header T_RCVD_IN_AHBL_OTHER eval:check_rbl_sub('ahbl', '127.0.0.127')
describe T_RCVD_IN_AHBL_OTHER AHBL: Other (dnsbl.ahbl.org)
tflags T_RCVD_IN_AHBL_OTHER net

# not so useful
# 0.873   0.1278   2.6753    0.046   0.78   -0.01  T_RCVD_IN_AHBL_EXEMPT_T
header T_RCVD_IN_AHBL_EXEMPT_T	eval:check_rbl('ahbl-ex-firsttrusted', 'exemptions.ahbl.org.')
describe T_RCVD_IN_AHBL_EXEMPT_T AHBL: Sender is in Exempt zone (trusted)
tflags T_RCVD_IN_AHBL_EXEMPT_T	net nice

# 0.489   0.0600   1.5267    0.038   0.79   -0.01  T_RCVD_IN_AHBL_EXEMPT_O
header T_RCVD_IN_AHBL_EXEMPT_O	eval:check_rbl('ahbl-ex-untrusted', 'exemptions.ahbl.org.')
describe T_RCVD_IN_AHBL_EXEMPT_O AHBL: Sender is in Exempt zone (other)
tflags T_RCVD_IN_AHBL_EXEMPT_O	net nice

# 5.877   8.1040   0.4899    0.943   0.76    0.01  T_RCVD_IN_AHBL_RHSBL
# jm: -1
header T_RCVD_IN_AHBL_RHSBL	eval:check_rbl_from_host('ahbl-rhs', 'rhsbl.ahbl.org.')
describe T_RCVD_IN_AHBL_RHSBL	AHBL: From sender in DNSbl dnsbl.ahbl.org
tflags T_RCVD_IN_AHBL_RHSBL	net

# these are here for testing and debugging improvements to the HTML
# rendering code, delete prior to release
body T_HTML_TEXT_CONTRAST_16	eval:html_test('text_contrast_16')
body T_HTML_TEXT_CONTRAST_24	eval:html_test('text_contrast_24')
body T_HTML_TEXT_CONTRAST_32	eval:html_test('text_contrast_32')

# Should catch Atriks, for one
uri T_LONG_HOSTNAME_25		/^https?:\/\/[a-z0-9]{25,29}\./i
uri T_LONG_HOSTNAME_30		/^https?:\/\/[a-z0-9]{30,40}\./i
uri T_LONG_HOSTNAME_40		/^https?:\/\/[a-z0-9]{40,}\./i

# bug 2220
meta T_DIGEST_MULTIPLE		RAZOR2_CHECK + DCC_CHECK + PYZOR_CHECK > 1
describe T_DIGEST_MULTIPLE	Message hits more than one network digest check
tflags T_DIGEST_MULTIPLE	net

# too easy
body T_VIA_GAP_GRA		/\bvia.gra\b/i

# backhair - idea from backhair set by Jennifer Wheeler and Adam Lopresto.
body T_BACKHAIR_1_1		eval:html_test('backhair_1_1')
body T_BACKHAIR_1_2		eval:html_test('backhair_1_2')
body T_BACKHAIR_1_3		eval:html_test('backhair_1_3')
body T_BACKHAIR_1_4		eval:html_test('backhair_1_4')
body T_BACKHAIR_1_5		eval:html_test('backhair_1_5')
body T_BACKHAIR_1_6		eval:html_test('backhair_1_6')
body T_BACKHAIR_1_7		eval:html_test('backhair_1_7')
body T_BACKHAIR_2_1		eval:html_test('backhair_2_1')
body T_BACKHAIR_2_2		eval:html_test('backhair_2_2')
body T_BACKHAIR_2_3		eval:html_test('backhair_2_3')
body T_BACKHAIR_2_4		eval:html_test('backhair_2_4')
body T_BACKHAIR_2_5		eval:html_test('backhair_2_5')
body T_BACKHAIR_2_6		eval:html_test('backhair_2_6')
body T_BACKHAIR_2_7		eval:html_test('backhair_2_7')
body T_BACKHAIR_3_1		eval:html_test('backhair_3_1')
body T_BACKHAIR_3_2		eval:html_test('backhair_3_2')
body T_BACKHAIR_3_3		eval:html_test('backhair_3_3')
body T_BACKHAIR_3_4		eval:html_test('backhair_3_4')
body T_BACKHAIR_3_5		eval:html_test('backhair_3_5')
body T_BACKHAIR_3_6		eval:html_test('backhair_3_6')
body T_BACKHAIR_3_7		eval:html_test('backhair_3_7')
body T_BACKHAIR_4_1		eval:html_test('backhair_4_1')
body T_BACKHAIR_4_2		eval:html_test('backhair_4_2')
body T_BACKHAIR_4_3		eval:html_test('backhair_4_3')
body T_BACKHAIR_4_4		eval:html_test('backhair_4_4')
body T_BACKHAIR_4_5		eval:html_test('backhair_4_5')
body T_BACKHAIR_4_6		eval:html_test('backhair_4_6')
body T_BACKHAIR_4_7		eval:html_test('backhair_4_7')
body T_BACKHAIR_5_1		eval:html_test('backhair_5_1')
body T_BACKHAIR_5_2		eval:html_test('backhair_5_2')
body T_BACKHAIR_5_3		eval:html_test('backhair_5_3')
body T_BACKHAIR_5_4		eval:html_test('backhair_5_4')
body T_BACKHAIR_5_5		eval:html_test('backhair_5_5')
body T_BACKHAIR_5_6		eval:html_test('backhair_5_6')
body T_BACKHAIR_5_7		eval:html_test('backhair_5_7')
body T_BACKHAIR_6_1		eval:html_test('backhair_6_1')
body T_BACKHAIR_6_2		eval:html_test('backhair_6_2')
body T_BACKHAIR_6_3		eval:html_test('backhair_6_3')
body T_BACKHAIR_6_4		eval:html_test('backhair_6_4')
body T_BACKHAIR_6_5		eval:html_test('backhair_6_5')
body T_BACKHAIR_6_6		eval:html_test('backhair_6_6')
body T_BACKHAIR_6_7		eval:html_test('backhair_6_7')
body T_BACKHAIR_7_1		eval:html_test('backhair_7_1')
body T_BACKHAIR_7_2		eval:html_test('backhair_7_2')
body T_BACKHAIR_7_3		eval:html_test('backhair_7_3')
body T_BACKHAIR_7_4		eval:html_test('backhair_7_4')
body T_BACKHAIR_7_5		eval:html_test('backhair_7_5')
body T_BACKHAIR_7_6		eval:html_test('backhair_7_6')
body T_BACKHAIR_7_7		eval:html_test('backhair_7_7')

# backhair - idea from backhair set by Jennifer Wheeler and Adam Lopresto.
body T_BACKHAIR2_1_1		eval:html_test('backhair2_1_1')
body T_BACKHAIR2_1_2		eval:html_test('backhair2_1_2')
body T_BACKHAIR2_1_3		eval:html_test('backhair2_1_3')
body T_BACKHAIR2_1_4		eval:html_test('backhair2_1_4')
body T_BACKHAIR2_1_5		eval:html_test('backhair2_1_5')
body T_BACKHAIR2_1_6		eval:html_test('backhair2_1_6')
body T_BACKHAIR2_1_7		eval:html_test('backhair2_1_7')
body T_BACKHAIR2_2_1		eval:html_test('backhair2_2_1')
body T_BACKHAIR2_2_2		eval:html_test('backhair2_2_2')
body T_BACKHAIR2_2_3		eval:html_test('backhair2_2_3')
body T_BACKHAIR2_2_4		eval:html_test('backhair2_2_4')
body T_BACKHAIR2_2_5		eval:html_test('backhair2_2_5')
body T_BACKHAIR2_2_6		eval:html_test('backhair2_2_6')
body T_BACKHAIR2_2_7		eval:html_test('backhair2_2_7')
body T_BACKHAIR2_3_1		eval:html_test('backhair2_3_1')
body T_BACKHAIR2_3_2		eval:html_test('backhair2_3_2')
body T_BACKHAIR2_3_3		eval:html_test('backhair2_3_3')
body T_BACKHAIR2_3_4		eval:html_test('backhair2_3_4')
body T_BACKHAIR2_3_5		eval:html_test('backhair2_3_5')
body T_BACKHAIR2_3_6		eval:html_test('backhair2_3_6')
body T_BACKHAIR2_3_7		eval:html_test('backhair2_3_7')
body T_BACKHAIR2_4_1		eval:html_test('backhair2_4_1')
body T_BACKHAIR2_4_2		eval:html_test('backhair2_4_2')
body T_BACKHAIR2_4_3		eval:html_test('backhair2_4_3')
body T_BACKHAIR2_4_4		eval:html_test('backhair2_4_4')
body T_BACKHAIR2_4_5		eval:html_test('backhair2_4_5')
body T_BACKHAIR2_4_6		eval:html_test('backhair2_4_6')
body T_BACKHAIR2_4_7		eval:html_test('backhair2_4_7')
body T_BACKHAIR2_5_1		eval:html_test('backhair2_5_1')
body T_BACKHAIR2_5_2		eval:html_test('backhair2_5_2')
body T_BACKHAIR2_5_3		eval:html_test('backhair2_5_3')
body T_BACKHAIR2_5_4		eval:html_test('backhair2_5_4')
body T_BACKHAIR2_5_5		eval:html_test('backhair2_5_5')
body T_BACKHAIR2_5_6		eval:html_test('backhair2_5_6')
body T_BACKHAIR2_5_7		eval:html_test('backhair2_5_7')
body T_BACKHAIR2_6_1		eval:html_test('backhair2_6_1')
body T_BACKHAIR2_6_2		eval:html_test('backhair2_6_2')
body T_BACKHAIR2_6_3		eval:html_test('backhair2_6_3')
body T_BACKHAIR2_6_4		eval:html_test('backhair2_6_4')
body T_BACKHAIR2_6_5		eval:html_test('backhair2_6_5')
body T_BACKHAIR2_6_6		eval:html_test('backhair2_6_6')
body T_BACKHAIR2_6_7		eval:html_test('backhair2_6_7')
body T_BACKHAIR2_7_1		eval:html_test('backhair2_7_1')
body T_BACKHAIR2_7_2		eval:html_test('backhair2_7_2')
body T_BACKHAIR2_7_3		eval:html_test('backhair2_7_3')
body T_BACKHAIR2_7_4		eval:html_test('backhair2_7_4')
body T_BACKHAIR2_7_5		eval:html_test('backhair2_7_5')
body T_BACKHAIR2_7_6		eval:html_test('backhair2_7_6')
body T_BACKHAIR2_7_7		eval:html_test('backhair2_7_7')

# spams that are assembled from a Javascript array
# look for the XOR op
rawbody __JS_FROMCHARCODE	/String\.fromCharCode\s*\(\s*\S+\s*\[\s*\S+\s*\]\s*\^/
rawbody __JS_DOCWRITE   	/document\.write/
meta T_JS_FROMCHARCODE          (__JS_FROMCHARCODE && __JS_DOCWRITE)

# IADB
header __RCVD_IN_IADB		eval:check_rbl('iadb', 'iadb.isipp.com.')
tflags __RCVD_IN_IADB		net nice

header RCVD_IN_IADB_LISTED	eval:check_rbl_sub('iadb', '127.0.0.1')
describe RCVD_IN_IADB_LISTED	Sender is in ISIPP IADB of trusted senders
tflags RCVD_IN_IADB_LISTED	net nice

header RCVD_IN_IADB_VOUCHED	eval:check_rbl_sub('iadb', '127.0.0.2')
describe RCVD_IN_IADB_VOUCHED	Sender is a vouched sender in IADB
tflags RCVD_IN_IADB_VOUCHED	net nice

header RCVD_IN_IADB_SPF		eval:check_rbl_sub('iadb', '127.0.0.3')
describe RCVD_IN_IADB_SPF	Sender is in IADB as a publisher of SPF records
tflags RCVD_IN_IADB_SPF		net nice

# IADB trusted
header __RCVD_IN_IADB_TR	eval:check_rbl('iadbtr-firsttrusted', 'iadb.isipp.com.')
tflags __RCVD_IN_IADB_TR	net nice

header RCVD_IN_IADB_LISTED_TR	eval:check_rbl_sub('iadbtr', '127.0.0.1')
describe RCVD_IN_IADB_LISTED_TR	Sender is in ISIPP IADB of trusted senders
tflags RCVD_IN_IADB_LISTED_TR	net nice

header RCVD_IN_IADB_VOUCH_TR	eval:check_rbl_sub('iadbtr', '127.0.0.2')
describe RCVD_IN_IADB_VOUCH_TR	Sender is a vouched sender in IADB
tflags RCVD_IN_IADB_VOUCH_TR	net nice

header RCVD_IN_IADB_SPF_TR		eval:check_rbl_sub('iadbtr', '127.0.0.3')
describe RCVD_IN_IADB_SPF_TR	Sender is in IADB as a publisher of SPF records
tflags RCVD_IN_IADB_SPF_TR		net nice

# Bug 3153
meta T_HTML_PLAIN_TEXT		(!__MIME_HTML && HTML_MESSAGE)
describe T_HTML_PLAIN_TEXT	Message is HTML without HTML Content-Type

# Bug 2168
header T_BAD_MOZILLA_VERSION    User-Agent =~ /Mozilla\/5\.0\d\d/
describe T_BAD_MOZILLA_VERSION  User-Agent claims to be Mozilla, but is malformed

header T_RCVD_ILLEGAL_IP    Received =~ /[\s\(\[\:\=](?:(?:[01257]|22[3-9]|23[0-9]|24[0-9]|25[0-5])\.\d+\.\d+\.\d+|127\.[1-9]\.\d+\.\d+|127\.0\.[1-9]\.\d+|127\.0\.0\.(?:\d\d+|[2-9]))\b/
describe T_RCVD_ILLEGAL_IP  Received contains illegal IP address

# bug 2017
body T_HTML_WEB_BUGS		eval:html_test('t_web_bugs')

# test for HELO != IP or HELO != RDNS
header T_RCVD_HELO_NE_BOTH1	eval:check_for_helo_both_mismatch()
header T_RCVD_HELO_NE_BOTH2	eval:check_for_helo_both_mismatch('helo_reserved')
header T_RCVD_HELO_NE_BOTH3	eval:check_for_helo_both_mismatch('ip_reserved')
header T_RCVD_HELO_NE_BOTH4	eval:check_for_helo_both_mismatch('rdns_reserved')
header T_RCVD_HELO_NE_BOTH5	eval:check_for_helo_both_mismatch('helo_reserved', 'ip_reserved')
header T_RCVD_HELO_NE_BOTH6	eval:check_for_helo_both_mismatch('helo_reserved', 'rdns_reserved')
header T_RCVD_HELO_NE_BOTH7	eval:check_for_helo_both_mismatch('ip_reserved', 'rdns_reserved')
header T_RCVD_HELO_NE_BOTH8	eval:check_for_helo_both_mismatch('helo_reserved, 'ip_reserved', 'rdns_reserved')

# test for HELO != IP
header T_RCVD_HELO_NE_IP1	eval:check_for_helo_ip_mismatch()
header T_RCVD_HELO_NE_IP2	eval:check_for_helo_ip_mismatch('helo_reserved')
header T_RCVD_HELO_NE_IP3	eval:check_for_helo_ip_mismatch('ip_reserved')
header T_RCVD_HELO_NE_IP4	eval:check_for_helo_ip_mismatch('helo_reserved', 'ip_reserved')

# test for HELO != RDNS
header T_RCVD_HELO_NE_RDNS1	eval:check_for_helo_rdns_mismatch()
header T_RCVD_HELO_NE_RDNS2	eval:check_for_helo_rdns_mismatch('helo_reserved')
header T_RCVD_HELO_NE_RDNS3	eval:check_for_helo_rdns_mismatch('rdns_reserved')
header T_RCVD_HELO_NE_RDNS4	eval:check_for_helo_rdns_mismatch('helo_reserved', 'rdns_reserved')
