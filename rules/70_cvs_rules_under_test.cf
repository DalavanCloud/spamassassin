# SpamAssassin rules file: CVS rules under test, $Rev$
#
# This file is a placeholder for rules "under probation", ie. checked into
# CVS for testing. It should not be distributed; if the rules have good
# stats after a mass-check or two, then fold them into the distributed
# rules files.
#
# I suggest adding a prefix to rules in this file, "T_" -- this
# helps identify probationary rules in test output.
#
# <@LICENSE>
# Copyright 2004 Apache Software Foundation
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# </@LICENSE>
#
###########################################################################

# http://bugzilla.spamassassin.org/show_bug.cgi?id=2088
header T_RATWARE_MIME_844412	Content-Type =~ /boundary="[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"/

# http://bugzilla.spamassassin.org/show_bug.cgi?id=2087
header T_RATWARE_OE_DM	X-Mailer =~ /^Microsoft Outlook Express [\d\.]+ DM$/

# a referral ID
uri T_REF_ID			/[\?\&]RefID/

# http://bugzilla.spamassassin.org/show_bug.cgi?id=2089
header T_DATE_EXTRA_SPACE	Date =~ /^..., .\d ... \d\d\d\d \d\d:\d\d:\d\d  [\+\-]\d\d\d\d$/

# another one for bug 2089, may be more useful:
full __END_HASHBUSTER_1		/\n\[[a-z0-9]+\]\n\s*\Z/
meta T_RATWARE_2089		(NO_REAL_NAME && __END_HASHBUSTER_1)

# this is really badly faked.  Also the spammer who uses "25250101"
# for the build is a total hippie.
header T_RATWARE_GECKO_BUILD	User-Agent =~ /Gecko\/(?!200\d\d\d\d\d)\d/

# another good way to catch mozilla fakery
header __UA_GECKO		User-Agent =~ /Gecko\//
header __EXISTS_ACCEPT_LANG	exists:X-Accept-Language
meta T_RATWARE_GECKO_NO_LANG	(__UA_GECKO && !__EXISTS_ACCEPT_LANG)

# reminder: develop these after 2.60
full T_SPRINTF_5X	/[^-][A-F1-9][A-F0-9]{5,7}-[A-F1-9][A-F0-9]{5,7}-[A-F1-9][A-F0-9]{5,7}-[A-F1-9][A-F0-9]{5,7}-[A-F1-9][A-F0-9]{5,7}[^-]/

# (time_t/4444)
header T_TIME_OVER_4444	ALL =~ /\D23[67][0-9][0-9][0-9]\D/

# replacements for PORN_4; split out sub-patterns as some are more FP-prone
# than others.
uri T_PORN_URL_XXX         /^https?:\/\/[\w\.-]*xxx[\w-]*\./
uri T_PORN_URL_SEX         /^https?:\/\/[\w\.-]*(?<!es|ba)(?<!dle|sus)sex[\w-]*\./
uri T_PORN_URL_ANAL        /^https?:\/\/[\w\.-]*anal(?!og|y[sz])[\w-]*\./
uri T_PORN_URL_SLUT        /^https?:\/\/[\w\.-]*slut[\w-]*\./
uri T_PORN_URL_CUM         /^https?:\/\/[\w\.-]*(?<!cir)(?<!\bdo)cum(?!ul|be?r|b?en)[\w-]*\./
uri T_PORN_URL_LUST        /^https?:\/\/[\w\.-]*lust(?!(?<=illust)(?:rat|rious)|(?<=clust)er)[\w-]*\./
uri T_PORN_URL_PANT        /^https?:\/\/[\w\.-]*pant(?:y|ies)[\w-]*\./
uri T_PORN_URL_SUCK        /^https?:\/\/[\w\.-]*suck[\w-]*\./
uri T_PORN_URL_TEEN        /^https?:\/\/[\w\.-]*(?<!thir|four|eigh|nine)(?<!fif|six)(?<!seven)teen[\w-]*\./
uri T_PORN_URL_MISC        /^https?:\/\/[\w\.-]*(pussy|nympho|porn|hard-?core|taboo|whore|voyeur|lesbian|gurlpages|naughty|lolita|schoolgirl|kooloffer|erotic)[\w-]*\./

header T_KOREAN_UCE_SUBJECT	Subject:raw =~ /\?B\?KLGksO0p/

header T_DATE_DOUBLE_DASH	Date =~ /:\d\d --\d\d\d\d$/

header __RCVD_IN_SORBS_RHSBL	eval:check_rbl_from_host('sorbsrhs', 'rhsbl.sorbs.net.')
tflags __RCVD_IN_SORBS_RHSBL	net

header T_RCVD_IN_SORBS_BADCONF	eval:check_rbl_sub('sorbsrhs', '127.0.0.11')
describe T_RCVD_IN_SORBS_BADCONF	SORBS: sender uses invalid DNS A or MX records
tflags T_RCVD_IN_SORBS_BADCONF	net

header T_RCVD_IN_SORBS_NOMAIL	eval:check_rbl_sub('sorbsrhs', '127.0.0.12')
describe T_RCVD_IN_SORBS_NOMAIL	SORBS: sender is not expected to send mail
tflags T_RCVD_IN_SORBS_NOMAIL	net

# SPF support.  "pass" is nice, "fail" is bad, "softfail" is bad, but
# not as bad as "fail".
header T_SPF_PASS	eval:check_for_spf_pass()
tflags T_SPF_PASS	net nice
score T_SPF_PASS	-0.1
header T_SPF_FAIL	eval:check_for_spf_fail()
tflags T_SPF_FAIL	net
score T_SPF_FAIL	0.2
header T_SPF_SOFTFAIL	eval:check_for_spf_softfail()
tflags T_SPF_SOFTFAIL	net
score T_SPF_SOFTFAIL	0.1

header T_SPF_HELO_PASS	eval:check_for_spf_helo_pass()
tflags T_SPF_HELO_PASS	net nice
score T_SPF_HELO_PASS	-0.1
header T_SPF_HELO_FAIL	eval:check_for_spf_helo_fail()
tflags T_SPF_HELO_FAIL	net
score T_SPF_HELO_FAIL	0.2
header T_SPF_HELO_SOFTFAIL	eval:check_for_spf_helo_softfail()
tflags T_SPF_HELO_SOFTFAIL	net
score T_SPF_HELO_SOFTFAIL	0.1

# Not good, esp. considering how *slow* it runs..
# 17.640   4.1041  29.0741    0.124   0.69   -0.10  T_ALL_RELAYS_NEAR_MXES
# However, combined with SBL it might work out useful...
#header T_ALL_RELAYS_NEAR_MXES	eval:check_for_all_relays_near_mxes()
#tflags T_ALL_RELAYS_NEAR_MXES	net nice
#score T_ALL_RELAYS_NEAR_MXES	-0.1
#describe T_ALL_RELAYS_NEAR_MXES	All relays are near to their MXes

# try out new versions of username in subject ...
# "user@domain.com" in the subject, case insensitive
header T_USERNAME_IN_SUBJECT1     eval:check_for_to_in_subject('1')
describe T_USERNAME_IN_SUBJECT1   Full To: address listed in Subject:
header T_USERNAME_IN_SUBJECT2     eval:check_for_to_in_subject('2')
describe T_USERNAME_IN_SUBJECT2   To: username listed in Subject: (ucfirst)
header T_USERNAME_IN_SUBJECT3     eval:check_for_to_in_subject('3')
describe T_USERNAME_IN_SUBJECT3   Full To: address listed at front of Subject:

# catches a few spams missed by MSGID_OUTLOOK_INVALID
meta T_MSGID_DOLLARS_1		(__OUTLOOK_DOLLARS_MSGID && !__HAS_OUTLOOK_IN_MAILER && !__UNUSABLE_MSGID)
meta T_MSGID_DOLLARS_2		(__OE_MSGID_2 && !__HAS_OUTLOOK_IN_MAILER && !__UNUSABLE_MSGID)
header __T_DOLLAR_MUA_1		X-Mailer =~ /^Microsoft (?:CDO|Outlook)/
header __T_DOLLAR_MUA_2		X-Mailer =~ /^Microsoft (?:CDO|Outlook(?: 8|,Build 10| Express [456]|(?:IMO|CWS), Build 9))/
meta T_MSGID_DOLLARS_3		(__OUTLOOK_DOLLARS_MSGID && !__T_DOLLAR_MUA_1 && !__UNUSABLE_MSGID)
meta T_MSGID_DOLLARS_4		(__OUTLOOK_DOLLARS_MSGID && !__T_DOLLAR_MUA_2 && !__UNUSABLE_MSGID)

# This is hitting nothing.  Maybe it's gone again...
header T_RCVD_IN_PDL	 	rbleval:check_rbl_txt('pdl-notfirsthop', 'dialups.visi.com.')
describe T_RCVD_IN_PDL		Received via a relay in PDL, http://www.pan-am.ca/pdl/
tflags T_RCVD_IN_PDL		net

rawbody T_RNDMX			/<rndmx\b/
describe T_RNDMX		Contains 'rndmx' hashbuster code

########################################################################
# This ratware always uses a +0000 TZ in the Date header, and has a multiplicity
# of From: header formats. ("From" header samples from Steven Champeon
# <schampeo.hesketh.com> via the spamtools.lists.abuse.net and SPAM-L lists).
#
# Note that this ratware is also quite buggy -- it regularly sends out spam
# mails with no subject line or body text!
#
# "First Last" <firstlast_[a-z][a-z]@somedomain>	1
# "First Last" <firstlast[a-z][a-z]@somedomain>		1
# "First Last" <first.last[a-z][a-z]@somedomain>	1
# "First Last" <first_last[a-z][a-z]@somedomain>	1
# "First Last" <first_last_[a-z][a-z]@somedomain>	1
# "First Last" <flast_[a-z][a-z]@somedomain>		2
# "First Last" <flast[a-z][a-z]@somedomain>		2
# "First Last" <f.last_[a-z][a-z]@somedomain>		2
# "First Last" <f.last[a-z][a-z]@somedomain>		2
# "First Last" <f_last[a-z][a-z]@somedomain>		2
# "First Last" <last[a-z][a-z]@somedomain>		3
# "First M. Last" <firstlast_[a-z][a-z]@somedomain>	4
# "First M. Last" <firstlast[a-z][a-z]@somedomain>	4
# "First M. Last" <first.m.last[a-z][a-z]@somedomain>	5
# "First M. Last" <firstmlast[a-z][a-z]@somedomain>	5
# "First M. Last" <firstmlast_[a-z][a-z]@somedomain>	5
# "First M. Last" <fmlast_[a-z][a-z]@somedomain>	6
# "First M. Last" <mlast[a-z][a-z]@somedomain>		7
# "First M. Last" <m.last[a-z][a-z]@somedomain>		7
header __T_0_TZ_1	    From =~ /^\"(\w)(\w+) (\w+)\" <\1\2[\._]?\3_?[a-z][a-z]\@/i
header __T_0_TZ_2	    From =~ /^\"(\w)(\w+) (\w+)\" <\1[\._]?\3_?[a-z][a-z]\@/i
header __T_0_TZ_3	    From =~ /^\"(\w)(\w+) (\w+)\" <\3_?[a-z][a-z]\@/i
header __T_0_TZ_4	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\1\2[\._]?\4_?[a-z][a-z]\@/i
header __T_0_TZ_5	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\1\2[\._]?\3[\._]?\4_?[a-z][a-z]\@/i
header __T_0_TZ_6	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\1\3\4_?[a-z][a-z]\@/i
header __T_0_TZ_7	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\3[\._]?\4_?[a-z][a-z]\@/i

header __T_RATWARE_0_TZ_DATE		Date =~ / \+0000$/

meta T_RATWARE_0_TZ_1	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_1)
meta T_RATWARE_0_TZ_2	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_2)
meta T_RATWARE_0_TZ_3	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_3)
meta T_RATWARE_0_TZ_4	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_4)
meta T_RATWARE_0_TZ_5	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_5)
meta T_RATWARE_0_TZ_6	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_6)
meta T_RATWARE_0_TZ_7	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_7)

########################################################################
# rules to detect certain generally unnecessary encodings in HTML

rawbody T_ENTITY_WHITESPACE_R	/\&\#(?:10|32)\;/
body T_ENTITY_WHITESPACE_B	/\&\#(?:10|32)\;/
meta T_ENTITY_WHITESPACE_M	(T_ENTITY_WHITESPACE_R || T_ENTITY_WHITESPACE_B)

rawbody T_ENTITY_ALPHANUM_R	/\&\#(?:4[89]|5[0-7]|6[5-9][78]\d|9[0789]|1[01]\d|12[012])\;/
body T_ENTITY_ALPHANUM_B	/\&\#(?:4[89]|5[0-7]|6[5-9][78]\d|9[0789]|1[01]\d|12[012])\;/
meta T_ENTITY_ALPHANUM_M	(T_ENTITY_ALPHANUM_R || T_ENTITY_ALPHANUM_B)

rawbody T_ENTITY_OTHER1_R	/\&\#(?:46|47)\;/
body T_ENTITY_OTHER1_B		/\&\#(?:46|47)\;/
meta T_ENTITY_OTHER1_M		(T_ENTITY_OTHER1_R || T_ENTITY_OTHER1_B)

rawbody T_ENTITY_OTHER2_R	/\&\#(?:33|39|40|46|47)\;/
body T_ENTITY_OTHER2_B		/\&\#(?:33|39|40|46|47)\;/
meta T_ENTITY_OTHER2_M		(T_ENTITY_OTHER2_R || T_ENTITY_OTHER2_B)

########################################################################
# HTML title rules

# title not in head and/or in body
body T_HTML_TITLE_MISPLACED_1	eval:html_test('t_title_misplaced_1')
body T_HTML_TITLE_MISPLACED_2	eval:html_test('t_title_misplaced_2')
body T_HTML_TITLE_MISPLACED_3	eval:html_test('t_title_misplaced_3')
body T_HTML_TITLE_MISPLACED_4	eval:html_test('t_title_misplaced_4')
meta T_HTML_TITLE_MISPLACED_M1	(T_HTML_TITLE_MISPLACED_1 && T_HTML_TITLE_MISPLACED_2)
meta T_HTML_TITLE_MISPLACED_M2	(T_HTML_TITLE_MISPLACED_1 || T_HTML_TITLE_MISPLACED_2)

# this won't work well until we parse HTML documents separately
body T_HTML_TITLE_EXTRA		eval:html_test('t_title_extra')

# possible replacement rules
body T_HTML_TITLE_EMPTY		eval:html_title('!~ /\S/s')
body T_HTML_TITLE_UNTITLED_1	eval:html_title('=~ /untitled/i')
body T_HTML_TITLE_UNTITLED_2	eval:html_title('=~ /new page \d+/i')
body T_HTML_TITLE_UNTITLED_3	eval:html_title('=~ /untitled|new page \d+/i')

# according to the postmaster at qualcomm, no mail is sent from eudora.com, but it's heavily joe-jobbed ...
header T_FROM_EUDORA            From:addr =~ /\@eudora\.com/i

# similar concept for Delphi.com.  Was an ISP, now a car company!
# I think their username format is "First.Last"; requiring 2 digits
# will be pretty safe.  (lower rule as a baseline to see if we miss much)
header T_FROM_DELPHI		From:addr =~ /\d[^\@]+\d[^\@]+\@delphi\.com/i
header T_FROM_DELPHI_BASIC	From:addr =~ /\@delphi\.com/i

body T_RANDO_MIZE		/\$RAN[DOMI]*\s+[DOMI]*ZE/

# yet another open Yahoo! redirector
uri T_YAHOO_REDIR		/^http:\/\/srd\.yahoo\.com\//i

header T_HASHCASH_20		eval:check_hashcash_value('20', '21')
header T_HASHCASH_21		eval:check_hashcash_value('21', '22')
header T_HASHCASH_22		eval:check_hashcash_value('22', '23')
header T_HASHCASH_23		eval:check_hashcash_value('23', '24')
header T_HASHCASH_24		eval:check_hashcash_value('24', '25')
header T_HASHCASH_25		eval:check_hashcash_value('25', '26')
header T_HASHCASH_26		eval:check_hashcash_value('26', '9999')
tflags T_HASHCASH_20		nice
tflags T_HASHCASH_21		nice
tflags T_HASHCASH_22		nice
tflags T_HASHCASH_23		nice
tflags T_HASHCASH_24		nice
tflags T_HASHCASH_25		nice
tflags T_HASHCASH_26		nice
score T_HASHCASH_20		-0.5
score T_HASHCASH_21		-0.7
score T_HASHCASH_22		-1.0
score T_HASHCASH_23		-2.0
score T_HASHCASH_24		-3.0
score T_HASHCASH_25		-4.0
score T_HASHCASH_26		-5.0

header T_HASHCASH_2SPEND	eval:check_hashcash_double_spend()
describe T_HASHCASH_2SPEND	HashCash token already spent in another mail
score T_HASHCASH_2SPEND		0.1

# Altavista.com's Greg Connor gconnor at nekodojo.org says 'they never send
# mail'; <2423209050.1071572609@[172.23.65.45]>, Tue, 16 Dec 2003 11:03:29
# -0800, on the spf-discuss at v2.listbox.com mailing list.  Let's see
# what this results in!
#
header T_FAKE_FROM_ALTAVISTA	From:addr =~ /\@altavista\.com$/i
header T_FAKE_TO_ALTAVISTA	To:addr =~ /\@altavista\.com$/i
header T_FAKE_REPTO_ALTAVISTA	Reply-To:addr =~ /\@altavista\.com$/i
header T_FAKE_ERRSTO_ALTAVISTA	Errors-To:addr =~ /\@altavista\.com$/i
header T_FAKE_ENVFROM_ALTAVISTA	EnvelopeFrom =~ /\@altavista\.com$/i

header T_FAKE_OUTBLAZE_RCVD	Received =~ /\.mr\.outblaze\.com/
header T_FAKE_OUTBLAZE_MID_1	Message-Id =~ /\.mr\.outblaze\.com/
header T_FAKE_OUTBLAZE_MID_2	MESSAGEID =~ /\.mr\.outblaze\.com/

header T_ALL_TRUSTED		eval:check_all_trusted()
describe T_ALL_TRUSTED		Did not pass through any untrusted hosts
tflags T_ALL_TRUSTED		nice

# both aspects of same spammer tool
header T_NETIP_RCVD		Received =~ /netIP with HTTP\;/
header T_NETIP_BOUND		Content-Type =~ /boundary="--ALT--[A-Z]{4}\d/

header T_XORIGIP_INVALID	X-Originating-IP =~ /[^\[\]\s\.\d]/

# some tests to catch long lines of random dictionary words
# this could be slow, being a rawbody rule, but if it works well maybe
# we should consider a way to spot these kinds of auto-generated
# text patterns efficiently...
rawbody T_BAYESBUSTER_LINE_12	/^([a-z]{3,} ){12,}<[Bb][Rr]>$/
rawbody T_BAYESBUSTER_LINE_15	/^([a-z]{3,} ){15,}<[Bb][Rr]>$/
rawbody T_BAYESBUSTER_LINE_15I	/^([a-z]{3,} ){15,}<br>$/i

# reported by Kurtis Rader, bug 2890
uri T_MSN_REDIR		/^http:\/\/shopping\.msn\.com\/trackurl\.aspx\?/i
describe T_MSN_REDIR	Has MSN Redirect URI

# Catches e.g. 'Re: EFDNOX, a thousand dollars', 'Re: ZJXQAOBK, dont know
# anything', 'Re: ODLI, came the noise' but misses 'Re: MNCYU, thought: of
# testing'.  Has to avoid FPs like 'Re: SIGSEGV, where are you?', 'Re: EXMH,
# Metamail and RH8.0'.
#
header T_RE_UC_3WORDS	Subject =~ /^[rR][eE]: [A-Z]{3,12},(?:\s[A-Z][a-z]+){3}$/
describe T_RE_UC_3WORDS	Has Subject in form "Re: UPPERCASE, word word word"

# Spammers are now attempting to use tiny font sizes to hide hashbusters
body T_HTML_FONT_TINY		eval:html_test('t_tiny_font')
describe T_HTML_FONT_TINY	HTML has a tiny font

# HTML bad tag percentage
body T_HTML_BADTAGS_00_10	eval:html_range('t_bad_tag_ratio','0.00','0.10')
body T_HTML_BADTAGS_10_20	eval:html_range('t_bad_tag_ratio','0.10','0.20')
body T_HTML_BADTAGS_20_30	eval:html_range('t_bad_tag_ratio','0.20','0.30')
body T_HTML_BADTAGS_30_40	eval:html_range('t_bad_tag_ratio','0.30','0.40')
body T_HTML_BADTAGS_40_50	eval:html_range('t_bad_tag_ratio','0.40','0.50')
body T_HTML_BADTAGS_50_60	eval:html_range('t_bad_tag_ratio','0.50','0.60')
body T_HTML_BADTAGS_60_70	eval:html_range('t_bad_tag_ratio','0.60','0.70')
body T_HTML_BADTAGS_70_80	eval:html_range('t_bad_tag_ratio','0.70','0.80')
body T_HTML_BADTAGS_80_90	eval:html_range('t_bad_tag_ratio','0.80','0.90')
body T_HTML_BADTAGS_90_100	eval:html_range('t_bad_tag_ratio','0.90','1.00')

# HTML bad tag percentage for unique tags
body T_HTML_BADTAGS_U_00_10	eval:html_range('t_bad_tag_unique_ratio','0.00','0.10')
body T_HTML_BADTAGS_U_10_20	eval:html_range('t_bad_tag_unique_ratio','0.10','0.20')
body T_HTML_BADTAGS_U_20_30	eval:html_range('t_bad_tag_unique_ratio','0.20','0.30')
body T_HTML_BADTAGS_U_30_40	eval:html_range('t_bad_tag_unique_ratio','0.30','0.40')
body T_HTML_BADTAGS_U_40_50	eval:html_range('t_bad_tag_unique_ratio','0.40','0.50')
body T_HTML_BADTAGS_U_50_60	eval:html_range('t_bad_tag_unique_ratio','0.50','0.60')
body T_HTML_BADTAGS_U_60_70	eval:html_range('t_bad_tag_unique_ratio','0.60','0.70')
body T_HTML_BADTAGS_U_70_80	eval:html_range('t_bad_tag_unique_ratio','0.70','0.80')
body T_HTML_BADTAGS_U_80_90	eval:html_range('t_bad_tag_unique_ratio','0.80','0.90')
body T_HTML_BADTAGS_U_90_100	eval:html_range('t_bad_tag_unique_ratio','0.90','1.00')

# more portable replacement for RCVD_NUMERIC_HELO that doesn't rely on
# Received headers using "helo=" prefix
header T_RCVD_NUMERIC_HELO	X-Spam-Relays-Untrusted =~ / helo=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} /
describe T_RCVD_NUMERIC_HELO	Received: contains an IP address used for HELO
# same but not for first line
header T_RCVD_NUMERIC_HELO_NOTFIRST	X-Spam-Relays-Untrusted =~ / helo=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} .+\[/
describe T_RCVD_NUMERIC_HELO_NOTFIRST	Received: contains an IP address used for HELO (not first line)

# If the Message-Id claims to be added by one ISP, there should be a Received
# header which mentions that ISP.
header __MSGID_HAS_HOTMAIL	MESSAGEID =~ /hotmail\.com/
header __RCVD_HAS_HOTMAIL	Received =~ /(?:hotmail|msn)\.com/
meta T_MID_RCVD_DIFF_HOTMAIL	(__MSGID_HAS_HOTMAIL && !__RCVD_HAS_HOTMAIL)
describe T_MID_RCVD_DIFF_HOTMAIL Message-Id does not match Received (hotmail.com)

header __MSGID_HAS_AOL	MESSAGEID =~ /aol\.com/
header __RCVD_HAS_AOL	Received =~ /aol\.com/
meta T_MID_RCVD_DIFF_AOL	(__MSGID_HAS_AOL && !__RCVD_HAS_AOL)
describe T_MID_RCVD_DIFF_AOL	Message-Id does not match Received (aol.com)

uri	T_URI_UNPRINTABLE	/%0/
describe T_URI_UNPRINTABLE	URI contains unprintable characters

# These rules use a simple algorithm to determine if the text and html
# parts of an multipart/alternative message are different...
# Even with the simple algorithm, it's amazing!  - 2004.01.14, tvd
#
#OVERALL%   SPAM%     HAM%     S/O    RANK   SCORE  NAME
# 140567    59829    80738    0.426   0.00    0.00  (all messages)
#100.000  42.5626  57.4374    0.426   0.00    0.00  (all messages as %)
# 29.308  68.8529   0.0050    1.000   1.00    0.01  T_MPART_ALT_DIFF_99
# 29.353  68.9549   0.0074    1.000   1.00    0.01  T_MPART_ALT_DIFF_98
# 29.429  69.1220   0.0149    1.000   1.00    0.01  T_MPART_ALT_DIFF_97
# 29.470  69.2123   0.0198    1.000   1.00    0.01  T_MPART_ALT_DIFF_96
# 29.483  69.2323   0.0285    1.000   1.00    0.01  T_MPART_ALT_DIFF_95
# 29.771  69.8892   0.0421    0.999   1.00    0.01  T_MPART_ALT_DIFF_90
#
body T_MPART_ALT_DIFF_90      eval:multipart_alternative_difference('90', '100')
body T_MPART_ALT_DIFF_95      eval:multipart_alternative_difference('95', '100')
body T_MPART_ALT_DIFF_96      eval:multipart_alternative_difference('96', '100')
body T_MPART_ALT_DIFF_97      eval:multipart_alternative_difference('97', '100')
body T_MPART_ALT_DIFF_98      eval:multipart_alternative_difference('98', '100')
body T_MPART_ALT_DIFF_99      eval:multipart_alternative_difference('99', '100')

# 0 nonspam hits, hundreds of spam hits.  Serious problems there
uri T_TERRA_ES		/terra\.es\//i
describe T_TERRA_ES	Contains images or links to pages hosted at 'terra.es'

# bug 2957
uri T_INFO_TLD			/^(?:https?:\/\/|mailto:)[^\/]+\.info(?:\/|$)/i
describe T_INFO_TLD		Contains a URL in the INFO top-level domain    

header T_RCVD_IN_BOGUSMX	rbleval:check_rbl_from_host('rfci-bmx', 'bogusmx.rfc-ignorant.org.')
describe T_RCVD_IN_BOGUSMX	Received via a relay in BogusMX, http://www.rfc-ignorant.org/
tflags T_RCVD_IN_BOGUSMX	net

# bug 2071
body            T_GEVALIACOFFEE           /\bGevalia (?:Coffee|Kaffe)\b/i
describe        T_GEVALIACOFFEE           Selling Gevalia Coffee

# bug 2970: Bob Menschel's "longwords" rules
body     T_RM_BPT_LONGWORDS_68A /\b(?:[a-z]{6,}\s+){8}/
describe T_RM_BPT_LONGWORDS_68A Long string of long words
body     T_RM_BPT_LONGWORDS_69A /\b(?:[a-z]{6,}\s+){9}/
describe T_RM_BPT_LONGWORDS_69A Long string of long words
body     T_RM_BPT_LONGWORDS_78A /\b(?:[a-z]{7,}\s+){8}/
describe T_RM_BPT_LONGWORDS_78A Long string of long words
body     T_RM_BPT_LONGWORDS_59A /\b(?:[a-z]{5,}\s+){9}/
describe T_RM_BPT_LONGWORDS_59A Long string of long words
body     T_RM_BPT_LONGWORDS_79A /\b(?:[a-z]{7,}\s+){9}/
describe T_RM_BPT_LONGWORDS_79A Long string of long words
body     T_RM_BPT_LONGWORDS_96A /\b(?:[a-z]{9,}\s+){6}/
describe T_RM_BPT_LONGWORDS_96A Long string of long words
body     T_RM_BPT_LONGWORDS_88A /\b(?:[a-z]{8,}\s+){8}/
describe T_RM_BPT_LONGWORDS_88A Long string of long words
body     T_RM_BPT_LONGWORDS_89A /\b(?:[a-z]{8,}\s+){9}/
describe T_RM_BPT_LONGWORDS_89A Long string of long words
body     T_RM_BPT_LONGWORDS_97 /\b(?:\w{9,}\s+){7}/
describe T_RM_BPT_LONGWORDS_97 Long string of long words
body     T_RM_BPT_LONGWORDS_98 /\b(?:\w{9,}\s+){8}/
describe T_RM_BPT_LONGWORDS_98 Long string of long words
body     T_RM_BPT_LONGWORDS_99 /\b(?:\w{9,}\s+){9}/
describe T_RM_BPT_LONGWORDS_99 Long string of long words

# "www" hidden as "%77%77%77", "ww%77", etc.
# note: *not* anchored to start of string, to catch use of redirectors
uri	 T_HTTP_77	/http:\/\/.{0,2}\%77/
describe T_HTTP_77	Contains a URL-encoded hostname (HTTP77)

# Interesting new feature; spamware HELO'ing, from a dialup IP addr,
# using that IP's rDNS entry.  We can catch this easily.

# dhcp024-210-034-053.columbus.rr.com [24.210.34.53]
# c-66-176-16-108.se.client2.attbi.com [66.176.16.108]
# c-67-168-174-61.client.comcast.net [67.168.174.61]
header T_HELO_DYNAMIC_IPADDR X-Spam-Relays-Untrusted =~ / helo=[^\.]+\d+\D\d+\D\d+\D\d+\D[^\.]*\.\S+\.\S+/i
# dhcp024-210-034-053.columbus.rr.com [24.210.34.53]
header T_HELO_DYNAMIC_RR   X-Spam-Relays-Untrusted =~ / helo=\S*(?:docsis|cable|dsl|adsl|dhcp|cpe)\S*\d+\D+\d+/i
# fia83-8.dsl.hccnet.nl [62.251.8.83]
# fia160-115-100.dsl.hccnet.nl [80.100.115.160]
header T_HELO_DYNAMIC_HCC   X-Spam-Relays-Untrusted =~ / helo=\S*\d+\D+\d+\S*\.(?:docsis|cable|dsl|adsl|dhcp|cpe)\./i
# f88114.upc-f.chello.nl [80.56.88.114]
header T_HELO_DYNAMIC_CHELLO X-Spam-Relays-Untrusted =~ / helo=\S+upc-f\.chello\.nl/i
# h0002a5d76857.ne.client2.attbi.com [65.96.12.59]
header T_HELO_DYNAMIC_ATTBI  X-Spam-Relays-Untrusted =~ / helo=\S+\d+\S+\.client2\.attbi\.com/i
# pcp04024417pcs.toresd01.pa.comcast.net [68.86.206.126]
# bgp542174bgs.ewndsr01.nj.comcast.net[68.38.144.91]
header T_HELO_DYNAMIC_COMCAST X-Spam-Relays-Untrusted =~ / helo=(?:pcp|bgp)\S+(?:pcs|bgs)\.comcast\.net/i
# CPE0004e2372711-CM000a73666706.cpe.net.cable.rogers.com
# CPE00e0184f0eba-CM014490118324.cpe.net.cable.rogers.com [24.43.109.140]
header T_HELO_DYNAMIC_ROGERS X-Spam-Relays-Untrusted =~ / helo=CPE\d+\S+\.rogers\.com/i
# ca-morpark-cuda1-zone7-b-159.vnnyca.adelphia.net[67.23.129.159]
# tn-greenvillecuda1cable7a-36.atlaga.adelphia.net [68.171.113.36]
# ky-richmond2a-123.rhmdky.adelphia.net [68.71.36.123]
# ny-lackawannacadent4-chtwga3a-b-117.buf.adelphia.net [68.71.205.117]
# fl-edel-u2-c3c-233.pbc.adelphia.net [68.64.89.233]
header T_HELO_DYNAMIC_ADELPHIA X-Spam-Relays-Untrusted =~ / helo=[a-z]{2}-\S+-\d{1,3}\.[a-z]{3,8}\.adelphia\.net/i
# pD9E4F89F.dip.t-dialin.net [217.228.248.159]
header T_HELO_DYNAMIC_DIALIN X-Spam-Relays-Untrusted =~ / helo=[a-z][A-F0-9]+\.dip\./

# bug 2992: Proposed new rules, Martin Radford
header T_RCVD_DOUBLE_IP		Received =~ /from \[\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\] by \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3} with HTTP;/
describe T_RCVD_DOUBLE_IP	Bulk email fingerprint (double IP) found

header T_MIME_BOUND_DIGITS15	Content-Type =~ /boundary=\"\d{15,}\"/
describe T_MIME_BOUND_DIGITS15	MIME boundary contains all digits

header T_MSGID_SPAM_2_A		Message-Id =~ /<[A-Z]{7}-000[0-9]{10}\@[a-z]*>/
describe T_MSGID_SPAM_2_A	Message-ID has known spammer pattern
header T_MSGID_SPAM_2_B		MESSAGEID =~ /<[A-Z]{7}-000[0-9]{10}\@[a-z]*>/
describe T_MSGID_SPAM_2_B	Message-ID has known spammer pattern

# another Message-Id format (pick one as MSGID_SPAM_3)
header T_MSGID_SPAM_3_5		Message-Id =~ /<[a-z]{5,}\@(\S+\.)+\S+>/
describe T_MSGID_SPAM_3_5	Message-ID has known spammer pattern
header T_MSGID_SPAM_3_6		Message-Id =~ /<[a-z]{6,}\@(\S+\.)+\S+>/
describe T_MSGID_SPAM_3_6	Message-ID has known spammer pattern
header T_MSGID_SPAM_3_7		Message-Id =~ /<[a-z]{7,}\@(\S+\.)+\S+>/
describe T_MSGID_SPAM_3_7	Message-ID has known spammer pattern

# evil spam tool
# Message-ID generator algorithm:
# letter: 1/2 (pick a-z) | 1/2 (pick 0-9)
# 10-29 letters: 1/8 (pick $) | 1/8 (pick -) | 3/8 (pick a-z) | 3/8 (pick 0-9)
# letter: 1/2 (pick a-z) | 1/2 (pick 0-9)
# @
# letter: 2/3 (pick a-z) | 1/3 (pick 0-9)
# 3-12 letters: 1/8 (pick .) | 7/12 (pick a-z) | 7/24 (pick 0-9)
# letter: 2/3 (pick a-z) | 1/3 (pick 0-9)
header T_MSGID_EVIL_SPAM_1	MESSAGEID =~ /<[a-z\d][a-z\d\$-]+[a-z\d]\@[a-z\d][a-z\d.]+[a-z\d]>/
header T_MSGID_EVIL_SPAM_2	MESSAGEID =~ /<[a-z\d][a-z\d\$-]{10,29}[a-z\d]\@[a-z\d][a-z\d.]{3,12}[a-z\d]>/

header T_SUBJ_XANAX		Subject =~ /x.{0,2}a.{0,2}n.{0,2}a.{0,2}x/i

