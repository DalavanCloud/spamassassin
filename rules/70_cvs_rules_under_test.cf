# SpamAssassin rules file: CVS rules under test
#
# This file is a placeholder for rules "under probation", ie. checked into
# CVS for testing. It should not be distributed; if the rules have good
# stats after a mass-check or two, then fold them into the distributed
# rules files.
#
# I suggest adding a prefix to rules in this file, "T_" -- this
# helps identify probationary rules in test output.
#
###########################################################################

# should be fixed now
# updated per bug 1217
# %%% INVALID_MSGID
# Dec 17 2002 jm: added subtest since part of my corpus has no msgid
# Dec 17 2002 jm: btw, one FP is for
# <41340.2001:770:18:1:250:4ff:feea:4364.1028136205.squirrel@webmail.heanet.ie>,
# ie an IPv6 address in the msgid.  Not sure if that's interesting or not ;)
header __VALID_MSGID MESSAGEID =~ /^<(?:[a-zA-Z0-9.,!\#\$%&'*\+\/=?\^_{}|~-]+|\".+\")\@(?:[a-zA-Z0-9_.-]+|\[\d{1,3}(?:\.\d{1,3}){3}\])>(?:\s*\(.*\))?\s*$/m [if-unset: <NO@MSGID>]
header __HAS_MSGID		MESSAGEID =~ /\S/
meta T_INVALID_MSGID		__HAS_MSGID && !__VALID_MSGID
describe T_INVALID_MSGID	Message-Id is not valid, according to RFC 2822
#
# quinlan: If this has a better S/O for others (all of my FPs are from the
# same person), it should be an eval so this can be done properly: strip
# comments on each Message-Id header, then use regular expression.
# Dec 18 2002 jm: S/Os aren't much better for others, but I think we should
# do it that way anyway.
#
header __MSGID_COMMENT		MESSAGEID =~ /\(.*\)/m
meta T_INVALID_MSGID2		__HAS_MSGID && !(__VALID_MSGID || __MSGID_COMMENT)


# these rules may need to factor in ok_languages or ok_locales
# Dec 18 2002 jm: but how? ;)  They are ready to be promoted otherwise
#freqs:  0.084   0.2047   0.0095    0.956   0.84    0.01  T_BODY_UNPRINTABLE
body T_BODY_UNPRINTABLE		/[\x00-\x07\x0b\x0c\x0e-\x1f\x7f]{3,}/
describe T_BODY_UNPRINTABLE	Body includes 3 consecutive unprintable characters
#freqs:  3.660   9.4529   0.0442    0.995   0.96    0.01  T_BODY_8BITS
body T_BODY_8BITS		/[\x80-\xff]{8,}/
describe T_BODY_8BITS		Body includes 8 consecutive 8-bit characters

########################################################################
# bug 1106: forged MUAs
# only needed a \b around the shortest X-Mailer regular expressions

# Mozilla
# Dec 10 2002 jm: dan, you have fps for this, could you check 'em?
header __MOZILLA_MUA		X-Mailer =~ /\bMozilla\b/
header __MOZILLA_MSGID		MESSAGEID =~ /^<[A-F\d]{8}\.[A-F\d]{4,8}\@\S+>$/
meta T_FORGED_MUA_MOZILLA	(__MOZILLA_MUA && !__UNUSABLE_MSGID && !__MOZILLA_MSGID)
describe T_FORGED_MUA_MOZILLA	Forged mail pretending to be from Mozilla
score T_FORGED_MUA_MOZILLA	1.0

# Hmm... maybe possible to use a variant on the check_outlook_timestamp_token
# test for the time component of the MOZILLA rules. - Allen

header __MOZILLA_MSGID2         MESSAGEID =~ /^<[A-F\d]{8}\.[A-F\d]{4,8}\@\S+>$/m
meta T_FORGED_MUA_MOZILLA2      (__MOZILLA_MUA && !__UNUSABLE_MSGID && !__MOZILLA_MSGID2)
describe T_FORGED_MUA_MOZILLA2  Forged mail pretending to be from Mozilla (2)
score T_FORGED_MUA_MOZILLA2     1.0

header __MOZILLA_MSGID3         MESSAGEID =~ /^<[A-F\d]{8}\.[A-F1-9][A-F\d]{0,7}\@\S+>$/m
meta T_FORGED_MUA_MOZILLA3      (__MOZILLA_MUA && !__UNUSABLE_MSGID && !__MOZILLA_MSGID3)
describe T_FORGED_MUA_MOZILLA3  Forged mail pretending to be from Mozilla (3)
score T_FORGED_MUA_MOZILLA3     1.0

# note: T_FORGED_MUA_MOZILLA4 now obsolete since I put the CWT/DCE thing into
# check_messageid_not_usable()

########################################################################

# this is the only To/Cc/From "no lower" version of this idea with a
# somewhat reasonable S/O ratio
# Dec 18 2002 jm: not bothered with this
header T_FROM_NO_LOWER		From !~ /[a-z]/

###########################################################################

# Dec 18 2002 jm:
# pretty good, will promote it tomorrow once Allen's had a look at
# excluding his FPs
header __IDENT_NOBODY		Received =~ /ident[:=]nobody\b/i
header __REGSITE_COM		Received =~ /\.registeredsite\.com\s/
meta T_IDENT_NOBODY		(__IDENT_NOBODY && !__REGSITE_COM)
describe T_IDENT_NOBODY		Message was sent by nobody
score T_IDENT_NOBODY		1.0
# Allen's version
meta T_IDENT_NOBODY2		(__IDENT_NOBODY && !__REGSITE_COM && !((FORGOTTEN_PASSWORD + SUBJECT_IS_LIST + T_X_BEENTHERE + KNOWN_MAILING_LIST) > 1))

# Dec 20 2002 jm: let's try and catch these spammers out
header __XIMIAN_MUA	     X-Mailer =~ /^(?:Ximian Evolution|Evolution\/\d+\.)/
# interestingly the last word (\S+) always seems to be 'camel' ;)
header __XIMIAN_MSGID	     MESSAGEID =~ /^<\d{10}\.\d+\.\d+\.\S+\@/
meta T_USER_AGENT_XIMIAN     (__XIMIAN_MSGID && __XIMIAN_MUA && !__UNUSABLE_MSGID)
score  T_USER_AGENT_XIMIAN   -0.5
tflags T_USER_AGENT_XIMIAN   nice

##############################################################################

# Nov 12 2002 jm: not keen on this.  many ISPs do not provide rDNS these
# days as policy. stupid policy, but there we are. and SpamAssassin policy
# is not to punish users with stupid ISPs...
#
# Dec 20 2002 jm: should make fantastic meta-fodder though. ;)
#
#freqs: 11.817  22.1680   5.3554    0.805   0.53    0.01  T_SENDER_NO_REVERSE
header   T_SENDER_NO_REVERSE    eval:check_for_sender_no_reverse()
describe T_SENDER_NO_REVERSE    No reverse lookup for sender's IP

# Here are some tests for weird double quoting in the body (I tried 37
# variations, these are the best 10, in rough order best RANK to worst
# RANK). - quinlan
# P.S. I feel really icky after writing these.
body T_BODY_QUOTES_01	/(["'])\1\S{0,15}(["'])\1/
body T_BODY_QUOTES_02	/(["']{2})\S{0,15}\1/
body T_BODY_QUOTES_03	/(["'\222\223\224\262\263\271])\1\S{0,15}(["'\222\223\224\262\263\271])\1/
body T_BODY_QUOTES_04	/(["'\222\223\224\262\263\271]{2})\S{0,15}\1/
body T_BODY_QUOTES_05	/['\222\223\224\262\263\271]{2}\S{0,15}['\222\223\224\262\263\271]{2}/
body T_BODY_QUOTES_06	/["'\222\223\224\262\263\271]{2}.{0,15}["\222\223\224\262\263\271]{2}/
body T_BODY_QUOTES_07	/(["'\222\223\224\262\263\271]{2}).{0,15}\1/
body T_BODY_QUOTES_08	/(["'])\1.{0,15}(["'])\1/
body T_BODY_QUOTES_09	/(["']{2}).{0,15}\1/
body T_BODY_QUOTES_10	/(["'\222\223\224\262\263\271])\1.{0,15}(["'\222\223\224\262\263\271])\1/

#bug 1010
body T_CHECK_EMAIL_ISFREE	eval:check_email_isfree()
describe T_CHECK_EMAIL_ISFREE Body contains an e-mail address listed by Email::IsFree

# numeric mailto
# Dec 20 2002 jm: my FPs *do not* contain this pattern! does.. not.. compute...
# ok, it's the implicit addition of "mailto:" for mail-addr lookalikes, which
# also includes user@host CVSroot specs etc.  Let's try using a rawbody pattern.
rawbody T_NUMERIC_MAILTO_ADDR	/\bmailto:[^\s\@]{1,20}\@\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/is

#bug 652
# 12/20 - looks very good for easmith, and pretty ok for everyone except rOD - tvd
#easmith	0.536   2.4914   0.0000    1.000   0.93    0.01  T_SUBJ_BUY
#jm		0.082   0.2365   0.0166    0.934   0.78    0.01  T_SUBJ_BUY
#quinlan	0.056   0.1425   0.0000    1.000   0.92    0.01  T_SUBJ_BUY
#rODbegbie	0.067   0.1658   0.0267    0.861   0.61    0.01  T_SUBJ_BUY
#theo		0.120   0.2911   0.0135    0.956   0.81    0.01  T_SUBJ_BUY
header T_SUBJ_BUY			Subject =~ /^buy/i
describe T_SUBJ_BUY		Subject starts with Buy, Buying

# bug 1014
# from Allen
# 12/20 - Not great, but looks ok, what say ye?  - tvd
# daf		0.000   0.0000   0.0000    0.500   0.11    0.01  T_FROM_HAS_UNDERLINE_NUMS
# easmith	0.107   0.4216   0.0210    0.953   0.80    0.01  T_FROM_HAS_UNDERLINE_NUMS
# jm		0.460   1.2612   0.1220    0.912   0.73    0.01  T_FROM_HAS_UNDERLINE_NUMS
# quinlan	0.484   1.2217   0.0130    0.989   0.90    0.01  T_FROM_HAS_UNDERLINE_NUMS
# rODbegbie	0.471   1.4918   0.0600    0.961   0.86    0.01  T_FROM_HAS_UNDERLINE_NUMS
# theo		0.540   1.2008   0.1308    0.902   0.68    0.01  T_FROM_HAS_UNDERLINE_NUMS
header __FROM_HAS_UNDERLINE_NUMS	From =~ /_\S?(?:[a-z]+\w*?\d+|\d+\w*?[a-z]+)\w*\@/i
meta T_FROM_HAS_UNDERLINE_NUMS		(!T_REPLY_TO_HAS_UNDERLINE_NUMS && __FROM_HAS_UNDERLINE_NUMS)
describe T_FROM_HAS_UNDERLINE_NUMS	From: contains an underline and numbers/letters

# from bug 1173
# drop it; lots of spam comes via MM lists, esp. since I've seen spammers using
# MM-specific web crawlers, so this is not a good rule
#header T_X_BEENTHERE		exists:X-BeenThere
#describe T_X_BEENTHERE	X-BeenThere header exists

# 708
# quinlan FP: "at some point you offered" (match on the last three words)
body T_OFFER_1			/\b(?:free|trial|full|phone|points?|hottest|internet|great|of this|about this|dealer|responded|not an|pay|are able to|future|valuable|partner|receiv(?:e|ed|ing)|introductory|exclusive|promotional|coupon|bonus|further|following|product|proud to|additional|website|amazing|discounts?)\b.{0,9}(?:this|these|)\boffer(?:s|ings?|ed|)\b/i
describe T_OFFER_1		Offers you Something

body T_OFFER_2			/\boffer(?:s|ings?|)\b.{0,9}\b(?:expires|subject|limited|ends|mailed|originator|contained|discounts?|confidential|is ood|available|valid|in error|!)\b/i
describe T_OFFER_2		Offers you Something (2)

body T_OFFER_3			/this offer is|we offer (?:you|over)|offers?@/i
describe T_OFFER_3		Offers you Something (3)

body T_SPECIAL_OFFER		/\bspecial .{0,15}\boffer(?:s|ings?|ed|)/i
describe T_SPECIAL_OFFER		Special Offer

uri T_OFFER_URI			/^https?:\/\/.*?(?:offers?\.\w|[.\/]offer|offer=)/i 
describe T_OFFER_URI		Offer in link address

# bug 726
body T_VISIT_OUR_SITE /\b(?:visit|enter)\s+(?:my|our|the|this)\s+(?:web\s*)?site/i
describe T_VISIT_OUR_SITE         Wants you to visit a web site
test T_VISIT_OUR_SITE  ok  Click below to enter our web site:
test T_VISIT_OUR_SITE  ok  Visit Our Web Site and Learn The Facts
test T_VISIT_OUR_SITE  ok  Just visit our site to learn how easy
test T_VISIT_OUR_SITE  ok  Visit the sites of our major partners:
# Dec 19 2002 jm: try out separation of "the", it seems to be FP-prone for me
body T_VISIT_OUR_SITE_2 /\b(?:visit|enter)\s+(?:my|our|this)\s+(?:web\s*)?site/i

# bug 878
# seems to inserted with s1618 rules VERY heavily
# 12/20 - not hit a lot, but no fps for anyone.  I added \b's around, if it looks good tomorrow I'll
# promote it - tvd
body T_WE_HATE_SPAM2 /\banti-spam policy\b/i
describe T_WE_HATE_SPAM2 Spammer is against spam -- aren't we all?

uri T_PXE_LOGIC /^http:\/\/(?:pxe|fx)\.[^\/]{1,50}\.com\/logic\/to\.pl\?/i
test T_PXE_LOGIC ok http://pxe.highspeed-email.com/logic/to.pl?i=3399923cd33d
describe T_PXE_LOGIC Spam URL pattern, usually made up domains

# mgm's rules for PXE above
uri T_DAILY_PL			/\/logic\/[a-z]{2}\.pl/
describe T_DAILY_PL		Spam URL pattern, DailyPromotions redirect link

uri T_DAILY_PXE			/http:\/\/(?:pxe|fx)\./i
describe T_DAILY_PXE		Spam URL pattern, DailyPromotions server link

# Specific whitelisting for GradFinder.  They use the sender's own
# From addr, so whitelist_from_rcvd won't cut it
# bug 1241
header __GRADF_MSGID	Message-ID =~ /\@gradfinder.com>$/
header __GRADF_RCVD	Received =~ /from \S+ \(\S+.friendfinder.com \[216\.34\./
meta T_VIA_GRADFINDER	(__GRADF_RCVD && __GRADF_MSGID)
tflags T_VIA_GRADFINDER	nice

# bug 1171
# Listproc - Allen (example: nonspam:<199811090515.AAA28259@chem.harvard.edu>)
header T_LISTPROC1		X-Listprocessor-version =~ /^\s*(?:\d\.)+\w*\s+--\s+List[Pp]roc(?:essor)?\b/
score T_LISTPROC1		-0.01
tflags T_LISTPROC1		nice

header __FROM_LISTPROC		From =~ /\blistproc\@/i
header __REPLY_LISTPROC		Reply-To =~ /\blistproc\@/i
header __SENDER_LISTPROC	Sender =~ /\blistproc\@/i
meta T_LISTPROC2		T_LISTPROC1 && __FROM_LISTPROC && (__REPLY_LISTPROC || __SENDER_LISTPROC)
score T_LISTPROC2		-0.01
tflags T_LISTPROC2		nice

# bug 1010
uri T_SUPER_BARGAINS_URL	/\bsuper-bargains\.com/
uri T_FANTASTIC_BARGAIN_URL	/\bfantastic-bargain\.com/
uri T_KAVKAZCENTER_URL		/\bkavkazcenter\.com/
uri T_FINESTOFFERS_URL		/\bfinestoffers\.com/
uri T_AEOPUBLISHING_URL		/\baeopublishing\.com/
uri T_SKY08_URL			/\bsky08\.com/
uri T_E_MAILPROMO_URL		/\be-mailpromo\.net/
uri T_MARINEDIGITAL_URL		/\bmarinedigital\.com/
uri T_ITSREMARKABLE_URL		/\bitsremarkable\.com/
#
uri T_SUPER_BARGAINS_MAILTO	/mailto:\S+[.@]super-bargains\.com/
uri T_FANTASTIC_BARGAIN_MAILTO	/mailto:\S+[.@]fantastic-bargain\.com/
uri T_KAVKAZCENTER_MAILTO	/mailto:\S+[.@]kavkazcenter\.com/
uri T_FINESTOFFERS_MAILTO	/mailto:\S+[.@]finestoffers\.com/
uri T_AEOPUBLISHING_MAILTO	/mailto:\S+[.@]aeopublishing\.com/
uri T_SKY08_MAILTO		/mailto:\S+[.@]sky08\.com/
uri T_E_MAILPROMO_MAILTO	/mailto:\S+[.@]e-mailpromo\.net/
uri T_MARINEDIGITAL_MAILTO	/mailto:\S+[.@]marinedigital\.com/
uri T_ITSREMARKABLE_MAILTO	/mailto:\S+[.@]itsremarkable\.com/

# quinlan: I think this is more correct
rawbody  T_MIME_LONG_LINE_QP	eval:check_for_mime_long_line_qp2()
describe T_MIME_LONG_LINE_QP	Quoted-printable line longer than 76 characters

header T_WITH_LC_SMTP		Received =~ /\swith\ssmtp;\s/
describe T_WITH_LC_SMTP		Received line contains spam-sign (lowercase smtp)

# bug 1211
body     __BILL_1618    /\D301\D+a\W*2\W*c\D+1618\D/i
describe __BILL_1618    Possible mention of bill 1618 (anti-spam bill)
meta     T_ANTISPAM_BILL  REMOVE_IN_QUOTES && __BILL_1618
describe T_ANTISPAM_BILL  Very likely mention of anti-spam bill

