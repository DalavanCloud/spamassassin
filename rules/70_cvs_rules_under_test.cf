# SpamAssassin rules file: CVS rules under test, $Revision: 1.648 $
#
# This file is a placeholder for rules "under probation", ie. checked into
# CVS for testing. It should not be distributed; if the rules have good
# stats after a mass-check or two, then fold them into the distributed
# rules files.
#
# I suggest adding a prefix to rules in this file, "T_" -- this
# helps identify probationary rules in test output.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of either the Artistic License or the GNU General
# Public License as published by the Free Software Foundation; either
# version 1 of the License, or (at your option) any later version.
#
# See the file "License" in the top level of the SpamAssassin source
# distribution for more details.
#
###########################################################################

# http://bugzilla.spamassassin.org/show_bug.cgi?id=2088
header T_RATWARE_MIME_844412	Content-Type =~ /boundary="[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"/

# http://bugzilla.spamassassin.org/show_bug.cgi?id=2087
header T_RATWARE_OE_DM	X-Mailer =~ /^Microsoft Outlook Express [\d\.]+ DM$/

# a referral ID
uri T_REF_ID			/[\?\&]RefID/

# http://bugzilla.spamassassin.org/show_bug.cgi?id=2089
header T_DATE_EXTRA_SPACE	Date =~ /^..., .\d ... \d\d\d\d \d\d:\d\d:\d\d  [\+\-]\d\d\d\d$/

# another one for bug 2089, may be more useful:
full __END_HASHBUSTER_1		/\n\[[a-z0-9]+\]\n\s*\Z/
meta T_RATWARE_2089		(NO_REAL_NAME && __END_HASHBUSTER_1)

# this is really badly faked.  Also the spammer who uses "25250101"
# for the build is a total hippie.
header T_RATWARE_GECKO_BUILD	User-Agent =~ /Gecko\/(?!200\d\d\d\d\d)\d/

# another good way to catch mozilla fakery
header __UA_GECKO		User-Agent =~ /Gecko\//
header __EXISTS_ACCEPT_LANG	exists:X-Accept-Language
meta T_RATWARE_GECKO_NO_LANG	(__UA_GECKO && !__EXISTS_ACCEPT_LANG)

# reminder: develop these after 2.60
full T_SPRINTF_5X	/[^-][A-F1-9][A-F0-9]{5,7}-[A-F1-9][A-F0-9]{5,7}-[A-F1-9][A-F0-9]{5,7}-[A-F1-9][A-F0-9]{5,7}-[A-F1-9][A-F0-9]{5,7}[^-]/

# (time_t/4444)
header T_TIME_OVER_4444	ALL =~ /\D23[67][0-9][0-9][0-9]\D/

# http://www.linux.or.jp/~ukai/l-u-spam/local.cf
header T_LJ_MISYOUDAKU Subject =~ /L\$>5Bz/
describe T_LJ_MISYOUDAKU Misyoudaku
header T_LJ_BANG_BANG Subject =~ /(!\*|\033\$[B@]).*(!\*|\033\([BJ]!)/
describe T_LJ_BANG_BANG !...!
header T_LJ_STAR Subject =~ /(\"\(|\*)/
describe T_LJ_STAR *
header T_LJ_KOUKOKU Subject =~ /9-9p/
describe T_LJ_KOUKOKU KOUKOKU
body T_LJ_HAISHINTEISHI /G\[\?\.(..)*(Dd;_|ITMW)/
describe T_LJ_HAISHINTEISHI Haishin Teishi
body T_LJ_KOUDOKUKAIJO /9XFI(..)*2r=\|/
describe T_LJ_KOUDOKUKAIJO Koudoku Kaijo
body T_LJ_MURYOU /L5NA/
describe T_LJ_MURYOU Muryou
header T_LJ_X_MAILER         X-Mailer =~ /(GpsMailer|SpireMail|IM2000 Version|Pinta Magazine|MultiMail|BSMTP DLL|E-Magazine|Direct Email|Achi-Kochi Mail|MagicalMail|InternetPost for Active Platform|Web Based Pronto)/
describe T_LJ_X_MAILER       spammer's choice of X-Mailer
header T_LJ_X_MAILER_U       X-MAILER =~ /Mail Explorer For Internet /
describe T_LJ_X_MAILER_U     spammer's choice of X-MAILER
header T_LJ_X_MAIL_AGENT     X-Mail-Agent =~ /(Extra Japan)/
describe T_LJ_X_MAIL_AGENT   spammer's choice of X-Mail-Agent
# also http://tlec.linux.or.jp/docs/user_prefs
meta T_LJ_MISYOUDAKUKOUKOKU T_LJ_MISYOUDAKU && T_LJ_KOUKOKU && T_LJ_STAR
describe T_LJ_MISYOUDAKUKOUKOKU T_LJ_MISYOUDAKU && T_LJ_KOUKOKU && T_LJ_STAR

# replacements for PORN_4; split out sub-patterns as some are more FP-prone
# than others.
uri T_PORN_URL_XXX         /^https?:\/\/[\w\.-]*xxx[\w-]*\./
uri T_PORN_URL_SEX         /^https?:\/\/[\w\.-]*(?<!es|ba)(?<!dle|sus)sex[\w-]*\./
uri T_PORN_URL_ANAL        /^https?:\/\/[\w\.-]*anal(?!og|y[sz])[\w-]*\./
uri T_PORN_URL_SLUT        /^https?:\/\/[\w\.-]*slut[\w-]*\./
uri T_PORN_URL_CUM         /^https?:\/\/[\w\.-]*(?<!cir)(?<!\bdo)cum(?!ul|be?r|b?en)[\w-]*\./
uri T_PORN_URL_LUST        /^https?:\/\/[\w\.-]*lust(?!(?<=illust)(?:rat|rious)|(?<=clust)er)[\w-]*\./
uri T_PORN_URL_PANT        /^https?:\/\/[\w\.-]*pant(?:y|ies)[\w-]*\./
uri T_PORN_URL_SUCK        /^https?:\/\/[\w\.-]*suck[\w-]*\./
uri T_PORN_URL_TEEN        /^https?:\/\/[\w\.-]*(?<!thir|four|eigh|nine)(?<!fif|six)(?<!seven)teen[\w-]*\./
uri T_PORN_URL_MISC        /^https?:\/\/[\w\.-]*(pussy|nympho|porn|hard-?core|taboo|whore|voyeur|lesbian|gurlpages|naughty|lolita|schoolgirl|kooloffer|erotic)[\w-]*\./

header T_KOREAN_UCE_SUBJECT	Subject:raw =~ /\?B\?KLGksO0p/

header T_DATE_DOUBLE_DASH	Date =~ /:\d\d --\d\d\d\d$/

# new blacklist!  very good one!
header T_RCVD_IN_CBL	eval:check_rbl_txt('cbl', 'cbl.abuseat.org.')
describe T_RCVD_IN_CBL	Received via a relay in cbl.abuseat.org
tflags T_RCVD_IN_CBL	net
score T_RCVD_IN_CBL	0.1

header T_RCVD_IN_SORBS_BADCONF	eval:check_rbl_sub('sorbs', '127.0.0.11')
describe T_RCVD_IN_SORBS_BADCONF SORBS: sender uses invalid DNS A or MX records
tflags T_RCVD_IN_SORBS_BADCONF	net
score T_RCVD_IN_SORBS_BADCONF	0.1

header T_RCVD_IN_SORBS_NOMAIL	eval:check_rbl_sub('sorbs', '127.0.0.12')
describe T_RCVD_IN_SORBS_NOMAIL	SORBS: sender is not expected to send mail
tflags T_RCVD_IN_SORBS_NOMAIL	net
score T_RCVD_IN_SORBS_NOMAIL	0.1

# SPF support.  "pass" is nice, "fail" is bad, "softfail" is bad, but
# not as bad as "fail".
header T_SPF_PASS	eval:check_for_spf_pass()
tflags T_SPF_PASS	net nice
score T_SPF_PASS	-0.1
header T_SPF_FAIL	eval:check_for_spf_fail()
tflags T_SPF_FAIL	net
score T_SPF_FAIL	0.1
header T_SPF_SOFTFAIL	eval:check_for_spf_softfail()
tflags T_SPF_SOFTFAIL	net
score T_SPF_SOFTFAIL	0.1


header T_ALL_RELAYS_NEAR_MXES	eval:check_for_all_relays_near_mxes()
tflags T_ALL_RELAYS_NEAR_MXES	net nice
score T_ALL_RELAYS_NEAR_MXES	-0.1
describe T_ALL_RELAYS_NEAR_MXES	All relays are near to their MXes

# try out new versions of username in subject ...
# "user@domain.com" in the subject, case insensitive
header T_USERNAME_IN_SUBJECT1     eval:check_for_to_in_subject('1')
describe T_USERNAME_IN_SUBJECT1   Full To: address listed in Subject:
header T_USERNAME_IN_SUBJECT2     eval:check_for_to_in_subject('2')
describe T_USERNAME_IN_SUBJECT2   To: username listed in Subject: (ucfirst)
header T_USERNAME_IN_SUBJECT3     eval:check_for_to_in_subject('3')
describe T_USERNAME_IN_SUBJECT3   Full To: address listed at front of Subject:

# catches a few spams missed by MSGID_OUTLOOK_INVALID
meta T_MSGID_DOLLARS_1		(__OUTLOOK_DOLLARS_MSGID && !__HAS_OUTLOOK_IN_MAILER && !__UNUSABLE_MSGID)
meta T_MSGID_DOLLARS_2		(__OE_MSGID_2 && !__HAS_OUTLOOK_IN_MAILER && !__UNUSABLE_MSGID)
header __T_DOLLAR_MUA_1		X-Mailer =~ /^Microsoft (?:CDO|Outlook)/
header __T_DOLLAR_MUA_2		X-Mailer =~ /^Microsoft (?:CDO|Outlook(?: 8|,Build 10| Express [456]|(?:IMO|CWS), Build 9))/
meta T_MSGID_DOLLARS_3		(__OUTLOOK_DOLLARS_MSGID && !__T_DOLLAR_MUA_1 && !__UNUSABLE_MSGID)
meta T_MSGID_DOLLARS_4		(__OUTLOOK_DOLLARS_MSGID && !__T_DOLLAR_MUA_2 && !__UNUSABLE_MSGID)

# Visi is back again.
header T_RCVD_IN_RSL	 	rbleval:check_rbl_txt('rsl', 'relays.visi.com.')
describe T_RCVD_IN_RSL		Received via a relay in RSL
tflags T_RCVD_IN_RSL		net

header T_RCVD_IN_PDL	 	rbleval:check_rbl_txt('pdl-notfirsthop', 'dialups.visi.com.')
describe T_RCVD_IN_PDL		Received via a relay in PDL, http://www.pan-am.ca/pdl/
tflags T_RCVD_IN_PDL		net

rawbody T_RNDMX			/<rndmx\b/
describe T_RNDMX		Contains 'rndmx' hashbuster code

########################################################################
# This ratware always uses a +0000 TZ in the Date header, and has a multiplicity
# of From: header formats. ("From" header samples from Steven Champeon
# <schampeo.hesketh.com> via the spamtools.lists.abuse.net and SPAM-L lists).
#
# Note that this ratware is also quite buggy -- it regularly sends out spam
# mails with no subject line or body text!
#
# "First Last" <firstlast_[a-z][a-z]@somedomain>	1
# "First Last" <firstlast[a-z][a-z]@somedomain>		1
# "First Last" <first.last[a-z][a-z]@somedomain>	1
# "First Last" <first_last[a-z][a-z]@somedomain>	1
# "First Last" <first_last_[a-z][a-z]@somedomain>	1
# "First Last" <flast_[a-z][a-z]@somedomain>		2
# "First Last" <flast[a-z][a-z]@somedomain>		2
# "First Last" <f.last_[a-z][a-z]@somedomain>		2
# "First Last" <f.last[a-z][a-z]@somedomain>		2
# "First Last" <f_last[a-z][a-z]@somedomain>		2
# "First Last" <last[a-z][a-z]@somedomain>		3
# "First M. Last" <firstlast_[a-z][a-z]@somedomain>	4
# "First M. Last" <firstlast[a-z][a-z]@somedomain>	4
# "First M. Last" <first.m.last[a-z][a-z]@somedomain>	5
# "First M. Last" <firstmlast[a-z][a-z]@somedomain>	5
# "First M. Last" <firstmlast_[a-z][a-z]@somedomain>	5
# "First M. Last" <fmlast_[a-z][a-z]@somedomain>	6
# "First M. Last" <mlast[a-z][a-z]@somedomain>		7
# "First M. Last" <m.last[a-z][a-z]@somedomain>		7
header __T_0_TZ_1	    From =~ /^\"(\w)(\w+) (\w+)\" <\1\2[\._]?\3_?[a-z][a-z]\@/i
header __T_0_TZ_2	    From =~ /^\"(\w)(\w+) (\w+)\" <\1[\._]?\3_?[a-z][a-z]\@/i
header __T_0_TZ_3	    From =~ /^\"(\w)(\w+) (\w+)\" <\3_?[a-z][a-z]\@/i
header __T_0_TZ_4	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\1\2[\._]?\4_?[a-z][a-z]\@/i
header __T_0_TZ_5	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\1\2[\._]?\3[\._]?\4_?[a-z][a-z]\@/i
header __T_0_TZ_6	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\1\3\4_?[a-z][a-z]\@/i
header __T_0_TZ_7	    From =~ /^\"(\w)(\w+) (\w)\. (\w+)\" <\3[\._]?\4_?[a-z][a-z]\@/i

header __T_RATWARE_0_TZ_DATE		Date =~ / \+0000$/

meta T_RATWARE_0_TZ_1	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_1)
meta T_RATWARE_0_TZ_2	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_2)
meta T_RATWARE_0_TZ_3	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_3)
meta T_RATWARE_0_TZ_4	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_4)
meta T_RATWARE_0_TZ_5	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_5)
meta T_RATWARE_0_TZ_6	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_6)
meta T_RATWARE_0_TZ_7	(__T_RATWARE_0_TZ_DATE && __CTYPE_HTML && __T_0_TZ_7)

########################################################################
# rules to detect certain generally unnecessary encodings in HTML

rawbody T_ENTITY_WHITESPACE_R	/\&\#(?:10|32)\;/
body T_ENTITY_WHITESPACE_B	/\&\#(?:10|32)\;/
meta T_ENTITY_WHITESPACE_M	(T_ENTITY_WHITESPACE_R || T_ENTITY_WHITESPACE_B)

rawbody T_ENTITY_ALPHANUM_R	/\&\#(?:4[89]|5[0-7]|6[5-9][78]\d|9[0789]|1[01]\d|12[012])\;/
body T_ENTITY_ALPHANUM_B	/\&\#(?:4[89]|5[0-7]|6[5-9][78]\d|9[0789]|1[01]\d|12[012])\;/
meta T_ENTITY_ALPHANUM_M	(T_ENTITY_ALPHANUM_R || T_ENTITY_ALPHANUM_B)

rawbody T_ENTITY_OTHER1_R	/\&\#(?:46|47)\;/
body T_ENTITY_OTHER1_B		/\&\#(?:46|47)\;/
meta T_ENTITY_OTHER1_M		(T_ENTITY_OTHER1_R || T_ENTITY_OTHER1_B)

rawbody T_ENTITY_OTHER2_R	/\&\#(?:33|39|40|46|47)\;/
body T_ENTITY_OTHER2_B		/\&\#(?:33|39|40|46|47)\;/
meta T_ENTITY_OTHER2_M		(T_ENTITY_OTHER2_R || T_ENTITY_OTHER2_B)

########################################################################
# HTML title rules

# title not in head and/or in body
body T_HTML_TITLE_MISPLACED_1	eval:html_test('t_title_misplaced_1')
body T_HTML_TITLE_MISPLACED_2	eval:html_test('t_title_misplaced_2')
body T_HTML_TITLE_MISPLACED_3	eval:html_test('t_title_misplaced_3')
body T_HTML_TITLE_MISPLACED_4	eval:html_test('t_title_misplaced_4')
meta T_HTML_TITLE_MISPLACED_M1	(T_HTML_TITLE_MISPLACED_1 && T_HTML_TITLE_MISPLACED_2)
meta T_HTML_TITLE_MISPLACED_M2	(T_HTML_TITLE_MISPLACED_1 || T_HTML_TITLE_MISPLACED_2)

# this won't work well until we parse HTML documents separately
body T_HTML_TITLE_EXTRA		eval:html_test('t_title_extra')

# possible replacement rules
body T_HTML_TITLE_EMPTY		eval:html_title('!~ /\S/s')
body T_HTML_TITLE_UNTITLED_1	eval:html_title('=~ /untitled/i')
body T_HTML_TITLE_UNTITLED_2	eval:html_title('=~ /new page \d+/i')
body T_HTML_TITLE_UNTITLED_3	eval:html_title('=~ /untitled|new page \d+/i')

# according to the postmaster at qualcomm, no mail is sent from eudora.com, but it's heavily joe-jobbed ...
header T_FROM_EUDORA            From:addr =~ /\@eudora\.com/i

# similar concept for Delphi.com.  Was an ISP, now a car company!
# I think their username format is "First.Last"; requiring 2 digits
# will be pretty safe.  (lower rule as a baseline to see if we miss much)
header T_FROM_DELPHI		From:addr =~ /\d[^\@]+\d[^\@]+\@delphi\.com/i
header T_FROM_DELPHI_BASIC	From:addr =~ /\@delphi\.com/i

body T_RANDO_MIZE		/\$RAN[DOMI]*\s+[DOMI]*ZE/

# yet another open Yahoo! redirector
uri T_YAHOO_REDIR		/^http:\/\/srd\.yahoo\.com\//i

header T_HASHCASH_20		eval:check_hashcash_value('20', '21')
header T_HASHCASH_21		eval:check_hashcash_value('21', '22')
header T_HASHCASH_22		eval:check_hashcash_value('22', '23')
header T_HASHCASH_23		eval:check_hashcash_value('23', '24')
header T_HASHCASH_24		eval:check_hashcash_value('24', '25')
header T_HASHCASH_25		eval:check_hashcash_value('25', '26')
header T_HASHCASH_26		eval:check_hashcash_value('26', '9999')
tflags T_HASHCASH_20		nice
tflags T_HASHCASH_21		nice
tflags T_HASHCASH_22		nice
tflags T_HASHCASH_23		nice
tflags T_HASHCASH_24		nice
tflags T_HASHCASH_25		nice
tflags T_HASHCASH_26		nice
score T_HASHCASH_20		-0.5
score T_HASHCASH_21		-0.7
score T_HASHCASH_22		-1.0
score T_HASHCASH_23		-2.0
score T_HASHCASH_24		-3.0
score T_HASHCASH_25		-4.0
score T_HASHCASH_26		-5.0

header T_HASHCASH_2SPEND	eval:check_hashcash_double_spend()
describe T_HASHCASH_2SPEND	HashCash token already spent in another mail
score T_HASHCASH_2SPEND		0.1

# Altavista.com's Greg Connor gconnor at nekodojo.org says 'they never send
# mail'; <2423209050.1071572609@[172.23.65.45]>, Tue, 16 Dec 2003 11:03:29
# -0800, on the spf-discuss at v2.listbox.com mailing list.  Let's see
# what this results in!
#
header T_FAKE_FROM_ALTAVISTA	From:addr =~ /\@altavista\.com$/i
header T_FAKE_TO_ALTAVISTA	To:addr =~ /\@altavista\.com$/i
header T_FAKE_REPTO_ALTAVISTA	Reply-To:addr =~ /\@altavista\.com$/i
header T_FAKE_ERRSTO_ALTAVISTA	Errors-To:addr =~ /\@altavista\.com$/i
header T_FAKE_ENVFROM_ALTAVISTA	EnvelopeFrom =~ /\@altavista\.com$/i

header T_FAKE_OUTBLAZE_RCVD	Received =~ /\.mr\.outblaze\.com/
header T_FAKE_OUTBLAZE_MID	Message-Id =~ /\.mr\.outblaze\.com/

header T_ALL_TRUSTED		eval:check_all_trusted()
describe T_ALL_TRUSTED		Did not pass through any untrusted hosts

