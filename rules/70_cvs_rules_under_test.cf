# SpamAssassin rules file: CVS rules under test
#
# This file is a placeholder for rules "under probation", ie. checked into
# CVS for testing. It should not be distributed; if the rules have good
# stats after a mass-check or two, then fold them into the distributed
# rules files.
#
# I suggest adding a prefix to rules in this file, "T_" -- this
# helps identify probationary rules in test output.
#
###########################################################################

# should be fixed now
# updated per bug 1217
# %%% INVALID_MSGID
header __VALID_MSGID MESSAGEID =~ /^<(?:[a-zA-Z0-9.,!\#\$%&'*\+\/=?\^_{}|~-]+|\".+\")\@(?:[a-zA-Z0-9_.-]+|\[\d{1,3}(?:\.\d{1,3}){3}\])>(?:\s*\(.*\))?\s*$/m [if-unset: <NO@MSGID>]
meta T_INVALID_MSGID		!__VALID_MSGID
describe T_INVALID_MSGID	Message-Id is not valid, according to RFC 2822

# results for quinlan
# 0.160   0.2453   0.1136    0.683   0.31    0.50  T_FROM_TOPICA
# 0.220   0.4753   0.0153    0.969   0.87    0.50  T_FROM_TOPICA:jm
# 0.135   0.3462   0.0000    1.000   0.93    0.50  T_FROM_TOPICA:quinlan
# 0.145   0.0136   0.2005    0.063   0.00    0.50  T_FROM_TOPICA:rODbegbie
# Dec  6 2002 jm: my vote: drop it.  Topica claim to be "white hat" nowadays
# anyway, apparently.
header T_FROM_TOPICA		From:addr =~ /\@(?:\w+\.)?email-publisher\.com$/
describe T_FROM_TOPICA		From an address at email-publisher.com
score T_FROM_TOPICA		0.5

# results for quinlan
#  0.245    0.727    0.013    0.98    0.57    0.50  T_FROM_ALL_NUMS
header __FROM_JUST_NUMBER	From:addr =~ /^\d+\@/
header __FROM_PHONE		From:addr =~ /^\d{3}(?:[-.]?\d{3}[-.]?\d{4}|\d{7})\@/
meta T_FROM_ALL_NUMS		(__FROM_JUST_NUMBER && !__FROM_PHONE)
describe T_FROM_ALL_NUMS	From an address that is all numbers (non-phone)
score T_FROM_ALL_NUMS		0.5

# Needs testing
body T_QUOTE_TWICE_1		/^> >\s/
describe T_QUOTE_TWICE_1	Contains twice quoted reply
tflags T_QUOTE_TWICE_1		nice
score T_QUOTE_TWICE_1		-1.0

header __ORIGINAL_MESSAGE_AGENT	X-Mailer =~ /\b(?:Microsoft Outlook|Internet Mail Service|Mozilla|AOL)\b/
rawbody __ORIGINAL_MESSAGE_LINE	/^-{5,8} ?Original Message ?-{5,8}$/
meta T_ORIGINAL_MESSAGE		(__ORIGINAL_MESSAGE_AGENT && __ORIGINAL_MESSAGE_LINE)
describe T_ORIGINAL_MESSAGE	Looks like a reply to a message
tflags T_ORIGINAL_MESSAGE	nice
score T_ORIGINAL_MESSAGE	-1.0

# this rule may need to factor in ok_languages or ok_locales
body T_BODY_UNPRINTABLE		/[\x00-\x08\x0b\x0c\x0e-\x1f\x7f]{3,}/
describe T_BODY_UNPRINTABLE	Body includes 3 consecutive unprintable characters

# this rule may need to factor in ok_languages or ok_locales
body T_BODY_8BITS		/[\x80-\xff]{8,}/
describe T_BODY_8BITS		Body includes 8 consecutive 8-bit characters

# some body tests
body T_BROADCAST_EMAIL		/broadcast e.?mail/i
body T_OUR_AFFILIATE_PARTNERS	/our affiliate partners/i
body T_OUR_BROADCAST_EMAIL	/our broadcast e.?mail/i
body T_OUR_COMPENSATION		/our (?:full )?compensation/i
body T_OUR_OVERWHELMING_GROWTH	/our overwhelming growth/i
body T_OUR_POLICY_ON_SELLING	/our policy on selling/i
body T_OUR_PRIVACY_POLICY	/our privacy policy can be found/i
body T_OUR_READERS		/our readers (?:to|with)/i
body T_OUR_STRICT_ANTI		/our strict anti/i
body T_OUR_PUBLICATIONS		/our website (?:and|or) publications/i
# more body tests
body T_CELL_PHONE_BOOST		/(?:boost|antenna|reception).{0,32}(?:cell|mobile|phone|cord.?less)|(?:cell|mobile|phone|cord.?less).{0,32}(?:boost|antenna|reception)/i
body T_OFFERS_ETC		/(?:(?:wish|want|unsub|reward|receive|recurring|remove|permission|partner|further|future|e.?mail|continue|click).{0,64}){2}.{0,8}(?:specials?|offers?|coupons?|discounts?)\b/i

# replacement
# do not add "new" since there's non-spam about "new cell phone numbers"
# separated into two rules since one seems to have a lot of
# sourceforge list advertisement false positives
# %%% FREE_CELL_PHONE
body T_FREE_CELL_PHONE_1A	/\bfree\b.{0,24}(?:cell(?:ular)?|mobile).{0,4}phones?/i
body T_FREE_CELL_PHONE_2A	/(?:cell(?:ular)?|mobile).{0,4}phones?.{0,24}\bfree\b/i
body T_FREE_CELL_PHONE_1B	/\b(?-i:F)ree\b.{0,24}(?:cell(?:ular)?|mobile).{0,4}phones?/i
body T_FREE_CELL_PHONE_2B	/(?:cell(?:ular)?|mobile).{0,4}phones?.{0,24}\b(?-i:F)ree\b/i

# dear user
body T_DEAR_USER		/dear(?: \w+)? user/i

# new porn rules
body T_PORN_15			/(?:college|eating|licking|spears|tight|wet|shaved|voyeur|young|teen(?:age)?).{0,16}pussy/i
body T_PORN_16			/(?:nasty|teen|dir(?:ty|iest)?|little).{0,16}\bsluts?/i

# 419 spam, group/merge with other Nigeria rules
body T_MILLION_USD		/Million\b.{0,40}\b(?:United States? Dollars?|USD)/i

########################################################################

header __CD			exists:Content-Disposition
header __CT			exists:Content-Type
header __CTE			exists:Content-Transfer-Encoding
header __MIME_VERSION		exists:MIME-Version
header __CT_TEXT_PLAIN		Content-Type =~ /^text\/plain\b/
meta T_MIME_HEADER_CTYPE_ONLY	(!__CD && !__CTE && __CT && !__MIME_VERSION && !__CT_TEXT_PLAIN)

########################################################################
# bug 1106: forged MUAs
# only needed a \b around the shortest X-Mailer regular expressions

# AOL
header __AOL_MUA		X-Mailer =~ /\bAOL\b/
header __AOL_MSGID		MESSAGEID =~ /^<[0-9a-f]{1,3}\.[0-9a-f]{6,8}\.[0-9a-f]{8}\@aol.com>$/m
meta T_FORGED_MUA_AOL		(__AOL_MUA && !__AOL_MSGID)
describe T_FORGED_MUA_AOL	Forged mail pretending to be from AOL
score T_FORGED_MUA_AOL		1.0

# Mozilla
header __MOZILLA_MUA		X-Mailer =~ /\bMozilla\b/
header __MOZILLA_MSGID		MESSAGEID =~ /^<[A-F\d]{8}\.[A-F\d]{4,8}\@\S+>$/
meta T_FORGED_MUA_MOZILLA	(__MOZILLA_MUA && !__MOZILLA_MSGID)
describe T_FORGED_MUA_MOZILLA	Forged mail pretending to be from Mozilla
score T_FORGED_MUA_MOZILLA	1.0

# Internet Mail Service
header __IMS_MUA		X-Mailer =~ /Internet Mail Service/
header __IMS_MSGID		MESSAGEID =~ /^<[A-F\d]{36,40}\@\S+>$/m
meta T_FORGED_MUA_IMS		(__IMS_MUA && !__IMS_MSGID)
describe T_FORGED_MUA_IMS	Forged mail pretending to be from IMS
score T_FORGED_MUA_IMS		1.0

# Outlook
# Note: this uses __IMS_MSGID from above
header __OUTLOOK_MUA		X-Mailer =~ /\bOutlook\b(?! IMO)/
header __OUTLOOK_MSGID_1	MESSAGEID =~ /^<[0-9a-f]{12}\$[0-9a-f]{8}\$[0-9a-f]{8}\@\S+>$/m
header __OUTLOOK_MSGID_2	MESSAGEID =~ /^<(?:OE[0-9A-Za-z]{25}|DAV[0-9A-Za-z]{24})\@hotmail\.com>$/m
meta T_FORGED_MUA_OUTLOOK	(__OUTLOOK_MUA && !(__OUTLOOK_MSGID_1 || __OUTLOOK_MSGID_2 || __IMS_MSGID))
describe T_FORGED_MUA_OUTLOOK	Forged mail pretending to be from Outlook
score T_FORGED_MUA_OUTLOOK	1.0

# Outlook IMO (Internet Mail Only)
header __OIMO_MUA		X-Mailer =~ /Outlook IMO/
header __OIMO_MSGID		MESSAGEID =~ /^<[A-P]{26}AA\.[\w.-]+\@\S+>$/m
meta T_FORGED_MUA_OIMO		(__OIMO_MUA && !__OIMO_MSGID)
describe T_FORGED_MUA_OIMO	Forged mail pretending to be from Outlook IMO
score T_FORGED_MUA_OIMO		1.0

# QUALCOMM Eudora
header __EUDORA_MUA		X-Mailer =~ /\b(?:QUALCOMM|Eudora)\b/
header __EUDORA_MSGID		MESSAGEID =~ /^<(?:\d\d?\.){4,5}\d{14}\.[a-f0-9]{8}\@\S+>$/m
meta T_FORGED_MUA_EUDORA	(__EUDORA_MUA && !__EUDORA_MSGID)
describe T_FORGED_MUA_EUDORA	Forged mail pretending to be from Eudora
score T_FORGED_MUA_EUDORA	1.0

# The Bat!
header __THEBAT_MUA		X-Mailer =~ /The Bat!/
header __THEBAT_MSGID		MESSAGEID =~ /^<\d+\.\d+\@\S+>$/m
meta T_FORGED_MUA_THEBAT	(__THEBAT_MUA && !__THEBAT_MSGID)
describe T_FORGED_MUA_THEBAT	Forged mail pretending to be from The Bat!
score T_FORGED_MUA_THEBAT	1.0

########################################################################

# this is the only To/Cc/From "no lower" version of this idea with a
# somewhat reasonable S/O ratio
header T_FROM_NO_LOWER		From !~ /[a-z]/

###########################################################################

body T_BANG_BOSS		/\bboss!/i
body T_BANG_CARTOONS		/\bcartoons!/i
body T_BANG_CYBERANALYSTS	/\bcyberanalysts!/i
body T_BANG_EXERCISE		/\bexercis(?:e|er|es)!/i
body T_BANG_GUARANTEE		/\bguaranteed?\!/i
body T_BANG_MONEY		/\bmoney!/i
body T_BANG_MORE		/\b(?-i:M)ore!/i
body T_BANG_OPRAH		/\boprah!/i
body T_BANG_QUOTE		/\b(?-i:Q)uotes?\!/i

###########################################################################

body T_OBSCURED_EMAIL		/^\w+\^\S+\(\w{2,3}\b/m
describe T_OBSCURED_EMAIL	Message seems to contain obscured email address (rot13)

# mailman list reminder mails are getting tagged in 2.41, adding a rule to check for these
header __FROM_MAILMAN_OWNER	From:addr =~ /^mailman-owner@/
header __SUBJECT_MAILMAN_REMIND	Subject =~ /\bmailing list memberships reminder\b/
meta T_MAILMAN_REMINDER		(__FROM_MAILMAN_OWNER && __SUBJECT_MAILMAN_REMIND)
describe T_MAILMAN_REMINDER	Mail headers indicate a mailman membership reminder
score T_MAILMAN_REMINDER		-3
tflags T_MAILMAN_REMINDER nice

########################################################

# quinlan: I added HTML.current results for these tests on 2002-12-08
# included in HTML.current are results from: daf, easmith, quinlan,
# rODbegbie, and theo.  HTML.current only considers HTML_MESSAGE emails.

# quinlan: this is not very good except for 14 and above, compare with
# updated IMAGE_ONLY results later.
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
#  6.029   5.6269   7.4094    0.432   0.08    0.01  T_HTML_IMAGE_AREA01
#  0.638   0.5078   1.0839    0.319   0.03    0.01  T_HTML_IMAGE_AREA02
#  1.095   1.1295   0.9773    0.536   0.15    0.01  T_HTML_IMAGE_AREA03
#  3.193   2.6010   5.2239    0.332   0.04    0.01  T_HTML_IMAGE_AREA04
#  1.697   1.6839   1.7413    0.492   0.12    0.01  T_HTML_IMAGE_AREA05
#  1.163   1.3420   0.5508    0.709   0.34    0.01  T_HTML_IMAGE_AREA06
#  1.328   1.3420   1.2793    0.512   0.13    0.01  T_HTML_IMAGE_AREA07
#  2.250   1.5596   4.6198    0.252   0.02    0.01  T_HTML_IMAGE_AREA08
#  2.138   0.7306   6.9652    0.095   0.00    0.01  T_HTML_IMAGE_AREA09
#  0.907   1.0000   0.5864    0.630   0.24    0.01  T_HTML_IMAGE_AREA10
#  7.714   7.1451   9.6660    0.425   0.08    0.01  T_HTML_IMAGE_AREA11
#  4.160   3.8135   5.3483    0.416   0.07    0.01  T_HTML_IMAGE_AREA12
#  1.448   1.3368   1.8301    0.422   0.07    0.01  T_HTML_IMAGE_AREA13
#  0.702   0.8601   0.1599    0.843   0.57    0.01  T_HTML_IMAGE_AREA14
#  0.345   0.4352   0.0355    0.925   0.75    0.01  T_HTML_IMAGE_AREA15
#  0.209   0.2591   0.0355    0.879   0.65    0.01  T_HTML_IMAGE_AREA16
#  0.108   0.1347   0.0178    0.883   0.65    0.01  T_HTML_IMAGE_AREA17
#  0.032   0.0415   0.0000    1.000   0.95    0.01  T_HTML_IMAGE_AREA18
#  0.116   0.1503   0.0000    1.000   0.95    0.01  T_HTML_IMAGE_AREA19
#
body T_HTML_IMAGE_AREA01	eval:html_range('total_image_area','0','1000')
body T_HTML_IMAGE_AREA02	eval:html_range('total_image_area','1000','5000')
body T_HTML_IMAGE_AREA03	eval:html_range('total_image_area','10000','20000')
body T_HTML_IMAGE_AREA04	eval:html_range('total_image_area','20000','30000')
body T_HTML_IMAGE_AREA05	eval:html_range('total_image_area','30000','40000')
body T_HTML_IMAGE_AREA06	eval:html_range('total_image_area','40000','50000')
body T_HTML_IMAGE_AREA07	eval:html_range('total_image_area','50000','60000')
body T_HTML_IMAGE_AREA08	eval:html_range('total_image_area','60000','70000')
body T_HTML_IMAGE_AREA09	eval:html_range('total_image_area','70000','80000')
body T_HTML_IMAGE_AREA10	eval:html_range('total_image_area','80000','90000')
body T_HTML_IMAGE_AREA11	eval:html_range('total_image_area','100000','200000')
body T_HTML_IMAGE_AREA12	eval:html_range('total_image_area','200000','300000')
body T_HTML_IMAGE_AREA13	eval:html_range('total_image_area','300000','400000')
body T_HTML_IMAGE_AREA14	eval:html_range('total_image_area','400000','500000')
body T_HTML_IMAGE_AREA15	eval:html_range('total_image_area','500000','600000')
body T_HTML_IMAGE_AREA16	eval:html_range('total_image_area','600000','700000')
body T_HTML_IMAGE_AREA17	eval:html_range('total_image_area','700000','800000')
body T_HTML_IMAGE_AREA18	eval:html_range('total_image_area','800000','900000')
body T_HTML_IMAGE_AREA19	eval:html_range('total_image_area','1000000')

# quinlan: this is not very good
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
# 12.247  13.6166   7.5515    0.643   0.27    0.01  T_HTML_NUM_IMGS01
#  6.154   6.4922   4.9929    0.565   0.18    0.01  T_HTML_NUM_IMGS02
#  3.947   4.7358   1.2438    0.792   0.48    0.01  T_HTML_NUM_IMGS03
#  2.880   3.3886   1.1372    0.749   0.40    0.01  T_HTML_NUM_IMGS04
#  2.138   2.5544   0.7107    0.782   0.46    0.01  T_HTML_NUM_IMGS05
#  2.531   2.8912   1.2971    0.690   0.32    0.01  T_HTML_NUM_IMGS06
#  2.503   2.5181   2.4520    0.507   0.13    0.01  T_HTML_NUM_IMGS07
#  1.516   1.6062   1.2082    0.571   0.18    0.01  T_HTML_NUM_IMGS08
#  1.183   1.1917   1.1549    0.508   0.13    0.01  T_HTML_NUM_IMGS09
#  1.544   1.5648   1.4748    0.515   0.13    0.01  T_HTML_NUM_IMGS10
#  6.451   6.4456   6.4677    0.499   0.13    0.01  T_HTML_NUM_IMGS11
#  3.546   1.6995   9.8792    0.147   0.01    0.01  T_HTML_NUM_IMGS12
#  1.773   0.7047   5.4371    0.115   0.00    0.01  T_HTML_NUM_IMGS13
#  0.842   0.2591   2.8429    0.084   0.00    0.01  T_HTML_NUM_IMGS14
#  0.505   0.2953   1.2260    0.194   0.01    0.01  T_HTML_NUM_IMGS15
#  1.107   0.0777   4.6375    0.016   0.00    0.01  T_HTML_NUM_IMGS16
#  0.742   0.0311   3.1805    0.010   0.00    0.01  T_HTML_NUM_IMGS17
#  0.116   0.0155   0.4620    0.033   0.00    0.01  T_HTML_NUM_IMGS18
#  0.036   0.0155   0.1066    0.127   0.00    0.01  T_HTML_NUM_IMGS19
#  0.285   0.1865   0.6219    0.231   0.01    0.01  T_HTML_NUM_IMGS20
#
body T_HTML_NUM_IMGS01          eval:html_range('num_imgs','0','1')
body T_HTML_NUM_IMGS02          eval:html_range('num_imgs','1','2')
body T_HTML_NUM_IMGS03          eval:html_range('num_imgs','2','3')
body T_HTML_NUM_IMGS04          eval:html_range('num_imgs','3','4')
body T_HTML_NUM_IMGS05          eval:html_range('num_imgs','4','5')
body T_HTML_NUM_IMGS06          eval:html_range('num_imgs','5','6')
body T_HTML_NUM_IMGS07          eval:html_range('num_imgs','6','7')
body T_HTML_NUM_IMGS08          eval:html_range('num_imgs','7','8')
body T_HTML_NUM_IMGS09          eval:html_range('num_imgs','8','9')
body T_HTML_NUM_IMGS10          eval:html_range('num_imgs','9','10')
body T_HTML_NUM_IMGS11          eval:html_range('num_imgs','10','20')
body T_HTML_NUM_IMGS12          eval:html_range('num_imgs','20','30')
body T_HTML_NUM_IMGS13          eval:html_range('num_imgs','30','40')
body T_HTML_NUM_IMGS14          eval:html_range('num_imgs','40','50')
body T_HTML_NUM_IMGS15          eval:html_range('num_imgs','50','60')
body T_HTML_NUM_IMGS16          eval:html_range('num_imgs','60','70')
body T_HTML_NUM_IMGS17          eval:html_range('num_imgs','70','80')
body T_HTML_NUM_IMGS18          eval:html_range('num_imgs','80','90')
body T_HTML_NUM_IMGS19          eval:html_range('num_imgs','90','100')
body T_HTML_NUM_IMGS20          eval:html_range('num_imgs','100')

# quinlan: this is not very good
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
#  7.562   7.6062   7.4094    0.507   0.13    0.01  T_HTML_CONSEC_IMGS01
#  6.326   6.0933   7.1251    0.461   0.10    0.01  T_HTML_CONSEC_IMGS02
#  3.410   3.4456   3.2871    0.512   0.13    0.01  T_HTML_CONSEC_IMGS03
#  1.926   1.9223   1.9367    0.498   0.12    0.01  T_HTML_CONSEC_IMGS04
#  1.801   1.6943   2.1677    0.439   0.08    0.01  T_HTML_CONSEC_IMGS05
#  2.852   1.2435   8.3689    0.129   0.00    0.01  T_HTML_CONSEC_IMGS06
#  2.162   0.8342   6.7164    0.110   0.00    0.01  T_HTML_CONSEC_IMGS07
#  0.810   0.7979   0.8529    0.483   0.11    0.01  T_HTML_CONSEC_IMGS08
#  1.199   0.9275   2.1322    0.303   0.03    0.01  T_HTML_CONSEC_IMGS09
#  3.747   3.1710   5.7214    0.357   0.05    0.01  T_HTML_CONSEC_IMGS10
#  0.618   0.4974   1.0306    0.326   0.03    0.01  T_HTML_CONSEC_IMGS11
#  0.289   0.3005   0.2488    0.547   0.16    0.01  T_HTML_CONSEC_IMGS12
#  0.092   0.1036   0.0533    0.660   0.27    0.01  T_HTML_CONSEC_IMGS13
#  0.056   0.0466   0.0888    0.344   0.04    0.01  T_HTML_CONSEC_IMGS14
#  0.004   0.0000   0.0178    0.000   0.00    0.01  T_HTML_CONSEC_IMGS15
#  0.008   0.0052   0.0178    0.226   0.01    0.01  T_HTML_CONSEC_IMGS16
#  0.012   0.0104   0.0178    0.368   0.05    0.01  T_HTML_CONSEC_IMGS17
#  0.004   0.0052   0.0000    1.000   0.95    0.01  T_HTML_CONSEC_IMGS18
#  0.000   0.0000   0.0000    0.500   0.12    0.01  T_HTML_CONSEC_IMGS19
#
body T_HTML_CONSEC_IMGS01       eval:html_range('max_consec_imgs','1','2')
body T_HTML_CONSEC_IMGS02       eval:html_range('max_consec_imgs','2','3')
body T_HTML_CONSEC_IMGS03       eval:html_range('max_consec_imgs','3','4')
body T_HTML_CONSEC_IMGS04       eval:html_range('max_consec_imgs','4','5')
body T_HTML_CONSEC_IMGS05       eval:html_range('max_consec_imgs','5','6')
body T_HTML_CONSEC_IMGS06       eval:html_range('max_consec_imgs','6','7')
body T_HTML_CONSEC_IMGS07       eval:html_range('max_consec_imgs','7','8')
body T_HTML_CONSEC_IMGS08       eval:html_range('max_consec_imgs','8','9')
body T_HTML_CONSEC_IMGS09       eval:html_range('max_consec_imgs','9','10')
body T_HTML_CONSEC_IMGS10       eval:html_range('max_consec_imgs','10','20')
body T_HTML_CONSEC_IMGS11       eval:html_range('max_consec_imgs','20','30')
body T_HTML_CONSEC_IMGS12       eval:html_range('max_consec_imgs','30','40')
body T_HTML_CONSEC_IMGS13       eval:html_range('max_consec_imgs','40','50')
body T_HTML_CONSEC_IMGS14       eval:html_range('max_consec_imgs','50','60')
body T_HTML_CONSEC_IMGS15       eval:html_range('max_consec_imgs','60','70')
body T_HTML_CONSEC_IMGS16       eval:html_range('max_consec_imgs','70','80')
body T_HTML_CONSEC_IMGS17       eval:html_range('max_consec_imgs','80','90')
body T_HTML_CONSEC_IMGS18       eval:html_range('max_consec_imgs','90','100')
body T_HTML_CONSEC_IMGS19       eval:html_range('max_consec_imgs','100')

# quinlan: very questionable
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
#  0.357   0.4197   0.1421    0.747   0.40    0.01  T_HTML_MAX_IMG_RATIO01
#  1.705   1.8187   1.3149    0.580   0.19    0.01  T_HTML_MAX_IMG_RATIO02
#  1.705   1.8187   1.3149    0.580   0.19    0.01  T_HTML_MAX_IMG_RATIO02B
#  7.032   6.9896   7.1784    0.493   0.12    0.01  T_HTML_MAX_IMG_RATIO03
#  6.780   6.9896   6.0590    0.536   0.16    0.01  T_HTML_MAX_IMG_RATIO03B
#  4.272   3.2642   7.7292    0.297   0.03    0.01  T_HTML_MAX_IMG_RATIO04
#  0.959   1.1451   0.3198    0.782   0.45    0.01  T_HTML_MAX_IMG_RATIO05
#  0.369   0.3938   0.2843    0.581   0.19    0.01  T_HTML_MAX_IMG_RATIO06
#  0.325   0.2850   0.4620    0.382   0.05    0.01  T_HTML_MAX_IMG_RATIO07
#  1.079   0.3212   3.6780    0.080   0.00    0.01  T_HTML_MAX_IMG_RATIO08
#  0.361   0.1606   1.0483    0.133   0.00    0.01  T_HTML_MAX_IMG_RATIO09
#  5.355   1.6891  17.9282    0.086   0.00    0.01  T_HTML_MAX_IMG_RATIO10
#
body T_HTML_MAX_IMG_RATIO01     eval:html_range('max_img_ratio','0.0','0.5')
body T_HTML_MAX_IMG_RATIO02     eval:html_range('max_img_ratio','0.5','0.999')
meta T_HTML_MAX_IMG_RATIO02B    (T_HTML_MAX_IMG_RATIO02 && !FROM_EGROUPS)
body T_HTML_MAX_IMG_RATIO03     eval:html_range('max_img_ratio','5','10')
meta T_HTML_MAX_IMG_RATIO03B    (T_HTML_MAX_IMG_RATIO03 && !FROM_EGROUPS)
body T_HTML_MAX_IMG_RATIO04     eval:html_range('max_img_ratio','10','20')
body T_HTML_MAX_IMG_RATIO05     eval:html_range('max_img_ratio','20','30')
body T_HTML_MAX_IMG_RATIO06     eval:html_range('max_img_ratio','30','40')
body T_HTML_MAX_IMG_RATIO07     eval:html_range('max_img_ratio','40','50')
body T_HTML_MAX_IMG_RATIO08     eval:html_range('max_img_ratio','50','75')
body T_HTML_MAX_IMG_RATIO09     eval:html_range('max_img_ratio','75','100')
body T_HTML_MAX_IMG_RATIO10     eval:html_range('max_img_ratio','100')

# quinlan: very questionable
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
#  0.911   0.6736   1.7235    0.281   0.02    0.01  T_HTML_MIN_IMG_RATIO1
#  4.316   1.2073  14.9787    0.075   0.00    0.01  T_HTML_MIN_IMG_RATIO2
#  2.764   1.5233   7.0185    0.178   0.01    0.01  T_HTML_MIN_IMG_RATIO3
#  2.062   2.1969   1.5991    0.579   0.19    0.01  T_HTML_MIN_IMG_RATIO4
#  2.664   3.1192   1.1016    0.739   0.39    0.01  T_HTML_MIN_IMG_RATIO5
#  3.919   3.8238   4.2466    0.474   0.11    0.01  T_HTML_MIN_IMG_RATIO6
#
body T_HTML_MIN_IMG_RATIO1      eval:html_range('min_img_ratio','0.0','0.01')
body T_HTML_MIN_IMG_RATIO2      eval:html_range('min_img_ratio','0.01','0.1')
body T_HTML_MIN_IMG_RATIO3      eval:html_range('min_img_ratio','0.1','0.25')
body T_HTML_MIN_IMG_RATIO4      eval:html_range('min_img_ratio','0.25','0.50')
body T_HTML_MIN_IMG_RATIO5      eval:html_range('min_img_ratio','0.50','0.75')
body T_HTML_MIN_IMG_RATIO6      eval:html_range('min_img_ratio','0.75','0.999')

#---------------------------------------------------------

# quinlan: better, but still questionable
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
# [above version]
# 12.247  13.6166   7.5515    0.643   0.27    0.01  T_HTML_NUM_IMGS01
#  6.154   6.4922   4.9929    0.565   0.18    0.01  T_HTML_NUM_IMGS02
# [B version]
# 11.461  13.6166   4.0689    0.770   0.45    0.01  T_HTML_NUM_IMGS01B
#  5.568   6.4922   2.3987    0.730   0.38    0.01  T_HTML_NUM_IMGS02B
#
meta T_HTML_NUM_IMGS01B         (T_HTML_NUM_IMGS01 && !FROM_EGROUPS)
meta T_HTML_NUM_IMGS02B         (T_HTML_NUM_IMGS02 && !FROM_EGROUPS)

# quinlan: better, but still questionable
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
# [above version]
#  7.562   7.6062   7.4094    0.507   0.13    0.01  T_HTML_CONSEC_IMGS01
# [B version]
#  6.912   7.6062   4.5309    0.627   0.24    0.01  T_HTML_CONSEC_IMGS01B
#
meta T_HTML_CONSEC_IMGS01B      (T_HTML_CONSEC_IMGS01 && !FROM_EGROUPS)

# quinlan: not much better than above version
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
# [above version]
#  1.095   1.1295   0.9773    0.536   0.15    0.01  T_HTML_IMAGE_AREA03
#  3.193   2.6010   5.2239    0.332   0.04    0.01  T_HTML_IMAGE_AREA04
#  1.697   1.6839   1.7413    0.492   0.12    0.01  T_HTML_IMAGE_AREA05
#  1.163   1.3420   0.5508    0.709   0.34    0.01  T_HTML_IMAGE_AREA06
# [B version]
#  1.075   1.1295   0.8884    0.560   0.17    0.01  T_HTML_IMAGE_AREA03B
#  3.105   2.6010   4.8330    0.350   0.04    0.01  T_HTML_IMAGE_AREA04B
#  1.685   1.6839   1.6880    0.499   0.12    0.01  T_HTML_IMAGE_AREA05B
#  1.139   1.3420   0.4442    0.751   0.40    0.01  T_HTML_IMAGE_AREA06B
#
meta T_HTML_IMAGE_AREA03B       (T_HTML_IMAGE_AREA03 && !FROM_EGROUPS)
meta T_HTML_IMAGE_AREA04B       (T_HTML_IMAGE_AREA04 && !FROM_EGROUPS)
meta T_HTML_IMAGE_AREA05B       (T_HTML_IMAGE_AREA05 && !FROM_EGROUPS)
meta T_HTML_IMAGE_AREA06B       (T_HTML_IMAGE_AREA06 && !FROM_EGROUPS)

# quinlan: this is not very good
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
# 12.263  10.3420  18.8522    0.354   0.06    0.01  T_HTML_50_70_IMGS3
#
# HTML_50_70 with at least 3 IMG tags
body __T_HTML_NUM_IMGS_3        eval:html_range('num_imgs','3')
meta T_HTML_50_70_IMGS3         ((HTML_50_60 || HTML_60_70) && __T_HTML_NUM_IMGS_3)

####################################################################

# quinlan: I think we should promote T_HTML_BIG_FONT_B.  Not the others.
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
# 33.950  36.8797  23.8806    0.607   0.26    0.01  T_HTML_TAG_EXISTS_CENTER
#  3.868   4.9111   0.2843    0.945   0.81    0.01  T_HTML_BIG_FONT_B
#  8.425   6.9892  13.3618    0.343   0.05    0.01  T_HTML_FONT_SIZE_PX
#  5.562   6.1673   3.4826    0.639   0.26    0.01  T_HTML_STYLE_LINE_HEIGHT
#
body T_HTML_TAG_EXISTS_CENTER	eval:html_tag_exists('center')
body T_HTML_BIG_FONT_B		eval:html_test('big_font_B')
body T_HTML_FONT_SIZE_PX	eval:html_test('font_px')
body T_HTML_STYLE_LINE_HEIGHT	eval:html_test('line_height')

# quinlan: I think we could promote 3 and above.  A numeric function
# test might work well too.  Also worth some further experimentation:
# maybe also try adding colors and other attributes into the count.
#
#OVERALL%   SPAM% NONSPAM%     S/O    RANK   SCORE  NAME
#  24928    19300     5628    0.774   0.00    0.00  (all messages)
#100.000  77.4230  22.5770    0.774   0.00    0.00  (all messages as %)
# 37.626  34.0364  49.9645    0.405   0.11    0.01  T_HTML_SHOUTING1
# 24.287  26.3337  17.2530    0.604   0.25    0.01  T_HTML_SHOUTING2
#  8.205  10.1117   1.6525    0.860   0.62    0.01  T_HTML_SHOUTING3
#  3.035   3.8151   0.3554    0.915   0.73    0.01  T_HTML_SHOUTING4
#  1.350   1.6129   0.4442    0.784   0.46    0.01  T_HTML_SHOUTING5
#  0.392   0.4911   0.0533    0.902   0.70    0.01  T_HTML_SHOUTING6
#  0.224   0.2843   0.0178    0.941   0.79    0.01  T_HTML_SHOUTING7
#  0.140   0.1809   0.0000    1.000   0.95    0.01  T_HTML_SHOUTING8
#  0.356   0.4446   0.0533    0.893   0.68    0.01  T_HTML_SHOUTING9
#
body T_HTML_SHOUTING1            eval:html_range('max_shouting','0','1')
body T_HTML_SHOUTING2            eval:html_range('max_shouting','1','2')
body T_HTML_SHOUTING3            eval:html_range('max_shouting','2','3')
body T_HTML_SHOUTING4            eval:html_range('max_shouting','3','4')
body T_HTML_SHOUTING5            eval:html_range('max_shouting','4','5')
body T_HTML_SHOUTING6            eval:html_range('max_shouting','5','6')
body T_HTML_SHOUTING7            eval:html_range('max_shouting','6','7')
body T_HTML_SHOUTING8            eval:html_range('max_shouting','7','8')
body T_HTML_SHOUTING9            eval:html_range('max_shouting','8')

##################################################################

# Dec  6 2002 jm:
# 0 hits on all corpora!  Is this in a MIME header or something?
body T_HTML_MAIL_ONLY             /HTML only email, sorry/i

# actually, this looks really good!  Dec  6 2002 jm: except for rod's
# corpus ;)
header T_FROM_OFFERS            From:addr =~ /offers\S*\@/i
describe T_FROM_OFFERS          From address is "offers at something"
header T_FROM_OFFERS_2          From:addr =~ /^offers/i
header T_FROM_OFFERS_3          From:addr =~ /\@\S*offers/i

# quinlan: these may overlap some existing CLICK rules, check before adding
body     T_HTML_LINK_CLICK_HERE eval:html_eval('anchor_text', '=~ /click\s+here/i')
body     T_HTML_LINK_CLICK_CAPS eval:html_eval('anchor_text', '=~ /CLICK/')
body     T_HTML_LINK_MONEY      eval:html_eval('anchor_text', '=~/\s\$/')
body     T_HTML_LINK_UNSUB      eval:html_eval('anchor_text', '=~/unsubscribe/i')

# Nov 12 2002 jm: still not sure about this one. ALL.current reports
# 0.108   0.4001   0.0062    0.985   0.93    1.00  T_IDENT_NOBODY
# combined for all submitters.  too dangerous considering the amount
# of daemons sending mail reports, running as root
header T_IDENT_NOBODY		Received =~ /ident[:=]nobody\b/i
describe T_IDENT_NOBODY		Message was sent by nobody
score T_IDENT_NOBODY		1.0

# I spent the better part of a day hacking around with the Message-Id
# stuff.  I found a few new regexps that works fairly well on my corpus
# with no overlap of the current MSGID_* rules. - tvd

# Dec  6 2002 jm: needs more work:
# 0.378   0.9069   0.0852    0.914   0.74    0.01  T_MSGID_S_1
# 0.508   1.1217   0.0153    0.987   0.92    0.01  T_MSGID_S_1:jm
# 0.341   0.8349   0.0260    0.970   0.85    0.01  T_MSGID_S_1:quinlan
# 0.334   0.8014   0.1375    0.854   0.60    0.01  T_MSGID_S_1:rODbegbie
# I suggest breaking out the meta rule and see which ones are FPing

# jm: commented, this hits slist mail traffic, e.g.
# the <mozilla-general@mozilla.org> list.   Note that the moz lists have a
# very high spam load, which may explain why the resulting freqs look good
#header __T_MSGID_11	MESSAGEID =~ /^<?\d\w+\$\w{4,}\@/m
# tvd: these fp a bit, so they're disabled
#header __T_MSGID_37	MESSAGEID =~ /^<?\d{13,}\.SM\d+\@[^>]/m
#header __T_MSGID_16	MESSAGEID =~ /^<?[A-Z]\d{10}\@/m

header T_BAD_MSGID_17	MESSAGEID =~ /^<?DGTBAD\S+\@/m
header T_BAD_MSGID_10	MESSAGEID =~ /^<?(?:\d+\$){3}\d+\@/m
header T_BAD_MSGID_8	MESSAGEID =~ /^<?\d{4}\$\w+\@/m
header T_BAD_MSGID_20	MESSAGEID =~ /^<?EXCH\S+\@/m
header T_BAD_MSGID_19	MESSAGEID =~ /^<?\w{7}-\w{6}-\w{2}\.\d{4}(?:-\d{2}){5}\@/m
header T_BAD_MSGID_24	MESSAGEID =~ /^<?[A-Z0-9_-]*SERV[A-Za-z0-9_-]+[0-9a-f]{8}\@/m
header T_BAD_MSGID_26	MESSAGEID =~ /^<?[A-Z0-9_-]*MAIL[a-zA-Z0-9_-]+0000[0-9a-f]{4}\@/m
header T_BAD_MSGID_32	MESSAGEID =~ /^<?auto-00000\d+\@/m
meta T_MSGID_S_1	( T_BAD_MSGID_.+ + ) > 0

# Matt Cline: New ratware and user-agent tests
header T_RATWARE_BIXON       X-Mailer =~ /Bixon ThunderMail/
header T_RATWARE_BULK_MAILER X-Mailer =~ /BulkMailer/
header T_RATWARE_BANG_HASH   X-Mailer =~ /!.*\#.*\*/
header T_RATWARE_HASH_2_V2   X-Mailer =~ /^[A-Za-z0-9\._]{14,}$/
header T_RATWARE_FLOAT       X-Mailer =~ /^\d\.\d\d/
header T_RATWARE_CHARSET_V2  X-Mailer =~ /^normal \W \W\s*charset.*=\"/

header T_USER_AGENT_FORTE    X-Mailer =~ /^Forte Agent \d\.\d+\/\d+\.\d+$/
score  T_USER_AGENT_FORTE    -0.5
tflags T_USER_AGENT_FORTE    nice

header T_USER_AGENT_MSN      X-Mailer =~ /^MSN Explorer \d\.\d\d\.\d{4}\.\d{4}$/
score  T_USER_AGENT_MSN      -0.5
tflags T_USER_AGENT_MSN      nice

# forged, needs some correlation meta checks with other headers.
header __USER_AGENT_MSN      X-Mailer =~ /^MSN Explorer /
header __HAS_XOAT	     X-Originalarrivaltime =~ /FILETIME/
header __HAS_XOIP	     X-Originating-Ip =~ /^\[/
meta T_USER_AGENT_MSN_2    (__USER_AGENT_MSN && __HAS_XOAT && __HAS_XOIP)
score  T_USER_AGENT_MSN_2    -0.5
tflags T_USER_AGENT_MSN_2    nice
# and let's see if we can catch a forgery!
meta T_FORGED_USER_AGENT_MSN  (__USER_AGENT_MSN && (!__HAS_XOAT || !__HAS_XOIP))

#   0.018   0.0171   0.0189    0.475   0.14   -0.50  T_USER_AGENT_PERL1
header T_USER_AGENT_PERL1    X-Mailer =~ /^Perl\d Mail::Internet v\d\.\d+$/
score  T_USER_AGENT_PERL1    -0.5
tflags T_USER_AGENT_PERL1    nice

#  0.000   0.0000   0.0000    0.500   0.12   -0.50  T_USER_AGENT_PERL2
header T_USER_AGENT_PERL2    X-Mailer =~ /^Perl Mail::Sender \d\.\d+\.\d+/
score  T_USER_AGENT_PERL2    -0.5
tflags T_USER_AGENT_PERL2    nice

#   0.002   0.0057   0.0000    1.000   0.00   -0.50  T_USER_AGENT_PERL3
header T_USER_AGENT_PERL3    X-Mailer =~ /^Perl Powered Socket Mailer$/
score  T_USER_AGENT_PERL3    -0.5
tflags T_USER_AGENT_PERL3    nice

header T_USER_AGENT_PHP1     X-Mailer =~ m!^PHP(?:/\d+\.\d+\.\d+)?$!
score  T_USER_AGENT_PHP1     -0.5
tflags T_USER_AGENT_PHP1     nice

header T_USER_AGENT_PHP2     X-Mailer =~ /^phpmailer \[version \d\.\d+\]$/
score  T_USER_AGENT_PHP2     -0.5
tflags T_USER_AGENT_PHP2     nice

header T_USER_AGENT_T_ONLINE X-Mailer =~ /^T-Online eMail \d+\.\d+$/
score  T_USER_AGENT_T_ONLINE -0.5
tflags T_USER_AGENT_T_ONLINE nice

header T_USER_AGENT_UBB      X-Mailer =~ /^UBB\.?[Tt]hreads$/
score  T_USER_AGENT_UBB      -0.5
tflags T_USER_AGENT_UBB      nice

header T_USER_AGENT_XIMIAN   X-Mailer =~ /^Ximian Evolution \d+\.\d+\.\d+(?:\.\d+)?\s$/
score  T_USER_AGENT_XIMIAN   -0.5
tflags T_USER_AGENT_XIMIAN   nice

# OS/2 specific mailer
header T_USER_AGENT_PMMAIL   X-Mailer =~ m!^PMMail \d\.\d+(?:\w|\.\d+)? [Ff]or OS/2(?: Warp \d\.\d+)?$!
score  T_USER_AGENT_PMMAIL   -0.5
tflags T_USER_AGENT_PMMAIL   nice

# Bug 1133
# Dec  6 2002 jm: retry with support for more header formats
header T_BAD_HELO2           eval:check_for_bad_helo2()

##############################################################################
# bug 1163: image only test from mgm

body __IMG_TAG			eval:html_tag_exists('img')
uri __IMG_URI			/\.(?:gif|jpe?g|png)$/i

body __TEXT_32			eval:nonspace_length('0','32')
body __TEXT_64			eval:nonspace_length('32','64')
body __TEXT_96			eval:nonspace_length('64','96')
body __TEXT_128			eval:nonspace_length('96','128')
body __TEXT_160			eval:nonspace_length('128','160')
body __TEXT_192			eval:nonspace_length('160','192')
body __TEXT_224			eval:nonspace_length('192','224')
body __TEXT_256			eval:nonspace_length('224','256')

meta T_IMAGE_ONLY_32	((__IMG_TAG ||(__IMG_URI&&HTML_MESSAGE))&& __TEXT_32)
meta T_IMAGE_ONLY_64	((__IMG_TAG ||(__IMG_URI&&HTML_MESSAGE))&& __TEXT_64)
meta T_IMAGE_ONLY_96	((__IMG_TAG ||(__IMG_URI&&HTML_MESSAGE))&& __TEXT_96)
meta T_IMAGE_ONLY_128	((__IMG_TAG ||(__IMG_URI&&HTML_MESSAGE))&& __TEXT_128)
meta T_IMAGE_ONLY_160	((__IMG_TAG ||(__IMG_URI&&HTML_MESSAGE))&& __TEXT_160)
meta T_IMAGE_ONLY_192	((__IMG_TAG ||(__IMG_URI&&HTML_MESSAGE))&& __TEXT_192)
meta T_IMAGE_ONLY_224	((__IMG_TAG ||(__IMG_URI&&HTML_MESSAGE))&& __TEXT_224)
meta T_IMAGE_ONLY_256	((__IMG_TAG ||(__IMG_URI&&HTML_MESSAGE))&& __TEXT_256)

##############################################################################

# Nov 12 2002 jm: not keen on this.  many ISPs do not provide rDNS these
# days as policy. stupid policy, but there we are. and SpamAssassin policy
# is not to punish users with stupid ISPs...
#
# Dec 07 2002 quinlan: I agree, the ratio is not good enough anyway, here
# are everyone's results from ALL.current:
#
# 13.006  14.0534   5.1948    0.730   0.37   0.01 T_SENDER_NO_REVERSE:daf
#  7.908  29.7468   3.0721    0.906   0.73   0.01 T_SENDER_NO_REVERSE:easmith
# 11.913  17.9848   7.0371    0.719   0.38   0.01 T_SENDER_NO_REVERSE:jm
# 17.448  39.3810   3.4451    0.920   0.78   0.01 T_SENDER_NO_REVERSE:quinlan
#  4.988  10.5000   2.6515    0.798   0.51   0.01 T_SENDER_NO_REVERSE:rODbegbie
# 11.997  23.7109   5.5591    0.810   0.50   0.01 T_SENDER_NO_REVERSE:theo
#
header   T_SENDER_NO_REVERSE    eval:check_for_sender_no_reverse()
describe T_SENDER_NO_REVERSE    No reverse lookup for sender's IP

# Nov 12 2002 jm: a test to catch spammers who HELO as a host at a big site
# (aol, hotmail etc.) but whose rDNS lists them at some dialup ISP or another
# ;)
# Dec  6 2002 jm: updated to avoid quite a few FPs
header T_RCVD_FAKE_HELO_DOTCOM_2	eval:check_for_fake_dotcom_helo()
describe T_RCVD_FAKE_HELO_DOTCOM_2	Faked HELO-as-dotcom found

# Matt Cline, Bug #1220
body T_FOR_FREE                   /\bfor FREE\b/i
body T_COMPLETELY_FREE            /\b(?:100%|completely|totally|absolutely) Free/i
body T_SAVE_UP_TO                 /\bSave up to\b/i
body T_DO_IT_TODAY        /\b(?:join|register|order|apply) .{0,10}Today\b/i
body T_GET_STARTED_NOW            /\bget started Now\b/i
body T_GET_PAID                   /\bget Paid\b/i
body T_FREE_GRANT                 /\b(?:free|government) Grants?\b/i
body T_APPLY_FREE                 /Free Application|free application.{0,32}(?:today|minute|less than)/i
body T_APPLY_ONLINE               /\bapply Online/i
body T_FREE_INSTALL               /Free installation/i
body T_FREE_PREVIEW               /Free preview/i
body T_FREE_ACCESS                /Free access/i
body T_FREE_SAMPLE                /Free sample/i
body T_GET_IT_NOW         /get it Now/i
body T_LOW_PRICE                  /\blow.{0,4} Price/i

######

body     T_LOTS_OF_STUFF         /\b(?:\d{1,3}[,\.])+\d{3}.{0,20}\b(?:pics|pictures|images|photos|movies)/i
describe T_LOTS_OF_STUFF         Thousands or millions of pics/movies/etc

body     T_LOTS_OF_SPACE         /\bover\s+(?:\d{1,3}[,\.])*\d{3,}\s*(?:MB|GB)/i
describe T_LOTS_OF_SPACE         Over XYZ MB/GB of junk

# not sure about this - it could be a markup dropping from Eudora...
# let's see what happens in the nightly run anyway.
rawbody  T_X_HTML_TAG_FOUND	/<x-html>/
describe T_X_HTML_TAG_FOUND	Found a non-standard tag ('x-html')

# Dec  8 2002 jm: noticed this implied in passing in Dan's
# CVS messages. ;)  no nonspam hits but only a small number of spam ones,
# for me.
header T_HTML_ALL_CAPS		Content-Type =~ /TEXT\/HTML/
describe T_HTML_ALL_CAPS	Content type is "TEXT/HTML" in all caps

# possible replacement for our current CTYPE_JUST_HTML
# looks for messages with either text/html ctype or all mime parts that
# are just text/html
body __CTYPE_HTML_ONLY	eval:check_for_mime_html_text_only()
meta T_CTYPE_JUST_HTML	( !__RCVD_BY_HOTMAIL && __CTYPE_HTML_ONLY )

