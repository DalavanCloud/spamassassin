# SpamAssassin rules file: CVS rules under test
#
# This file is a placeholder for rules "under probation", ie. checked into
# CVS for testing. It should not be distributed; if the rules have good
# stats after a mass-check or two, then fold them into the distributed
# rules files.
#
# I suggest adding a prefix to rules in this file, "T_" -- this
# helps identify probationary rules in test output.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of either the Artistic License or the GNU General
# Public License as published by the Free Software Foundation; either
# version 1 of the License, or (at your option) any later version.
#
# See the file "License" in the top level of the SpamAssassin source
# distribution for more details.
#
###########################################################################

header T_DATE_SPAMWARE_Y2K		Date =~ /^[A-Z][a-z]{2}, \d\d [A-Z][a-z]{2} [0-6]\d \d\d:\d\d:\d\d [A-Z]{3}$/
describe T_DATE_SPAMWARE_Y2K		Date header uses unusual Y2K formatting

# quinlan: I worked at a company that used CorporateTime which very annoyingly
# always used an ISO-8859-1 encoded header even when the Subject: did not have
# a non-ASCII character.  I think other false positives are likely due to
# similarly broken software.
# jm: I notice that all my FPs are gw'd thru IMS; let's try that.
header __SUBJ_BASE64			Subject:raw =~ /=\?[^\?]+\?B\?/
header __SUBJ_QP			Subject:raw =~ /=\?[^\?]+\?Q\?/
header __SUBJ_HAS_NON_ASCII		Subject =~ /[\x00-\x06\x0e-\x1f\x80-\xff]/
header __RCVD_IMS			Received =~ /Internet\s+Mail\s+Service/
meta T_UNNECESSARY_SUBJ_B64_ENCODING	(__SUBJ_BASE64 && !__SUBJ_HAS_NON_ASCII && !__RCVD_IMS)
meta T_UNNECESSARY_SUBJ_QP_ENCODING	(__SUBJ_QP && !__SUBJ_HAS_NON_ASCII && !__RCVD_IMS)
describe T_UNNECESSARY_SUBJ_B64_ENCODING Subject encoded to hide from filters (B64)
describe T_UNNECESSARY_SUBJ_QP_ENCODING Subject encoded to hide from filters (QP)

# A new spamware creates invalid Date stamps, using printf ("%d:%d:%d").
# Catch it here (assuming one of the above doesn't catch it anyway).
# NOTE: __XM_BAD_DATE_MUAS is used below
header __DATE_TIME_INVALID	Date =~ /\s(?!\d\d:\d\d:\d\d)\d{1,2}:\d{1,2}:\d{1,2}\s/
header __XM_BAD_DATE_MUAS	X-Mailer =~ /(?:FoxMail|EMUmail|TFS Secure Messaging|sendEmail|EarthLink MailBox \d\.\d)/i
meta T_INVALID_DATE_HMS		(__DATE_TIME_INVALID && !__XM_BAD_DATE_MUAS)
describe T_INVALID_DATE_HMS	Date header does not use valid HH:MM:SS formatting

# possible replacement for INVALID_DATE.
# NOTE: uses __XM_BAD_DATE_MUAS from above
# rfc822:                       date-time =          [ day-of-week "," ]         (day / obs-day)                 month                           (year / obs-year)   hour ":" minute [ ":" second ]       (zone / obs-zone)          [ comment ]
header __INVALID_DATE		Date !~ /^\s*(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), )?[0-3 ]?[0-9] (?:Jan|Feb|Ma[ry]|Apr|Ju[nl]|Aug|Sep|Oct|Nov|Dec) (?:19|20)?[0-9]{2} [0-2][0-9](?:\:[0-5][0-9]){1,2} (?:[+-][0-9]{4}|UT|[A-Z]{2,3}T)(?:\s+\(.*\))?\s*$/ [if-unset: Mon, 24 Feb 2003 09:30 +0100 (mss)]
header __XM_FOXMAIL		X-Mailer =~ /FoxMail/
meta T_INVALID_DATE_2		(__INVALID_DATE && !__XM_BAD_DATE_MUAS)
describe T_INVALID_DATE_2	Invalid Date: header (not RFC 2822)

# Wierd.  Can only assume this is caused by PEBKAC on the sending side...
meta T_HTML_WITHOUT_HTML_1	(MIME_HTML_ONLY && !HTML_MESSAGE)
describe T_HTML_WITHOUT_HTML_1	Claims to be HTML, but there is no HTML text
# uses __MIME_HTML test from below and eval in EvalTests.pm (at least for now)
meta T_HTML_WITHOUT_HTML_2	(__MIME_HTML && !HTML_MESSAGE)
describe T_HTML_WITHOUT_HTML_2	Claims to be HTML, but there is no HTML text

# Jul  3 2002 jm: modified PENIS_ENLARGE patterns: removed "add", replaced with "inches",
# because that seems to be another typical word in the pattern.
# Feb 11 2003 jm: removed "PP" from pattern, since "pp. 234-237" is std usage
# in academic circles.  I don't think the hit-rate will be affected. ;)
# bug: http://www.hughes-family.org/bugzilla/show_bug.cgi?id=1471
body T_PENIS_ENLARGE		/\b(?:enlarge|increase|grow|lengthen|larger\b|bigger\b|longer\b|thicker\b|\binches\b).{0,50}\b(?:penis|male organ|pee[ -]?pee|dick|sc?hlong|wh?anger|breast)/i
describe T_PENIS_ENLARGE		Information on getting a larger penis or breasts
body T_PENIS_ENLARGE2		/\b(?:penis|male organ|pee[ -]?pee|dick|sc?hlong|wh?anger|breast).{0,50}\b(?:enlarge|increase|grow|lengthen|larger\b|bigger\b|longer\b|thicker\b|\binches\b)/i
describe T_PENIS_ENLARGE2		Information on getting a larger penis or breasts (2)

# 2003-02-23: quinlan
# bug 1376: HTML without <!DOCTYPE> from mailers that always use <!DOCTYPE>
#
# Note: some variations of this rule actually perform better, but they all
# overlap 96-100% with MIME_HTML_ONLY whereas this variation adds real value
# and has a high hit rate.
body __HTML_TAG_EXISTS_DOCTYPE	eval:html_tag_exists('!doctype')
meta T_MIME_HTML_NO_DOCTYPE	(__MIME_HTML && !__HTML_TAG_EXISTS_DOCTYPE)

# 2003-02-25: quinlan
# Whee... more HTML tests!
# Note: these use __MIME_HTML, we might need to exempt MIME attachments from
# that rule
# Apr 22 2003 jm: removed __TAG_EXISTS_DIV from OUTLOOK, as 'MS Exchange
# Server version 6.0.4630.0' does not insert that, causing FPs
header __ANY_OUTLOOK_MUA	X-Mailer =~ /^Microsoft Outlook\b/
header __ANY_QUALCOMM_MUA	X-Mailer =~ /^QUALCOMM\b/
meta T_HTML_FAKED_OUTLOOK	(__ANY_OUTLOOK_MUA && __MIME_HTML && !(__TAG_EXISTS_BODY && __TAG_EXISTS_HEAD && __TAG_EXISTS_HTML && __TAG_EXISTS_META))
# my FPs for this should hopefully be fixed now
meta T_HTML_FAKED_QUALCOMM	(__ANY_QUALCOMM_MUA && __MIME_HTML && !__TAG_EXISTS_HTML)

# MIME Content-Transfer-Encoding control rules
rawbody T_MIME_BASE64			eval:check_for_mime('t_mime_base64_count')
rawbody T_MIME_QP			eval:check_for_mime('t_mime_qp_count')

# 2003-03-06: quinlan
rawbody T_MIME_BASE64_BLANKS		eval:check_for_mime('t_mime_base64_blanks')
rawbody T_MIME_BASE64_ILLEGAL		eval:check_for_mime('t_mime_base64_illegal')
rawbody T_MIME_BASE64_WITHOUT_NAME	eval:check_for_mime('t_mime_base64_without_name')
rawbody T_MIME_QP_INLINE_NO_CHARSET	eval:check_for_mime('t_mime_qp_inline_no_charset')

# bug 1380
meta T_FAKED_THEBAT		(__THEBAT_MUA && __MIME_HTML_ONLY)

# quinlan: 2003-03-15
# these all appear in the same low-scoring spammer for me, but they
# might differ for others so I'm trying some different URLs, check
# overlap in others' results before committing anything
#
# quinlan: 2003-03-28: does ANYONE other than me have any hits for these?
#
# Apr  1 2003 jm: constantcontact is a spamtool, also used in legit mailouts
# by a Java company :(
#
header T_EXECUTIVECALIBER		ALL =~ /\bexecutivecaliber\.ws\b/i
header T_CONSTANTCONTACT		ALL =~ /\bconstantcontact\.com\b/i
header T_ROVING_COM			ALL =~ /\broving\.com\b/i
uri T_EXECUTIVECALIBER_URL		/\bexecutivecaliber\.ws\b/i
uri T_CONSTANTCONTACT_URL		/\bconstantcontact\.com\b/i
uri T_CCPROD_ROVING_COM_URL		/\bccprod\.roving\.com\b/i
uri T_ROVING_COM_URL			/\broving\.com\b/i
uri T_RS6_NET_URL			/\brs6\.net\b/i

# bug 1394, possible replacement for ORDER_NOW
body T_ORDER_NOW                  /\border (?:now|soon|fast|quickly|while|today)\b/i
# Apr  1 2003 jm: not so good... more hits, but lower accuracy
#  1.268   3.8907   0.0761    0.981   0.92    0.00  ORDER_NOW
#  1.549   4.7343   0.1009    0.979   0.91    0.01  T_ORDER_NOW

uri      T_HTTP_EXCESSIVE_ENTITIES m{^https?://\S*\&\#(?:0?3[0-9]|0?[46][1-9a-f]|0?[57][\da])}i
describe T_HTTP_EXCESSIVE_ENTITIES Completely unnecessary %-escapes inside a URL

body T_HTML_COMMENT_NO_ALPHANUM	eval:html_test('comment_no_alphanum')
meta T_HTML_COMMENT_NO_ALPHANUM2	T_HTML_COMMENT_NO_ALPHANUM && !__MOZILLA_MUA

# RFC2822 violations
#header T_HEADER_COUNT_BAD_DATE		eval:check_header_count_range('Date','2','999')
#header T_HEADER_COUNT_BAD_FROM		eval:check_header_count_range('From','2','999')
#header T_HEADER_COUNT_BAD_SENDER	eval:check_header_count_range('Sender','2','999')
#header T_HEADER_COUNT_BAD_REPLYTO	eval:check_header_count_range('Reply-To','2','999')
#header T_HEADER_COUNT_BAD_MESSAGEID	eval:check_header_count_range('Message-Id','2','999')
#header T_HEADER_COUNT_BAD_INREPLYTO	eval:check_header_count_range('In-Reply-To','2','999')
#header T_HEADER_COUNT_BAD_REFERENCES	eval:check_header_count_range('References','2','999')
#header T_HEADER_COUNT_BAD_SUBJECT	eval:check_header_count_range('Subject','2','999')
# multiple To/Cc/Bcc headers are obsolete in RFC 2822, but they are still
# frequently used and RFC 2822 says they should still be supported.  Cc:
# generates many false positives.
#header T_HEADER_COUNT_BAD_TO		eval:check_header_count_range('To','2','999')
#header T_HEADER_COUNT_BAD_CC		eval:check_header_count_range('Cc','2','999')
#header T_HEADER_COUNT_BAD_BCC		eval:check_header_count_range('Bcc','2','999')
# There doesn't seem to be a RFC restriction, but these should only show up
# once in ham
header T_HEADER_COUNT_BAD_CTYPE		eval:check_header_count_range('Content-Type','2','999')
#header T_HEADER_COUNT_BAD_CTE		eval:check_header_count_range('Content-Transfer-Encoding','2','999')

body T_BLANK_LINE_RATIO_01_00_02	eval:check_blank_line_ratio('0','2')
body T_BLANK_LINE_RATIO_01_02_04	eval:check_blank_line_ratio('2','4')
body T_BLANK_LINE_RATIO_01_04_06	eval:check_blank_line_ratio('4','6')
body T_BLANK_LINE_RATIO_01_06_08	eval:check_blank_line_ratio('6','8')
body T_BLANK_LINE_RATIO_01_08_10	eval:check_blank_line_ratio('8','10')
body T_BLANK_LINE_RATIO_01_10_20	eval:check_blank_line_ratio('10','20')
body T_BLANK_LINE_RATIO_01_20_30	eval:check_blank_line_ratio('20','30')
body T_BLANK_LINE_RATIO_01_30_40	eval:check_blank_line_ratio('30','40')
body T_BLANK_LINE_RATIO_01_40_50	eval:check_blank_line_ratio('40','50')
body T_BLANK_LINE_RATIO_01_50_60	eval:check_blank_line_ratio('50','60')
body T_BLANK_LINE_RATIO_01_60_70	eval:check_blank_line_ratio('60','70')
body T_BLANK_LINE_RATIO_01_70_80	eval:check_blank_line_ratio('70','80')
body T_BLANK_LINE_RATIO_01_80_90	eval:check_blank_line_ratio('80','90')
body T_BLANK_LINE_RATIO_01_90_92	eval:check_blank_line_ratio('90','92')
body T_BLANK_LINE_RATIO_01_92_94	eval:check_blank_line_ratio('92','94')
body T_BLANK_LINE_RATIO_01_94_96	eval:check_blank_line_ratio('94','96')
body T_BLANK_LINE_RATIO_01_96_98	eval:check_blank_line_ratio('96','98')
body T_BLANK_LINE_RATIO_01_98_100	eval:check_blank_line_ratio('98','100')

body T_BLANK_LINE_RATIO_04_00_02	eval:check_blank_line_ratio('0','2','4')
body T_BLANK_LINE_RATIO_04_02_04	eval:check_blank_line_ratio('2','4','4')
body T_BLANK_LINE_RATIO_04_04_06	eval:check_blank_line_ratio('4','6','4')
body T_BLANK_LINE_RATIO_04_06_08	eval:check_blank_line_ratio('6','8','4')
body T_BLANK_LINE_RATIO_04_08_10	eval:check_blank_line_ratio('8','10','4')
body T_BLANK_LINE_RATIO_04_10_20	eval:check_blank_line_ratio('10','20','4')
body T_BLANK_LINE_RATIO_04_20_30	eval:check_blank_line_ratio('20','30','4')
body T_BLANK_LINE_RATIO_04_30_40	eval:check_blank_line_ratio('30','40','4')
body T_BLANK_LINE_RATIO_04_40_50	eval:check_blank_line_ratio('40','50','4')
body T_BLANK_LINE_RATIO_04_50_60	eval:check_blank_line_ratio('50','60','4')
body T_BLANK_LINE_RATIO_04_60_70	eval:check_blank_line_ratio('60','70','4')
body T_BLANK_LINE_RATIO_04_70_80	eval:check_blank_line_ratio('70','80','4')
body T_BLANK_LINE_RATIO_04_80_90	eval:check_blank_line_ratio('80','90','4')
body T_BLANK_LINE_RATIO_04_90_92	eval:check_blank_line_ratio('90','92','4')
body T_BLANK_LINE_RATIO_04_92_94	eval:check_blank_line_ratio('92','94','4')
body T_BLANK_LINE_RATIO_04_94_96	eval:check_blank_line_ratio('94','96','4')
body T_BLANK_LINE_RATIO_04_96_98	eval:check_blank_line_ratio('96','98','4')
body T_BLANK_LINE_RATIO_04_98_100	eval:check_blank_line_ratio('98','100','4')

body T_BLANK_LINE_RATIO_08_00_02	eval:check_blank_line_ratio('0','2','8')
body T_BLANK_LINE_RATIO_08_02_04	eval:check_blank_line_ratio('2','4','8')
body T_BLANK_LINE_RATIO_08_04_06	eval:check_blank_line_ratio('4','6','8')
body T_BLANK_LINE_RATIO_08_06_08	eval:check_blank_line_ratio('6','8','8')
body T_BLANK_LINE_RATIO_08_08_10	eval:check_blank_line_ratio('8','10','8')
body T_BLANK_LINE_RATIO_08_10_20	eval:check_blank_line_ratio('10','20','8')
body T_BLANK_LINE_RATIO_08_20_30	eval:check_blank_line_ratio('20','30','8')
body T_BLANK_LINE_RATIO_08_30_40	eval:check_blank_line_ratio('30','40','8')
body T_BLANK_LINE_RATIO_08_40_50	eval:check_blank_line_ratio('40','50','8')
body T_BLANK_LINE_RATIO_08_50_60	eval:check_blank_line_ratio('50','60','8')
body T_BLANK_LINE_RATIO_08_60_70	eval:check_blank_line_ratio('60','70','8')
body T_BLANK_LINE_RATIO_08_70_80	eval:check_blank_line_ratio('70','80','8')
body T_BLANK_LINE_RATIO_08_80_90	eval:check_blank_line_ratio('80','90','8')
body T_BLANK_LINE_RATIO_08_90_92	eval:check_blank_line_ratio('90','92','8')
body T_BLANK_LINE_RATIO_08_92_94	eval:check_blank_line_ratio('92','94','8')
body T_BLANK_LINE_RATIO_08_94_96	eval:check_blank_line_ratio('94','96','8')
body T_BLANK_LINE_RATIO_08_96_98	eval:check_blank_line_ratio('96','98','8')
body T_BLANK_LINE_RATIO_08_98_100	eval:check_blank_line_ratio('98','100','8')

body T_BLANK_LINE_RATIO_20_00_02	eval:check_blank_line_ratio('0','2','20')
body T_BLANK_LINE_RATIO_20_02_04	eval:check_blank_line_ratio('2','4','20')
body T_BLANK_LINE_RATIO_20_04_06	eval:check_blank_line_ratio('4','6','20')
body T_BLANK_LINE_RATIO_20_06_08	eval:check_blank_line_ratio('6','8','20')
body T_BLANK_LINE_RATIO_20_08_10	eval:check_blank_line_ratio('8','10','20')
body T_BLANK_LINE_RATIO_20_10_20	eval:check_blank_line_ratio('10','20','20')
body T_BLANK_LINE_RATIO_20_20_30	eval:check_blank_line_ratio('20','30','20')
body T_BLANK_LINE_RATIO_20_30_40	eval:check_blank_line_ratio('30','40','20')
body T_BLANK_LINE_RATIO_20_40_50	eval:check_blank_line_ratio('40','50','20')
body T_BLANK_LINE_RATIO_20_50_60	eval:check_blank_line_ratio('50','60','20')
body T_BLANK_LINE_RATIO_20_60_70	eval:check_blank_line_ratio('60','70','20')
body T_BLANK_LINE_RATIO_20_70_80	eval:check_blank_line_ratio('70','80','20')
body T_BLANK_LINE_RATIO_20_80_90	eval:check_blank_line_ratio('80','90','20')
body T_BLANK_LINE_RATIO_20_90_92	eval:check_blank_line_ratio('90','92','20')
body T_BLANK_LINE_RATIO_20_92_94	eval:check_blank_line_ratio('92','94','20')
body T_BLANK_LINE_RATIO_20_94_96	eval:check_blank_line_ratio('94','96','20')
body T_BLANK_LINE_RATIO_20_96_98	eval:check_blank_line_ratio('96','98','20')
body T_BLANK_LINE_RATIO_20_98_100	eval:check_blank_line_ratio('98','100','20')

###########################################################################

# tvd - 2003.02.26, trying to strengthen the anti-ratware rules

meta T_FORGED_USER_AGENT	( __USER_AGENT_PINE + __T_USER_AGENT_MUTT + __T_USER_AGENT_MOZILLA_UA + __T_USER_AGENT_MOZILLA_XM + __T_USER_AGENT_MACOE + __T_USER_AGENT_ENTOURAGE + __T_USER_AGENT_KMAIL + __T_USER_AGENT_IMP + __USER_AGENT_TONLINE + __USER_AGENT_APPLEMAIL + __USER_AGENT_GNUS_UA + __USER_AGENT_GNUS_XM + __USER_AGENT_VM + __T_USER_AGENT_MSN + __T_USER_AGENT_FORTE + __USER_AGENT_XIMIAN > 1 )

meta T_USER_AGENT                        ( __USER_AGENT && !T_FORGED_USER_AGENT && !__USER_AGENT_PINE && !__T_USER_AGENT_MUTT && !__T_USER_AGENT_MOZILLA_UA && !__T_USER_AGENT_MOZILLA_XM && !__T_USER_AGENT_MACOE && !__T_USER_AGENT_ENTOURAGE && !__T_USER_AGENT_KMAIL && !__T_USER_AGENT_IMP && !__USER_AGENT_TONLINE && !__USER_AGENT_APPLEMAIL && !__USER_AGENT_GNUS_UA && !__USER_AGENT_GNUS_XM && !__USER_AGENT_VM && !__T_USER_AGENT_MSN && !__T_USER_AGENT_FORTE && !__USER_AGENT_XIMIAN )

header __MSGID_PINE	Message-Id =~ /^<Pine\.[A-Z]{3}\.\d\.[0-9A-Z]+\./
meta __USER_AGENT_PINE	__MSGID_PINE && !MIME_HTML_ONLY
meta T_USER_AGENT_PINE		__USER_AGENT_PINE && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_PINE	__MSGID_PINE && !__USER_AGENT_PINE

# From 0.93.2 - 1.2.5.1, message-id is:
#  snprintf (buf, sizeof (buf), "<%d%02d%02d%02d%02d%02d.%c%d@%s>",
#            tm->tm_year + 1900, tm->tm_mon + 1, tm->tm_mday, tm->tm_hour,
#            tm->tm_min, tm->tm_sec, MsgIdPfx, getpid (), fqdn);
#  MsgIdPfx = (MsgIdPfx == 'Z') ? 'A' : MsgIdPfx + 1;
# The code from mutt 1.4 is adds a 'G' for some reason:
#  snprintf (buf, sizeof (buf), "<%d%02d%02d%02d%02d%02d.G%c%d@%s>",
meta __T_USER_AGENT_MUTT	__USER_AGENT_MUTT && __VALID_MUTT_MSGID && !MIME_HTML_ONLY
meta T_USER_AGENT_MUTT		__T_USER_AGENT_MUTT && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_MUTT		__USER_AGENT_MUTT && !__UNUSABLE_MSGID && !__T_USER_AGENT_MUTT

header __USER_AGENT_MOZILLA_UA	User-Agent =~ /^Mozilla\/5\.\d+ \(.*\) Gecko\/\d{8}(?: |$)/
header __MSGID_MOZILLA_UA	Message-Id =~ /^<[0-9A-F]{8}\.\d+\@\S+>$/
meta __T_USER_AGENT_MOZILLA_UA	__USER_AGENT_MOZILLA_UA && __MSGID_MOZILLA_UA
meta T_USER_AGENT_MOZILLA_UA	__T_USER_AGENT_MOZILLA_UA && !T_FORGED_USER_AGENT

header __USER_AGENT_MOZILLA_XM	X-Mailer   =~ /^Mozilla 4\.\d{2} \[[a-z]{2}\]/
header __MSGID_MOZILLA_XM	Message-Id =~ /^<[0-9A-F]{8}\.[0-9A-F]{8}\@\S+>$/
meta __T_USER_AGENT_MOZILLA_XM	__USER_AGENT_MOZILLA_XM && __MSGID_MOZILLA_XM
meta T_USER_AGENT_MOZILLA_XM	__T_USER_AGENT_MOZILLA_XM && !T_FORGED_USER_AGENT

header __USER_AGENT_MACOE	User-Agent =~ /^Microsoft[ -]Outlook[ -]Express[ -]Macintosh[ -]Edition/
meta __T_USER_AGENT_MACOE	__USER_AGENT_MACOE && __MSGID_ENTOURAGE
meta T_USER_AGENT_MACOE		__T_USER_AGENT_MACOE && !T_FORGED_USER_AGENT

header __USER_AGENT_ENTOURAGE	User-Agent =~ /^Microsoft-Entourage\/\d{1,2}(?:\.\d){1,2}\.\d{4}$/
header __MSGID_ENTOURAGE	Message-ID =~ /^<[0-9A-F]{8}\.[0-9A-F]+\%\S+\@\S+>$/
meta __T_USER_AGENT_ENTOURAGE	__USER_AGENT_ENTOURAGE && __MSGID_ENTOURAGE && !MIME_HTML_ONLY
meta T_USER_AGENT_ENTOURAGE	__T_USER_AGENT_ENTOURAGE && !T_FORGED_USER_AGENT

header __USER_AGENT_KMAIL	User-Agent =~ /^KMail\/1\.\d\.\d+$/
header __MSGID_KMAIL		Message-Id =~ /^<[12]\d{3}[01]\d[0-3]\d[0-2]\d[0-5]\d\.\d+\.\S+@\S+>$/
meta __T_USER_AGENT_KMAIL	__USER_AGENT_KMAIL && __MSGID_KMAIL
meta T_USER_AGENT_KMAIL		__T_USER_AGENT_KMAIL && !T_FORGED_USER_AGENT

header __USER_AGENT_IMP		User-Agent =~ /^Internet Messaging Program \(IMP\) [34]\.\d/
header __MSGID_IMP		Message-Id =~ /^<\d{9,10}\.[0-9a-f]{13}\@\S+>$/
meta __T_USER_AGENT_IMP		__USER_AGENT_IMP && __MSGID_IMP
meta T_USER_AGENT_IMP		__T_USER_AGENT_IMP && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_IMP		__USER_AGENT_IMP && !__UNUSABLE_MSGID && !__T_USER_AGENT_IMP

header __USER_AGENT_TONLINE	X-Mailer   =~ /^T-Online (?:e|Web)Mail \d\.\d+$/
meta T_USER_AGENT_TONLINE	__USER_AGENT_TONLINE && !T_FORGED_USER_AGENT

header __USER_AGENT_GNUS_UA	User-Agent =~ /^Gnus\/\d\.\d+ /
meta T_USER_AGENT_GNUS_UA	__USER_AGENT_GNUS_UA && !T_FORGED_USER_AGENT

header __USER_AGENT_GNUS_XM	X-Mailer   =~ /^Gnus v\d(?:\.\d+){1,2}\/X?Emacs \d+\.\d+/
meta T_USER_AGENT_GNUS_XM	__USER_AGENT_GNUS_XM && !T_FORGED_USER_AGENT

header __USER_AGENT_VM		X-Mailer =~ /^\s*VM\s+\d+\.\d+\s+under\s+.{0,30}?[Ee]macs\b/
meta T_USER_AGENT_VM		__USER_AGENT_VM && !T_FORGED_USER_AGENT

# frequently forged, needs some correlation meta checks with other headers.
meta __T_USER_AGENT_MSN		(__USER_AGENT_MSN && __HAS_XOAT && __HAS_XOIP)
meta T_USER_AGENT_MSN		__T_USER_AGENT_MSN && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_MSN		__USER_AGENT_MSN && !T_USER_AGENT_MSN

header __USER_AGENT_FORTE	X-Mailer =~ /^Forte Agent \d\.\d+\/\d+\.\d+$/
header __MSGID_FORTE		Message-Id =~ /^<[0-9a-f]{8}\.\d+\@\S+>$/
meta __T_USER_AGENT_FORTE	__USER_AGENT_FORTE && __MSGID_FORTE
meta T_USER_AGENT_FORTE		__T_USER_AGENT_FORTE && !T_FORGED_USER_AGENT

meta __USER_AGENT_XIMIAN	(__XIMIAN_MSGID && __XIMIAN_MUA)
meta T_USER_AGENT_XIMIAN	__USER_AGENT_XIMIAN && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_XIMIAN	__XIMIAN_MUA && !__UNUSABLE_MSGID && !__USER_AGENT_XIMIAN

# per bug 1373
body __HTML_COMMENT_RATIO_00_10		eval:html_range('total_comment_ratio','0.00','0.10')
body __HTML_COMMENT_RATIO_10_20		eval:html_range('total_comment_ratio','0.10','0.20')
body __HTML_COMMENT_RATIO_20_30		eval:html_range('total_comment_ratio','0.20','0.30')
body __HTML_COMMENT_RATIO_30_40		eval:html_range('total_comment_ratio','0.30','0.40')
body __HTML_COMMENT_RATIO_40_50		eval:html_range('total_comment_ratio','0.40','0.50')
body __HTML_COMMENT_RATIO_50_60		eval:html_range('total_comment_ratio','0.50','0.60')
body __HTML_COMMENT_RATIO_60_70		eval:html_range('total_comment_ratio','0.60','0.70')
body __HTML_COMMENT_RATIO_70_80		eval:html_range('total_comment_ratio','0.70','0.80')
body __HTML_COMMENT_RATIO_80_90		eval:html_range('total_comment_ratio','0.80','0.90')
body __HTML_COMMENT_RATIO_90_100	eval:html_range('total_comment_ratio','0.90','0.100')
meta T_HTML_COMMENT_RATIO_00_10_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_00_10 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_10_20_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_10_20 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_20_30_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_20_30 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_30_40_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_30_40 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_40_50_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_40_50 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_50_60_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_50_60 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_60_70_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_60_70 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_70_80_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_70_80 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_80_90_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_80_90 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_90_100_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_90_100 && MIME_HTML_ONLY

meta T_HTML_COMMENT_RATIO_00_10___MIME_HTML		__HTML_COMMENT_RATIO_00_10 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_10_20___MIME_HTML		__HTML_COMMENT_RATIO_10_20 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_20_30___MIME_HTML		__HTML_COMMENT_RATIO_20_30 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_30_40___MIME_HTML		__HTML_COMMENT_RATIO_30_40 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_40_50___MIME_HTML		__HTML_COMMENT_RATIO_40_50 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_50_60___MIME_HTML		__HTML_COMMENT_RATIO_50_60 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_60_70___MIME_HTML		__HTML_COMMENT_RATIO_60_70 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_70_80___MIME_HTML		__HTML_COMMENT_RATIO_70_80 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_80_90___MIME_HTML		__HTML_COMMENT_RATIO_80_90 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_90_100___MIME_HTML		__HTML_COMMENT_RATIO_90_100 && __MIME_HTML

meta T_HTML_COMMENT_RATIO_00_10_HTML_MESSAGE		__HTML_COMMENT_RATIO_00_10 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_10_20_HTML_MESSAGE		__HTML_COMMENT_RATIO_10_20 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_20_30_HTML_MESSAGE		__HTML_COMMENT_RATIO_20_30 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_30_40_HTML_MESSAGE		__HTML_COMMENT_RATIO_30_40 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_40_50_HTML_MESSAGE		__HTML_COMMENT_RATIO_40_50 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_50_60_HTML_MESSAGE		__HTML_COMMENT_RATIO_50_60 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_60_70_HTML_MESSAGE		__HTML_COMMENT_RATIO_60_70 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_70_80_HTML_MESSAGE		__HTML_COMMENT_RATIO_70_80 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_80_90_HTML_MESSAGE		__HTML_COMMENT_RATIO_80_90 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_90_100_HTML_MESSAGE		__HTML_COMMENT_RATIO_90_100 && HTML_MESSAGE

header T_RATWARE_RCVD_BONUS_SPC	Received =~ /\) by  [a-zA-Z0-9]/
describe T_RATWARE_RCVD_BONUS_SPC Received headers forged (extra spaces)

# quinlan: How much better are these than MIME_HTML_ONLY?  I'm concerned
# it's a bit too easy to create high S/O rules with MIME_HTML_ONLY
meta T_MIME_HTML_NO_HTML_TAG	MIME_HTML_ONLY && !__TAG_EXISTS_HTML
meta T_MIME_HTML_NO_BODY_TAG	MIME_HTML_ONLY && !__TAG_EXISTS_BODY
# but we'll try this anyway
meta T_MIME_HTML_NO_MAJOR_TAG	MIME_HTML_ONLY && !__TAG_EXISTS_HTML && !__TAG_EXISTS_BODY

# quinlan: 2003-04-07
# color stuff
body T_HTML_FONT_COLOR_NAME	eval:html_test('t_font_color_name')
describe T_HTML_FONT_COLOR_NAME	HTML font color has unusual name

# quinlan: 2003-04-14
# 1x1 images
body T_HTML_IMAGE_WEB_BUGS_1	eval:html_test('t_image_web_bugs_1')
body T_HTML_IMAGE_WEB_BUGS_2	eval:html_test('t_image_web_bugs_2')
body T_HTML_IMAGE_WEB_BUGS_3	eval:html_test('t_image_web_bugs_3')
body T_HTML_IMAGE_WEB_BUGS_4	eval:html_test('t_image_web_bugs_4')
body T_HTML_IMAGE_WEB_BUGS_5	eval:html_test('t_image_web_bugs_5')
body T_HTML_IMAGE_WEB_BUGS_6	eval:html_test('t_image_web_bugs_6')
body T_HTML_IMAGE_WEB_BUGS_7	eval:html_test('t_image_web_bugs_7')
body T_HTML_IMAGE_WEB_BUGS_8	eval:html_test('t_image_web_bugs_8')
body T_HTML_IMAGE_WEB_BUGS_9	eval:html_test('t_image_web_bugs_9')
body T_HTML_IMAGE_WEB_BUGS_10	eval:html_test('t_image_web_bugs_10')
body T_HTML_IMAGE_WEB_BUGS_11	eval:html_test('t_image_web_bugs_11')
body T_HTML_IMAGE_WEB_BUGS_6B	eval:html_test('t_image_web_bugs_6b')
body T_HTML_IMAGE_WEB_BUGS_7B	eval:html_test('t_image_web_bugs_7b')
body T_HTML_IMAGE_WEB_BUGS_8B	eval:html_test('t_image_web_bugs_8b')
body T_HTML_IMAGE_WEB_BUGS_9B	eval:html_test('t_image_web_bugs_9b')
body T_HTML_IMAGE_WEB_BUGS_10B	eval:html_test('t_image_web_bugs_10b')
body T_HTML_IMAGE_WEB_BUGS_11B	eval:html_test('t_image_web_bugs_11b')
# both web bugs rules
meta T_HTML_WEB_BUGS_PLUS_1	(T_HTML_IMAGE_WEB_BUGS_1 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_2	(T_HTML_IMAGE_WEB_BUGS_2 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_3	(T_HTML_IMAGE_WEB_BUGS_3 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_4	(T_HTML_IMAGE_WEB_BUGS_4 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_5	(T_HTML_IMAGE_WEB_BUGS_5 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_6	(T_HTML_IMAGE_WEB_BUGS_6 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_7	(T_HTML_IMAGE_WEB_BUGS_7 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_8	(T_HTML_IMAGE_WEB_BUGS_8 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_9	(T_HTML_IMAGE_WEB_BUGS_9 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_10	(T_HTML_IMAGE_WEB_BUGS_10 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_11	(T_HTML_IMAGE_WEB_BUGS_11 && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_6B	(T_HTML_IMAGE_WEB_BUGS_6B && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_7B	(T_HTML_IMAGE_WEB_BUGS_7B && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_8B	(T_HTML_IMAGE_WEB_BUGS_8B && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_9B	(T_HTML_IMAGE_WEB_BUGS_9B && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_10B	(T_HTML_IMAGE_WEB_BUGS_10B && HTML_WEB_BUGS)
meta T_HTML_WEB_BUGS_PLUS_11B	(T_HTML_IMAGE_WEB_BUGS_11B && HTML_WEB_BUGS)

# 2003-02-23: quinlan
# Message-Id: format tests
# hotmail
header T_MSGID_ADDED_BY_HOTMAIL_1	Message-Id =~ /<MC\d{1,2}-F{1,2}\w{21,22}\@\S*hotmail\.com>/
header T_MSGID_ADDED_BY_HOTMAIL_2	Message-Id =~ /<[A-Z]{2}\d{1,2}-F{1,2}\w{21,22}\@\S*hotmail\.com>/
# 13 hexadecimal digits instead of 12
header T_MSGID_OUTLOOK_HEX	Message-Id =~ /<[a-f0-9]{13}\$[a-f0-9]{8}\$[a-f0-9]{8}\@/
# this one high correlation with ratware "EMWAC SMTPRS"
header T_MSGID_B_DIGITS		Message-Id =~ /<B\d{10}\@/
# looks like spam
header T_MSGID_THREESIXSIX	Message-Id =~ /<\d{3}\.\d{6}\.\d{6}\@\S+>/

# NOTE: uses __ANY_OUTLOOK_MUA.  This catches Send-Safe and a few others
header __OL_STYLE_FROM		From =~ /\".*\" <.+>/
header __VIA_FROM_MANGLER	Received =~ /iPlanet/
meta T_FORGED_MUA_OUTLOOK_FROM	(__ANY_OUTLOOK_MUA && !__OL_STYLE_FROM && !__VIA_FROM_MANGLER)
describe T_FORGED_MUA_OUTLOOK_FROM Forged mail pretending to be from Outlook (by From)

# NOTE: uses __ANY_IMS_MUA from above, __CTYPE_HAS_BOUNDARY from 20_ratware.cf
header __IMS_BOUNDARY		Content-Type =~ /\n\s+boundary=\"----_=_NextPart_[\dA-F]+_[\dA-F]+.[\dA-F]+\"/s
meta T_FORGED_IMS_CTYPE		(__ANY_IMS_MUA && __CTYPE_HAS_BOUNDARY && !__IMS_BOUNDARY)
describe T_FORGED_IMS_CTYPE	Forged mail pretending to be from IMS (boundary)

# NOTE: uses __ANY_QUALCOMM_MUA, __VIA_FROM_MANGLER from above
header __EUD_STYLE_FROM		From =~ /^(?:[^\"][^']+[^\"]|\".*\'.*\") <[^>]+>$/
meta T_FORGED_MUA_EUDORA_FROM	(__ANY_QUALCOMM_MUA && !__EUD_STYLE_FROM && !__VIA_FROM_MANGLER)
describe T_FORGED_MUA_EUDORA_FROM Forged mail pretending to be from Eudora (by From)

# Thanks to Brian J. Peterson for this
# Catches spams sent by illiterate spammer ("secks", "whoarez" etc.)
header T_RATWARE_MIZSPEELING	eval:check_for_mizspeeling_ratware()
describe T_RATWARE_MIZSPEELING	Sent using spammer tool (mizspeeling)

# new version
# Apr 22 2003 jm: not so good.  stick with the old one I say
# 0.061   0.2360   0.0000    1.000   0.97    0.01  T_NIGERIAN_SUBJECT2
# 0.087   0.5827   0.0000    1.000   0.96    0.01  T_NIGERIAN_SUBJECT2:jm
# 0.040   0.0729   0.0000    1.000   0.94    0.01  T_NIGERIAN_SUBJECT2:lan
# 0.034   0.0831   0.0000    1.000   0.93    0.01  T_NIGERIAN_SUBJECT2:quinlan
# 0.022   0.0660   0.0000    1.000   0.97    0.01  T_NIGERIAN_SUBJECT2:rODbegbie
# 0.065   0.2536   0.0000    1.000   0.97    2.40  NIGERIAN_SUBJECT2
# 0.090   0.6051   0.0000    1.000   0.96    2.40  NIGERIAN_SUBJECT2:jm
# 0.040   0.0729   0.0000    1.000   0.94    2.40  NIGERIAN_SUBJECT2:lan
# 0.047   0.1163   0.0000    1.000   0.93    2.40  NIGERIAN_SUBJECT2:quinlan
# 0.017   0.0495   0.0000    1.000   0.97    2.40  NIGERIAN_SUBJECT2:rODbegbie
header T_NIGERIAN_SUBJECT2	Subject =~ /^(?:Re:|\[.{1,10}\])?\s*(?:request\s+(?:for\s+)?)?(?:very )?urgent\s+(?:(?:and|&)\s+(?:(?:completely|100\%)\s+))?(?:confidential|assistance|business|attention|reply|responses?|help)\b/i

# quinlan: entire corpus, then last 2000 spam and 2000 ham:
# 18.125  36.2000   0.0500    0.999   0.95    0.01  T_RCVD_IN_MONKEYS_UPL
#  7.766  19.0844   0.0678    0.996   0.94    0.01  T_RCVD_IN_MONKEYS_UPL
header T_RCVD_IN_MONKEYS_UPL	rbleval:check_rbl_txt('relay', 'proxies.relays.monkeys.com.')
describe T_RCVD_IN_MONKEYS_UPL	Received via a relay in proxies.relays.monkeys.com.
tflags T_RCVD_IN_MONKEYS_UPL net

# quinlan: entire corpus, then last 2000 spam and 2000 ham:
#  0.686   1.5620   0.0904    0.945   0.79    0.01  T_RCVD_IN_DYNABLOCK
#  0.775   1.5000   0.0500    0.968   0.82    0.01  T_RCVD_IN_DYNABLOCK
header T_RCVD_IN_DYNABLOCK	rbleval:check_rbl('dynablock-notfirsthop', 'dynablock.wirehub.net.')
tflags T_RCVD_IN_DYNABLOCK	net

# mixed list, still need to check for cost, policies, etc.
header T_RCVD_IN_DEADBEEF	rbleval:check_rbl('deadbeef', 'bl.deadbeef.com.')
header T_RCVD_IN_DNSBLINFO	rbleval:check_rbl('dnsblinfo', 'spamsources.dnsbl.info.')
header T_RCVD_IN_DNSRBLSPAM	rbleval:check_rbl('dnsrblspam', 'spam.dnsrbl.net.')
header T_RCVD_IN_GIPPER	rbleval:check_rbl('gipper', 'proxy.bl.gweep.ca.')
header T_RCVD_IN_INTERSIL	rbleval:check_rbl('intersil', 'blackholes.intersil.net.')
header T_RCVD_IN_RELAYS_KUNDENSERVER	rbleval:check_rbl('kundenserver', 'relays.bl.kundenserver.de.')
header T_RCVD_IN_SPAMSOURCES_FABEL	rbleval:check_rbl('fabel', 'spamsources.fabel.dk.')
header T_RCVD_IN_VOX_SCHPIDER_COM	rbleval:check_rbl('schpider', 'vox.schpider.com.')
header T_RCVD_IN_WSFF		rbleval:check_rbl('wsff', 'will-spam-for-food.eu.org.')
tflags T_RCVD_IN_DEADBEEF net
tflags T_RCVD_IN_DNSBLINFO net
tflags T_RCVD_IN_DNSRBLSPAM net
tflags T_RCVD_IN_GIPPER net
tflags T_RCVD_IN_INTERSIL net
tflags T_RCVD_IN_RELAYS_KUNDENSERVER net
tflags T_RCVD_IN_SPAMSOURCES_FABEL net
tflags T_RCVD_IN_VOX_SCHPIDER_COM net
tflags T_RCVD_IN_WSFF net

# wirehub
header T_RCVD_IN_WIREHUB_BH	rbleval:check_rbl('wirehub', 'blackholes.wirehub.net.')
tflags T_RCVD_IN_WIREHUB_BH net
header T_RCVD_IN_WIREHUB_PROXIES	rbleval:check_rbl('pbwn', 'proxies.blackholes.wirehub.net.')
tflags T_RCVD_IN_WIREHUB_PROXIES net

# OPM sub-tests
# transfers: axfr/ixfr for trusted sites
# url: http://opm.blitzed.org/
# pay-to-use: no
# delist: automatic expiry, no fee, retested on request (free)
header __RCVD_IN_OPM			rbleval:check_rbl('opm2', 'opm.blitzed.org.')
tflags __RCVD_IN_OPM net
header T_RCVD_IN_OPM_WINGATE		rbleval:check_rbl_sub('opm2', '1')
tflags T_RCVD_IN_OPM_WINGATE net
header T_RCVD_IN_OPM_SOCKS		rbleval:check_rbl_sub('opm2', '2')
tflags T_RCVD_IN_OPM_SOCKS net
header T_RCVD_IN_OPM_HTTP_CONNECT	rbleval:check_rbl_sub('opm2', '4')
tflags T_RCVD_IN_OPM_HTTP_CONNECT net
header T_RCVD_IN_OPM_ROUTER		rbleval:check_rbl_sub('opm2', '8')
tflags T_RCVD_IN_OPM_ROUTER net
header T_RCVD_IN_OPM_HTTP_POST		rbleval:check_rbl_sub('opm2', '16')
tflags T_RCVD_IN_OPM_HTTP_POST net

# fiveten - many blacklists, but only the bulk one performs well
# transfers: not specified, unknown
# url: http://blackholes.five-ten-sg.com/
# pay-to-use: no
# delist: email address contact provided
header __FIVETEN	rbleval:check_rbl('fiveten', 'blackholes.five-ten-sg.com.')
tflags __FIVETEN net
# bulk mailers that don't require confirmed opt-in from their customers,
# or that have have allowed known spammers to become clients.
header T_RCVD_IN_FIVETEN_BULK	rbleval:check_rbl_sub('fiveten', '127.0.0.4')
tflags T_RCVD_IN_FIVETEN_BULK net
# retest all of the rest (since rblreseval wasn't used before)
header T_RCVD_IN_FIVETEN_SPAM	rbleval:check_rbl_sub('fiveten', '127.0.0.2')
tflags T_RCVD_IN_FIVETEN_SPAM net
header T_RCVD_IN_FIVETEN_DIALUP	rbleval:check_rbl_sub('fiveten', '127.0.0.3')
tflags T_RCVD_IN_FIVETEN_DIALUP net
header T_RCVD_IN_FIVETEN_MULTISTAGE	rbleval:check_rbl_sub('fiveten', '127.0.0.5')
tflags T_RCVD_IN_FIVETEN_MULTISTAGE net
header T_RCVD_IN_FIVETEN_SINGLESTAGE	rbleval:check_rbl_sub('fiveten', '127.0.0.6')
tflags T_RCVD_IN_FIVETEN_SINGLESTAGE net
header T_RCVD_IN_FIVETEN_SPAMSUPPORT	rbleval:check_rbl_sub('fiveten', '127.0.0.7')
tflags T_RCVD_IN_FIVETEN_SPAMSUPPORT net
header T_RCVD_IN_FIVETEN_WEBFORM	rbleval:check_rbl_sub('fiveten', '127.0.0.8')
tflags T_RCVD_IN_FIVETEN_WEBFORM net
header T_RCVD_IN_FIVETEN_MISC	rbleval:check_rbl_sub('fiveten', '127.0.0.9')
tflags T_RCVD_IN_FIVETEN_MISC net
header T_RCVD_IN_FIVETEN_KLEZ	rbleval:check_rbl_sub('fiveten', '127.0.0.10')
tflags T_RCVD_IN_FIVETEN_KLEZ net
header T_RCVD_IN_FIVETEN_TCPA	rbleval:check_rbl_sub('fiveten', '127.0.0.11')
tflags T_RCVD_IN_FIVETEN_TCPA net
header T_RCVD_IN_FIVETEN_FREE	rbleval:check_rbl_sub('fiveten', '127.0.0.12')
tflags T_RCVD_IN_FIVETEN_FREE net
# should probably get notfirsthop etc. to work at any stage
# (how about an optional third argument?)
# Apr 22 2003 jm: eh? what's wrong with notfirsthop?  works for me (tm)
header __FIVE10		rbleval:check_rbl('five10-notfirsthop', 'blackholes.five-ten-sg.com.')
tflags __FIVE10 net
header T_RCVD_IN_FIVETEN_DIALUP_NFH	rbleval:check_rbl_sub('five10-notfirsthop', '127.0.0.3')
tflags T_RCVD_IN_FIVETEN_DIALUP_NFH net

# some additional osirusoft tests, needs more work
# all osirusoft tests maybe a bad idea, osirusoft web site seems defunct
header T_X_OSIRU_OPT_IN		rbleval:check_rbl_sub('osirusoft', '127.0.0.7')
header T_X_OSIRU_OPEN_PROXY	rbleval:check_rbl_sub('osirusoft', '127.0.0.9')
tflags T_X_OSIRU_OPT_IN net
tflags T_X_OSIRU_OPEN_PROXY net
# repeats?
header T_RCVD_IN_OSRELAY	rbleval:check_rbl('osrelay', 'inputs.relays.osirusoft.com.')
tflags T_RCVD_IN_OSRELAY net
header T_RCVD_IN_OSSRC	rbleval:check_rbl('ossrc', 'spamsources.relays.osirusoft.com.')
tflags T_RCVD_IN_OSSRC net
header T_RCVD_IN_OSSOCKS	rbleval:check_rbl('ossocks', 'socks.relays.osirusoft.com.')
tflags T_RCVD_IN_OSSOCKS net

# SORBS
# transfers: both axfr and ixfr available
# url: http://www.dnsbl.sorbs.net/
# pay-to-use: no
# delist: $50 fee for T_RCVD_IN_SORBS_SPAM, others are retested on request (free)
header T_RCVD_IN_SORBS	rbleval:check_rbl('sorbs', 'dnsbl.sorbs.net.')
tflags T_RCVD_IN_SORBS net
header T_RCVD_IN_SORBS_HTTP	rbleval:check_rbl_sub('sorbs', '127.0.0.2')
tflags T_RCVD_IN_SORBS_HTTP net
header T_RCVD_IN_SORBS_MISC	rbleval:check_rbl_sub('sorbs', '127.0.0.3')
tflags T_RCVD_IN_SORBS_MISC net
header T_RCVD_IN_SORBS_SMTP	rbleval:check_rbl_sub('sorbs', '127.0.0.4')
tflags T_RCVD_IN_SORBS_SMTP net
header T_RCVD_IN_SORBS_SOCKS	rbleval:check_rbl_sub('sorbs', '127.0.0.5')
tflags T_RCVD_IN_SORBS_SOCKS net
header T_RCVD_IN_SORBS_SPAM	rbleval:check_rbl_sub('sorbs', '127.0.0.6')
tflags T_RCVD_IN_SORBS_SPAM net
header T_RCVD_IN_SORBS_WEB	rbleval:check_rbl_sub('sorbs', '127.0.0.7')
tflags T_RCVD_IN_SORBS_WEB net

# OK, a whole batch of faked-HELO detection rules.  These work by checking
# for hosts HELOing in a certain domain, but without rDNS matching that.
# these are the most frequently-impersonated headers in my recent corpora...
#
# NOTE: these cannot simply be inverted for a "nice" rule; to do this would
# require checking only the last untrusted line, rather than all of them.
#
header T_FAKE_HELO_YAHOO	eval:check_for_rdns_helo_mismatch("yahoo\.com","yahoo\.com")
header T_FAKE_HELO_NETSCAPE	eval:check_for_rdns_helo_mismatch("netscape\.net","netscape\.net")
header T_FAKE_HELO_YAHOO_CO_UK	eval:check_for_rdns_helo_mismatch("yahoo\.co\.uk","yahoo\.co\.uk")
header T_FAKE_HELO_NETSCAPE_COM	eval:check_for_rdns_helo_mismatch("(?:netscape|netcenter|aol)\.(?:com|net)","netscape\.com")

# 2003-04-11
# bug 1769, possible replacement rules
# replacement for OBFUSCATING_COMMENT (we already have two of these rules,
# consolidate and rename?)
rawbody __T_OBFUSCATING_COMMENT0	/[^\s>]<!--.{0,64}?-->[^\s<]/
meta T_OBFUSCATING_COMMENT0	__T_OBFUSCATING_COMMENT0 && MIME_HTML_ONLY
#
rawbody __T_OBFUSCATING_COMMENT0C	/[^\s>]<!--.{0,64}?-->[^\s<]/
meta T_OBFUSCATING_COMMENT0C	__T_OBFUSCATING_COMMENT0C && __MIME_HTML
#
rawbody __T_OBFUSCATING_COMMENTX	/[^\s>]<![^-].{0,64}?[^-]>[^\s<]/
meta T_OBFUSCATING_COMMENTX	__T_OBFUSCATING_COMMENTX && MIME_HTML_ONLY
#
rawbody __T_OBFUSCATING_COMMENT1	/[a-z]<![^>]*>[a-z]/i
meta T_OBFUSCATING_COMMENT1	__T_OBFUSCATING_COMMENT1 && MIME_HTML_ONLY
#
rawbody __T_OBFUSCATING_COMMENT2	/\w<![^>]*>\w/i
meta T_OBFUSCATING_COMMENT2	__T_OBFUSCATING_COMMENT2 && MIME_HTML_ONLY
#
rawbody __T_OBFUSCATING_COMMENT3	/[^\s>]<![^>]*>[^\s<]/i
meta T_OBFUSCATING_COMMENT3	__T_OBFUSCATING_COMMENT3 && MIME_HTML_ONLY
#
rawbody __T_OBFUSCATING_COMMENT4	/[^\W>]<![^>]*>[^\W<]/i
meta T_OBFUSCATING_COMMENT4	__T_OBFUSCATING_COMMENT4 && MIME_HTML_ONLY
#
rawbody __T_OBFUSCATING_COMMENT5	/\b(\w*)<![^>]{0,64}>\w{4}/i
meta T_OBFUSCATING_COMMENT5	__T_OBFUSCATING_COMMENT5 && MIME_HTML_ONLY
#
rawbody __T_OBFUSCATING_COMMENT6	/\b(\S*)<![^>]{0,64}>\S{4}/i
meta T_OBFUSCATING_COMMENT6	__T_OBFUSCATING_COMMENT6 && MIME_HTML_ONLY
#
rawbody __T_OBFUSCATING_COMMENT1B	/[a-z]<![^>]*>[a-z]/i
meta T_OBFUSCATING_COMMENT1B	__T_OBFUSCATING_COMMENT1B && HTML_MESSAGE
#
rawbody __T_OBFUSCATING_COMMENT2B	/\w<![^>]*>\w/i
meta T_OBFUSCATING_COMMENT2B	__T_OBFUSCATING_COMMENT2B && HTML_MESSAGE
#
rawbody __T_OBFUSCATING_COMMENT4B	/[^\W>]<![^>]*>[^\W<]/i
meta T_OBFUSCATING_COMMENT4B	__T_OBFUSCATING_COMMENT4B && HTML_MESSAGE
#
rawbody __T_OBFUSCATING_COMMENT5B	/\b(\w*)<![^>]{0,64}>\w{4}/i
meta T_OBFUSCATING_COMMENT5B	__T_OBFUSCATING_COMMENT5B && HTML_MESSAGE
#
rawbody __T_OBFUSCATING_COMMENT1C	/[a-z]<![^>]*>[a-z]/i
meta T_OBFUSCATING_COMMENT1C	__T_OBFUSCATING_COMMENT1C && __MIME_HTML
#
rawbody __T_OBFUSCATING_COMMENT2C	/\w<![^>]*>\w/i
meta T_OBFUSCATING_COMMENT2C	__T_OBFUSCATING_COMMENT2C && __MIME_HTML
#
rawbody __T_OBFUSCATING_COMMENT4C	/[^\W>]<![^>]*>[^\W<]/i
meta T_OBFUSCATING_COMMENT4C	__T_OBFUSCATING_COMMENT4C && __MIME_HTML
#
rawbody __T_OBFUSCATING_COMMENT5C	/\b(\w*)<![^>]{0,64}>\w{4}/i
meta T_OBFUSCATING_COMMENT5C	__T_OBFUSCATING_COMMENT5C && __MIME_HTML

# more for bug 1769
header T_GAPPY_SUBJECT		Subject =~ /\b(?:[a-z][\W]{1,3}){4,}/i
body T_SEE_FOR_YOURSELF		/See (?:for|it|it for) yourself\b/i

uri T_YAHOO_REDIRECTOR		/^http:\/\/rd\.yahoo\.com/i
describe T_YAHOO_REDIRECTOR	Uses commonly-spammed redirector URL

# case-insenstive version
uri T_USERPASS			m{https?://[^/\s]+?(?::[^/\s]+?)?\@}i

# bugs 1416 and 1769, possible replacements for AS_SEEN_ON
body T_AS_SEEN_ON_1		/seen on\b\s*(?:T\.?V\.?|ABC|NBC|CBS|CNN|Oprah|USA Today|48 Hours|New York Times|\w+\s+T\.?V\.?|:)/i
body T_AS_SEEN_ON_2		/seen [oi]n\b\s*(?:TV|ABC|NBC|CBS|CNN|Oprah|USA Today|48 Hours|(The )?New York Times|\w+\s+TV|:)/i
body T_AS_SEEN_ON_3		/seen [oi]n\b\s*(?:T\.?V\.?|ABC|NBC|CBS|CNN|Oprah|USA Today|48 Hours|(The )?New York Times|\w+\s+T\.?V\.?|:)/i
