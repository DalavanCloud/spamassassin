# SpamAssassin rules file: CVS rules under test
#
# This file is a placeholder for rules "under probation", ie. checked into
# CVS for testing. It should not be distributed; if the rules have good
# stats after a mass-check or two, then fold them into the distributed
# rules files.
#
# I suggest adding a prefix to rules in this file, "T_" -- this
# helps identify probationary rules in test output.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of either the Artistic License or the GNU General
# Public License as published by the Free Software Foundation; either
# version 1 of the License, or (at your option) any later version.
#
# See the file "License" in the top level of the SpamAssassin source
# distribution for more details.
#
###########################################################################

header T_MSGID_SPAMSIGN_99X9XX99	MESSAGEID =~ /^<\d\d\d\d\d\d[a-z]\d[a-z][a-z]\d\d\$[a-z][a-z][a-z]\d\d\d\d\d\$\d\d\d\d\d\d\d\d\@/
describe T_MSGID_SPAMSIGN_99X9XX99	Message-Id generated by spam tool (99x9xx99 variant)

header T_RCVD_6_CAPS_ESMTP_ID		Received =~ /from \[\d+\.\d+\.\d+\.\d+\] by\s+\S+\s+with\s+ESMTP\s+id\s+[A-Z]{6}\;/
describe T_RCVD_6_CAPS_ESMTP_ID		Received header forged by spam tool (6-caps ESMTP ID variant)

header T_DATE_SPAMWARE_Y2K		Date =~ /^[A-Z][a-z]{2}, \d\d [A-Z][a-z]{2} [0-6]\d \d\d:\d\d:\d\d [A-Z]{3}$/
describe T_DATE_SPAMWARE_Y2K		Date header uses unusual Y2K formatting

# quinlan: I worked at a company that used CorporateTime which very annoyingly
# always used an ISO-8859-1 encoded header even when the Subject: did not have
# a non-ASCII character.  I think other false positives are likely due to
# similarly broken software.
# jm: I notice that all my FPs are gw'd thru IMS; let's try that.
header __SUBJ_BASE64			Subject:raw =~ /=\?[^\?]+\?B\?/
header __SUBJ_QP			Subject:raw =~ /=\?[^\?]+\?Q\?/
header __SUBJ_HAS_NON_ASCII		Subject =~ /[\x00-\x06\x0e-\x1f\x80-\xff]/
header __RCVD_IMS			Received =~ /Internet\s+Mail\s+Service/
meta T_UNNECESSARY_SUBJ_B64_ENCODING	(__SUBJ_BASE64 && !__SUBJ_HAS_NON_ASCII && !__RCVD_IMS)
meta T_UNNECESSARY_SUBJ_QP_ENCODING	(__SUBJ_QP && !__SUBJ_HAS_NON_ASCII && !__RCVD_IMS)
describe T_UNNECESSARY_SUBJ_B64_ENCODING Subject encoded to hide from filters (B64)
describe T_UNNECESSARY_SUBJ_QP_ENCODING Subject encoded to hide from filters (QP)

# A new spamware creates invalid Date stamps, using printf ("%d:%d:%d").
# Catch it here (assuming one of the above doesn't catch it anyway).
header __POSS_INVALID_DATE_TIME	Date =~ / \d{1,2}:\d{1,2}:\d{1,2} /
header __DATE_TIME_VALID	Date =~ / \d\d:\d\d:\d\d /
# this should be the same thing (just in one expression instead of two,
# so it's fewer rules and a touch faster, also uses \s instead of ' '
# to allow tabs and other whitespace)
header __DATE_TIME_INVALID	Date =~ /\s(?!\d\d:\d\d:\d\d)\d{1,2}:\d{1,2}:\d{1,2}\s/
header __XM_BAD_DATE_MUAS	X-Mailer =~ /(?:FoxMail|EMUmail|TFS Secure Messaging|sendEmail|EarthLink MailBox \d\.\d)/i
meta T_INVALID_DATE_HMS		(__POSS_INVALID_DATE_TIME && !__DATE_TIME_VALID && !__XM_BAD_DATE_MUAS)
meta T_INVALID_DATE_HMS_2	(__DATE_TIME_INVALID && !__XM_BAD_DATE_MUAS)
describe T_INVALID_DATE_HMS	Date header does not use valid HH:MM:SS formatting

# possible replacement for INVALID_DATE.
# rfc822:                       date-time =          [ day-of-week "," ]         (day / obs-day)                 month                           (year / obs-year)   hour ":" minute [ ":" second ]       (zone / obs-zone)          [ comment ]
header __INVALID_DATE		Date !~ /^\s*(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), )?[0-3 ]?[0-9] (?:Jan|Feb|Ma[ry]|Apr|Ju[nl]|Aug|Sep|Oct|Nov|Dec) (?:19|20)?[0-9]{2} [0-2][0-9](?:\:[0-5][0-9]){1,2} (?:[+-][0-9]{4}|UT|[A-Z]{2,3}T)(?:\s+\(.*\))?\s*$/ [if-unset: Mon, 24 Feb 2003 09:30 +0100 (mss)]
header __XM_BAD_DATE_MUAS	X-Mailer =~ /(?:FoxMail|EMUmail|TFS Secure Messaging|sendEmail|EarthLink MailBox \d\.\d)/i
header __XM_FOXMAIL		X-Mailer =~ /FoxMail/
meta T_INVALID_DATE_2		(__INVALID_DATE && !__XM_BAD_DATE_MUAS)
describe T_INVALID_DATE_2	Invalid Date: header (not RFC 2822)

# Wierd.  Can only assume this is caused by PEBKAC on the sending side...
meta T_HTML_WITHOUT_HTML_1	(MIME_HTML_ONLY && !HTML_MESSAGE)
describe T_HTML_WITHOUT_HTML_1	Claims to be HTML, but there is no HTML text
# uses __MIME_HTML test from below and eval in EvalTests.pm (at least for now)
meta T_HTML_WITHOUT_HTML_2	(__MIME_HTML && !HTML_MESSAGE)
describe T_HTML_WITHOUT_HTML_2	Claims to be HTML, but there is no HTML text

# Jul  3 2002 jm: modified PENIS_ENLARGE patterns: removed "add", replaced with "inches",
# because that seems to be another typical word in the pattern.
# Feb 11 2003 jm: removed "PP" from pattern, since "pp. 234-237" is std usage
# in academic circles.  I don't think the hit-rate will be affected. ;)
# bug: http://www.hughes-family.org/bugzilla/show_bug.cgi?id=1471
body T_PENIS_ENLARGE		/\b(?:enlarge|increase|grow|lengthen|larger\b|bigger\b|longer\b|thicker\b|\binches\b).{0,50}\b(?:penis|male organ|pee[ -]?pee|dick|sc?hlong|wh?anger|breast)/i
describe T_PENIS_ENLARGE		Information on getting a larger penis or breasts
body T_PENIS_ENLARGE2		/\b(?:penis|male organ|pee[ -]?pee|dick|sc?hlong|wh?anger|breast).{0,50}\b(?:enlarge|increase|grow|lengthen|larger\b|bigger\b|longer\b|thicker\b|\binches\b)/i
describe T_PENIS_ENLARGE2		Information on getting a larger penis or breasts (2)

# Feb 18 2003 jm: another Nigerian scam
body T_NIGERIAN_SCAM_VIRTUE	/by virtue of its nature as being utterly confidential/i
describe T_NIGERIAN_SCAM_VIRTUE	Contains Nigerian scam text (virtue of its nature)

# Feb 18 2003 jm: try another combo.  I'm not sure __NIGERIAN_HONESTY is req'd.
body __NIGERIAN_CODE_CONDUCT		/\bcode of conduct\b/i
body __NIGERIAN_CIV_SERVICE		/\bcivil service\b/i
body __NIGERIAN_TOP_SECRET		/\btop secret\b/i
body __NIGERIAN_STRICT_CONF		/\b(?:strictest confidence|utmost secrecy)\b/i
body __NIGERIAN_HONESTY		/\btransparent honesty\b/i
body __NIGERIAN_DISBURSE		/\bdisburs/i
meta T_NIGERIAN_BODY_GOVT_6	((__NIGERIAN_CODE_CONDUCT + __NIGERIAN_CIV_SERVICE + __NIGERIAN_HONESTY + __NIGERIAN_TOP_SECRET + __NIGERIAN_STRICT_CONF + __NIGERIAN_DISBURSE) >= 6)
meta T_NIGERIAN_BODY_GOVT_5	((__NIGERIAN_CODE_CONDUCT + __NIGERIAN_CIV_SERVICE + __NIGERIAN_HONESTY + __NIGERIAN_TOP_SECRET + __NIGERIAN_STRICT_CONF + __NIGERIAN_DISBURSE) >= 5)
meta T_NIGERIAN_BODY_GOVT_4	((__NIGERIAN_CODE_CONDUCT + __NIGERIAN_CIV_SERVICE + __NIGERIAN_HONESTY + __NIGERIAN_TOP_SECRET + __NIGERIAN_STRICT_CONF + __NIGERIAN_DISBURSE) >= 4)
meta T_NIGERIAN_BODY_GOVT_3	((__NIGERIAN_CODE_CONDUCT + __NIGERIAN_CIV_SERVICE + __NIGERIAN_HONESTY + __NIGERIAN_TOP_SECRET + __NIGERIAN_STRICT_CONF + __NIGERIAN_DISBURSE) >= 3)

# 2003-02-23: quinlan
# some useful meta rule sub-elements
body __MIME_HTML		eval:check_for_mime_html()
header __CTYPE_HTML		Content-Type =~ /text\/html/i

# 2003-02-23: quinlan
# bug 1376: HTML without <!DOCTYPE> from mailers that always use <!DOCTYPE>
#
# Note: some variations of this rule actually perform better, but they all
# overlap 96-100% with MIME_HTML_ONLY whereas this variation adds real value
# and has a high hit rate.
body __HTML_TAG_EXISTS_DOCTYPE	eval:html_tag_exists('!doctype')
meta T_MIME_HTML_NO_DOCTYPE	(__MIME_HTML && !__HTML_TAG_EXISTS_DOCTYPE)

# 2003-02-23: quinlan
# bug 1533: new Received: header forgery tests using HELO
header T_FORGED_RCVD_HELO	eval:check_for_forged_received_helo()
header T_RCVD_NUMERIC_HELO	Received =~ /helo[= ]\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/i

# 2003-02-25: quinlan
# Whee... more HTML tests!
# Note: these use __MIME_HTML, we might need to exempt MIME attachments from
# that rule
header __ANY_OUTLOOK_MUA	X-Mailer =~ /^Microsoft Outlook\b/
header __ANY_IMS_MUA		X-Mailer =~ /^Internet Mail Service\b/
header __ANY_AOL_MUA		X-Mailer =~ /^AOL\b/
header __ANY_QUALCOMM_MUA	X-Mailer =~ /^QUALCOMM\b/
body __TAG_EXISTS_BODY		eval:html_tag_exists('body')
body __TAG_EXISTS_DIV		eval:html_tag_exists('div')
body __TAG_EXISTS_HEAD		eval:html_tag_exists('head')
body __TAG_EXISTS_HTML		eval:html_tag_exists('html')
body __TAG_EXISTS_META		eval:html_tag_exists('meta')
meta T_HTML_FAKED_OUTLOOK	(__ANY_OUTLOOK_MUA && __MIME_HTML && !(__TAG_EXISTS_BODY && __TAG_EXISTS_DIV && __TAG_EXISTS_HEAD && __TAG_EXISTS_HTML && __TAG_EXISTS_META))
meta T_HTML_FAKED_IMS		(__ANY_IMS_MUA && __MIME_HTML && !(__TAG_EXISTS_BODY && __TAG_EXISTS_HEAD && __TAG_EXISTS_HTML && __TAG_EXISTS_META))
meta T_HTML_FAKED_AOL		(__ANY_AOL_MUA && __MIME_HTML && !__TAG_EXISTS_HTML)
meta T_HTML_FAKED_QUALCOMM	(__ANY_QUALCOMM_MUA && __MIME_HTML && !__TAG_EXISTS_HTML)

# 2003-03-06: quinlan
# bug 1261
rawbody T_BASE64_ENC_TEXT		eval:check_for_mime('t_mime_base64_encoded_text')

# MIME Content-Transfer-Encoding control rules
rawbody T_MIME_BASE64			eval:check_for_mime('t_mime_base64_count')
rawbody T_MIME_QP			eval:check_for_mime('t_mime_qp_count')

# 2003-03-06: quinlan
rawbody T_MIME_BASE64_BLANKS		eval:check_for_mime('t_mime_base64_blanks')
rawbody T_MIME_BASE64_ILLEGAL		eval:check_for_mime('t_mime_base64_illegal')
rawbody T_MIME_BASE64_ISO_8859		eval:check_for_mime('t_mime_base64_iso_8859')
rawbody T_MIME_BASE64_LATIN		eval:check_for_mime('t_mime_base64_latin')
rawbody T_MIME_BASE64_SHORT_LINES	eval:check_for_mime('t_mime_base64_short_lines')
rawbody T_MIME_BASE64_WITHOUT_NAME	eval:check_for_mime('t_mime_base64_without_name')
rawbody T_MIME_QP_INLINE_NO_CHARSET	eval:check_for_mime('t_mime_qp_inline_no_charset')

# 2003-02-28: quinlan
# Note: I'll probably rename these later if they get added.
header T_MSG_ID_ADDED_BY_MTA_SHORT	eval:mta_added_message_id('short')
header T_MSG_ID_ADDED_BY_MTA_LATER	eval:mta_added_message_id('later')
header T_MSG_ID_ADDED_BY_MTA_BACKUP	eval:mta_added_message_id('backup')
tflags T_MSG_ID_ADDED_BY_MTA_BACKUP	net

# 2003-03-02: quinlan
header T_NO_DNS_FOR_RECIPS_ONE		eval:check_for_recips_dns('1','2')
header T_NO_DNS_FOR_RECIPS_TWO		eval:check_for_recips_dns('2','3')
header T_NO_DNS_FOR_RECIPS_MANY		eval:check_for_recips_dns('3','undef')
tflags T_NO_DNS_FOR_RECIPS_ONE		net
tflags T_NO_DNS_FOR_RECIPS_TWO		net
tflags T_NO_DNS_FOR_RECIPS_MANY		net

# 2003-03-03: quinlan
# some rule speed-ups (idea from Matt Sergeant)
body T_PORN_15		/(?=[celstwvy])(?:college|eating|licking|spears|tight|wet|shaved|voyeur|young|teen(?:age)?).{0,16}pussy/i
body T_OFFERS_ETC	/\b(?:(?=[cefmpruw])(?:wish|want|unsub|reward|receive|recurring|remove|permission|partner|further|future|e.?mail|continue|click).{0,64}){2}.{0,8}(?=[cdos])(?:special|offer|coupon|discount)s?\b/i
body T_HOT_NASTY	/\b(?=[dehklnswxy])(?:horny|nasty|hot|wild|young|horniest|nastiest|hottest|wildest|youngest|naughty|dirtiest|slutty|kinky|lusty|extreme|xxx+)\b.{0,9}\b(?=[acfghilmpsvx])(?:virgin|asian|cheerleader|sex|selection|fuck|fucking|anal\b|lesb(?:ian|o)|incest|chicks?|pics|movies|video|gay\b|porn|h[a\@]rdcore|schoolgirls|amateur|slut|adult|cum|xxx|sites?|hotties|shit)/i
body T_CELEBRITY_PORN	/\bceleb(?:rity|rities|s).{0,15}(?=[cenps])(?:sex|porn|pics|caught|nude|exposed|content)|\b(?=[fhns])(?:steamy|hot|nude|shocking|free|h[a\@]rdcore) celeb(?:rity|rities|s)/i
body T_VACATION_SCAM	/\b(?=[dfms])(?:free|mini-?|dream|special).{0,10}vacation|vacation (?=[fgop])(?:offer|promotion|package|for two|getaway)/i
body T_HAIR_LOSS	/\b(?=[gnrt])(?:thinn?ing|restore|grow|new) hair|\bhair loss/i

# bug 1416, possible replacement for AS_SEEN_ON
body     T_AS_SEEN_ON             /seen on\b\s*(?:T\.?V\.?|ABC|NBC|CBS|CNN|Oprah|USA Today|48 Hours|New York Times|\w+\s+T\.?V\.?|:)/i

# bug 1380
meta T_FAKED_OUTLOOK		(__OUTLOOK_MUA && __MIME_HTML_ONLY)
#describe FAKED_OUTLOOK		Outlook can't send HTML message only
#lang fr describe FAKED_OUTLOOK	Outlook ne sait pas envoyer de mail en HTML pur sans texte brut.
meta T_FAKED_AOL		(__AOL_MUA && __MIME_HTML_ONLY)
meta T_FAKED_THEBAT		(__THEBAT_MUA && __MIME_HTML_ONLY)
meta T_FAKED_IMS		(__IMS_MUA && __MIME_HTML_ONLY)

# 2003-03-02: quinlan
# double REMOVE tests
body T_REMOVE_REMOVAL_16	/remov(?:e|al).{0,16}remov(?:e|al)/i
body T_REMOVE_REMOVAL_32	/remov(?:e|al).{0,32}remov(?:e|al)/i
body T_REMOVE_REMOVAL_64	/remov(?:e|al).{0,64}remov(?:e|al)/i
rawbody T_REMOVE_REMOVAL_16R	/remov(?:e|al).{0,16}remov(?:e|al)/i
rawbody T_REMOVE_REMOVAL_32R	/remov(?:e|al).{0,32}remov(?:e|al)/i
rawbody T_REMOVE_REMOVAL_64R	/remov(?:e|al).{0,64}remov(?:e|al)/i

# 2003-03-04: quinlan (my final attempt at this idea)
# bug 821: test for "good" RFC2369 headers (was: reverse SUSPECT_LIST_HEADERS)
#
# good genomes             non-good genomes
#    S/O HAM-SPAM HUSPOA      S/O HAM-SPAM HUSPOA
# ------ -------- ------   ------ -------- ------
#   0.00       40 111100    19.12       84 010000
#   0.00       71 111110    44.18     2132 000000
#   0.00       96 011011   100.00       -1 011010
#   1.21     1372 111101   100.00       -4 111000
# (Note: above S/O ratios are not adjusted to be a 50/50 mix)
#
# quinlan results:
# OVERALL%   SPAM%     HAM%     S/O    RANK   SCORE  NAME
#   20076     8138    11938    0.405   0.00    0.00  (all messages)
# 100.000  40.5360  59.4640    0.405   0.00    0.00  (all messages as %)
#   8.029   0.2089  13.3607    0.015   0.90   -0.01  T_GOOD_LIST_HEADERS
header	__LIST_HELP		exists:List-Help
header	__LIST_UNSUBSCRIBE	exists:List-Unsubscribe
header	__LIST_SUBSCRIBE	exists:List-Subscribe
header	__LIST_POST		exists:List-Post
header	__LIST_OWNER		exists:List-Owner
header	__LIST_ARCHIVE		exists:List-Archive
meta T_GOOD_LIST_HEADERS	(__LIST_UNSUBSCRIBE && __LIST_SUBSCRIBE && ((__LIST_HELP && __LIST_POST && !(__LIST_OWNER && __LIST_ARCHIVE)) || (!__LIST_HELP && !__LIST_POST && __LIST_OWNER && __LIST_ARCHIVE)))
tflags T_GOOD_LIST_HEADERS	nice

# bug 1438, possible replacement for the current HOTMAIL_FOOTER* rules
# rename current HOTMAIL_FOOTER# to __HOTMAIL_FOOTER#, and change these too.
meta T_ABUSED_HOTMAIL_FOOTER	HOTMAIL_FOOTER1 + HOTMAIL_FOOTER2 + HOTMAIL_FOOTER3 + HOTMAIL_FOOTER4 + HOTMAIL_FOOTER5 > 1
meta T_HOTMAIL_FOOTER1		HOTMAIL_FOOTER1 && !T_ABUSED_HOTMAIL_FOOTER
meta T_HOTMAIL_FOOTER2		HOTMAIL_FOOTER2 && !T_ABUSED_HOTMAIL_FOOTER
meta T_HOTMAIL_FOOTER3		HOTMAIL_FOOTER3 && !T_ABUSED_HOTMAIL_FOOTER
meta T_HOTMAIL_FOOTER4		HOTMAIL_FOOTER4 && !T_ABUSED_HOTMAIL_FOOTER
meta T_HOTMAIL_FOOTER5		HOTMAIL_FOOTER5 && !T_ABUSED_HOTMAIL_FOOTER

# bug 1406, possible replacement for URI_IS_POUND
uri T_URI_IS_POUND               /^\#$/  
uri T_URI_ENDS_IN_POUND        /^[^?]+\#$/ 

# bug 1336
header T_TO_FILENAME           To =~ /^<C:\\/
#describe TO_FILENAME         "To" header contains a filename

# bug 1394, possible replacement for ORDER_NOW
body T_ORDER_NOW                  /\border (?:now|soon|fast|quickly|while|today)\b/i

# Matt Cline
# 0.206   0.2631   0.0000    1.000   0.89    0.01  T_OBFUSCATING_COMMENT2
rawbody  __OBFUSCATING_COMMENT2 /[^\s>]<![^-].{0,64}?[^-]>[^\s<]/
meta     T_OBFUSCATING_COMMENT2 __OBFUSCATING_COMMENT2 && MIME_HTML_ONLY
describe T_OBFUSCATING_COMMENT2 HTML comments which obfuscate text (2)

# Matt Cline
uri      T_HTTP_ENTITIES_HOST m{https?://[^\s\">/]*\&\#[\da-f]+}i
describe T_HTTP_ENTITIES_HOST URI obscured with character entities

uri      T_HTTP_EXCESSIVE_ENTITIES m{^https?://\S*\&\#(?:0?3[0-9]|0?[46][1-9a-f]|0?[57][\da])}i
describe T_HTTP_EXCESSIVE_ENTITIES Completely unnecessary %-escapes inside a URL

body T_HTML_COMMENT_BLANK	eval:html_test('comment_blank')
body T_HTML_COMMENT_NO_ALPHANUM	eval:html_test('comment_no_alphanum')

# RFC2822 violations
header T_HEADER_COUNT_BAD_DATE		eval:check_header_count_range('Date','2','999')
header T_HEADER_COUNT_BAD_FROM		eval:check_header_count_range('From','2','999')
header T_HEADER_COUNT_BAD_SENDER	eval:check_header_count_range('Sender','2','999')
header T_HEADER_COUNT_BAD_REPLYTO	eval:check_header_count_range('Reply-To','2','999')
header T_HEADER_COUNT_BAD_MESSAGEID	eval:check_header_count_range('Message-Id','2','999')
header T_HEADER_COUNT_BAD_INREPLYTO	eval:check_header_count_range('In-Reply-To','2','999')
header T_HEADER_COUNT_BAD_REFERENCES	eval:check_header_count_range('References','2','999')
header T_HEADER_COUNT_BAD_SUBJECT	eval:check_header_count_range('Subject','2','999')
# multiple To/Cc/Bcc headers are obsolete in RFC 2822, but they are still
# frequently used and RFC 2822 says they should still be supported.  Cc:
# generates many false positives.
header T_HEADER_COUNT_BAD_TO		eval:check_header_count_range('To','2','999')
header T_HEADER_COUNT_BAD_CC		eval:check_header_count_range('Cc','2','999')
header T_HEADER_COUNT_BAD_BCC		eval:check_header_count_range('Bcc','2','999')
# There doesn't seem to be a RFC restriction, but these should only show up
# once in ham
header T_HEADER_COUNT_BAD_CTYPE		eval:check_header_count_range('Content-Type','2','999')
header T_HEADER_COUNT_BAD_CTE		eval:check_header_count_range('Content-Transfer-Encoding','2','999')

body T_BLANK_LINE_RATIO_01_00_02	eval:check_blank_line_ratio('0','2')
body T_BLANK_LINE_RATIO_01_02_04	eval:check_blank_line_ratio('2','4')
body T_BLANK_LINE_RATIO_01_04_06	eval:check_blank_line_ratio('4','6')
body T_BLANK_LINE_RATIO_01_06_08	eval:check_blank_line_ratio('6','8')
body T_BLANK_LINE_RATIO_01_08_10	eval:check_blank_line_ratio('8','10')
body T_BLANK_LINE_RATIO_01_10_20	eval:check_blank_line_ratio('10','20')
body T_BLANK_LINE_RATIO_01_20_30	eval:check_blank_line_ratio('20','30')
body T_BLANK_LINE_RATIO_01_30_40	eval:check_blank_line_ratio('30','40')
body T_BLANK_LINE_RATIO_01_40_50	eval:check_blank_line_ratio('40','50')
body T_BLANK_LINE_RATIO_01_50_60	eval:check_blank_line_ratio('50','60')
body T_BLANK_LINE_RATIO_01_60_70	eval:check_blank_line_ratio('60','70')
body T_BLANK_LINE_RATIO_01_70_80	eval:check_blank_line_ratio('70','80')
body T_BLANK_LINE_RATIO_01_80_90	eval:check_blank_line_ratio('80','90')
body T_BLANK_LINE_RATIO_01_90_92	eval:check_blank_line_ratio('90','92')
body T_BLANK_LINE_RATIO_01_92_94	eval:check_blank_line_ratio('92','94')
body T_BLANK_LINE_RATIO_01_94_96	eval:check_blank_line_ratio('94','96')
body T_BLANK_LINE_RATIO_01_96_98	eval:check_blank_line_ratio('96','98')
body T_BLANK_LINE_RATIO_01_98_100	eval:check_blank_line_ratio('98','100')

body T_BLANK_LINE_RATIO_04_00_02	eval:check_blank_line_ratio('0','2','4')
body T_BLANK_LINE_RATIO_04_02_04	eval:check_blank_line_ratio('2','4','4')
body T_BLANK_LINE_RATIO_04_04_06	eval:check_blank_line_ratio('4','6','4')
body T_BLANK_LINE_RATIO_04_06_08	eval:check_blank_line_ratio('6','8','4')
body T_BLANK_LINE_RATIO_04_08_10	eval:check_blank_line_ratio('8','10','4')
body T_BLANK_LINE_RATIO_04_10_20	eval:check_blank_line_ratio('10','20','4')
body T_BLANK_LINE_RATIO_04_20_30	eval:check_blank_line_ratio('20','30','4')
body T_BLANK_LINE_RATIO_04_30_40	eval:check_blank_line_ratio('30','40','4')
body T_BLANK_LINE_RATIO_04_40_50	eval:check_blank_line_ratio('40','50','4')
body T_BLANK_LINE_RATIO_04_50_60	eval:check_blank_line_ratio('50','60','4')
body T_BLANK_LINE_RATIO_04_60_70	eval:check_blank_line_ratio('60','70','4')
body T_BLANK_LINE_RATIO_04_70_80	eval:check_blank_line_ratio('70','80','4')
body T_BLANK_LINE_RATIO_04_80_90	eval:check_blank_line_ratio('80','90','4')
body T_BLANK_LINE_RATIO_04_90_92	eval:check_blank_line_ratio('90','92','4')
body T_BLANK_LINE_RATIO_04_92_94	eval:check_blank_line_ratio('92','94','4')
body T_BLANK_LINE_RATIO_04_94_96	eval:check_blank_line_ratio('94','96','4')
body T_BLANK_LINE_RATIO_04_96_98	eval:check_blank_line_ratio('96','98','4')
body T_BLANK_LINE_RATIO_04_98_100	eval:check_blank_line_ratio('98','100','4')

body T_BLANK_LINE_RATIO_08_00_02	eval:check_blank_line_ratio('0','2','8')
body T_BLANK_LINE_RATIO_08_02_04	eval:check_blank_line_ratio('2','4','8')
body T_BLANK_LINE_RATIO_08_04_06	eval:check_blank_line_ratio('4','6','8')
body T_BLANK_LINE_RATIO_08_06_08	eval:check_blank_line_ratio('6','8','8')
body T_BLANK_LINE_RATIO_08_08_10	eval:check_blank_line_ratio('8','10','8')
body T_BLANK_LINE_RATIO_08_10_20	eval:check_blank_line_ratio('10','20','8')
body T_BLANK_LINE_RATIO_08_20_30	eval:check_blank_line_ratio('20','30','8')
body T_BLANK_LINE_RATIO_08_30_40	eval:check_blank_line_ratio('30','40','8')
body T_BLANK_LINE_RATIO_08_40_50	eval:check_blank_line_ratio('40','50','8')
body T_BLANK_LINE_RATIO_08_50_60	eval:check_blank_line_ratio('50','60','8')
body T_BLANK_LINE_RATIO_08_60_70	eval:check_blank_line_ratio('60','70','8')
body T_BLANK_LINE_RATIO_08_70_80	eval:check_blank_line_ratio('70','80','8')
body T_BLANK_LINE_RATIO_08_80_90	eval:check_blank_line_ratio('80','90','8')
body T_BLANK_LINE_RATIO_08_90_92	eval:check_blank_line_ratio('90','92','8')
body T_BLANK_LINE_RATIO_08_92_94	eval:check_blank_line_ratio('92','94','8')
body T_BLANK_LINE_RATIO_08_94_96	eval:check_blank_line_ratio('94','96','8')
body T_BLANK_LINE_RATIO_08_96_98	eval:check_blank_line_ratio('96','98','8')
body T_BLANK_LINE_RATIO_08_98_100	eval:check_blank_line_ratio('98','100','8')

body T_BLANK_LINE_RATIO_20_00_02	eval:check_blank_line_ratio('0','2','20')
body T_BLANK_LINE_RATIO_20_02_04	eval:check_blank_line_ratio('2','4','20')
body T_BLANK_LINE_RATIO_20_04_06	eval:check_blank_line_ratio('4','6','20')
body T_BLANK_LINE_RATIO_20_06_08	eval:check_blank_line_ratio('6','8','20')
body T_BLANK_LINE_RATIO_20_08_10	eval:check_blank_line_ratio('8','10','20')
body T_BLANK_LINE_RATIO_20_10_20	eval:check_blank_line_ratio('10','20','20')
body T_BLANK_LINE_RATIO_20_20_30	eval:check_blank_line_ratio('20','30','20')
body T_BLANK_LINE_RATIO_20_30_40	eval:check_blank_line_ratio('30','40','20')
body T_BLANK_LINE_RATIO_20_40_50	eval:check_blank_line_ratio('40','50','20')
body T_BLANK_LINE_RATIO_20_50_60	eval:check_blank_line_ratio('50','60','20')
body T_BLANK_LINE_RATIO_20_60_70	eval:check_blank_line_ratio('60','70','20')
body T_BLANK_LINE_RATIO_20_70_80	eval:check_blank_line_ratio('70','80','20')
body T_BLANK_LINE_RATIO_20_80_90	eval:check_blank_line_ratio('80','90','20')
body T_BLANK_LINE_RATIO_20_90_92	eval:check_blank_line_ratio('90','92','20')
body T_BLANK_LINE_RATIO_20_92_94	eval:check_blank_line_ratio('92','94','20')
body T_BLANK_LINE_RATIO_20_94_96	eval:check_blank_line_ratio('94','96','20')
body T_BLANK_LINE_RATIO_20_96_98	eval:check_blank_line_ratio('96','98','20')
body T_BLANK_LINE_RATIO_20_98_100	eval:check_blank_line_ratio('98','100','20')

###########################################################################

# tvd - 2003.02.26, trying to strengthen the anti-ratware rules

meta T_FORGED_USER_AGENT	( __USER_AGENT_PINE + __T_USER_AGENT_MUTT + __T_USER_AGENT_MOZILLA_UA + __T_USER_AGENT_MOZILLA_XM + __T_USER_AGENT_MACOE + __T_USER_AGENT_ENTOURAGE + __T_USER_AGENT_KMAIL + __T_USER_AGENT_IMP + __USER_AGENT_TONLINE + __USER_AGENT_APPLEMAIL + __USER_AGENT_GNUS_UA + __USER_AGENT_GNUS_XM + __USER_AGENT_VM + __T_USER_AGENT_MSN + __T_USER_AGENT_FORTE + __USER_AGENT_XIMIAN > 1 )

meta T_USER_AGENT                        ( __USER_AGENT && !T_FORGED_USER_AGENT && !__USER_AGENT_PINE && !__T_USER_AGENT_MUTT && !__T_USER_AGENT_MOZILLA_UA && !__T_USER_AGENT_MOZILLA_XM && !__T_USER_AGENT_MACOE && !__T_USER_AGENT_ENTOURAGE && !__T_USER_AGENT_KMAIL && !__T_USER_AGENT_IMP && !__USER_AGENT_TONLINE && !__USER_AGENT_APPLEMAIL && !__USER_AGENT_GNUS_UA && !__USER_AGENT_GNUS_XM && !__USER_AGENT_VM && !__T_USER_AGENT_MSN && !__T_USER_AGENT_FORTE && !__USER_AGENT_XIMIAN )

header __MSGID_PINE	Message-Id =~ /^<Pine\.[A-Z]{3}\.\d\.[0-9A-Z]+\./
meta __USER_AGENT_PINE	__MSGID_PINE && !MIME_HTML_ONLY
meta T_USER_AGENT_PINE		__USER_AGENT_PINE && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_PINE	__MSGID_PINE && !__USER_AGENT_PINE

# From 0.93.2 - 1.2.5.1, message-id is:
#  snprintf (buf, sizeof (buf), "<%d%02d%02d%02d%02d%02d.%c%d@%s>",
#            tm->tm_year + 1900, tm->tm_mon + 1, tm->tm_mday, tm->tm_hour,
#            tm->tm_min, tm->tm_sec, MsgIdPfx, getpid (), fqdn);
#  MsgIdPfx = (MsgIdPfx == 'Z') ? 'A' : MsgIdPfx + 1;
# The code from mutt 1.4 is adds a 'G' for some reason:
#  snprintf (buf, sizeof (buf), "<%d%02d%02d%02d%02d%02d.G%c%d@%s>",
meta __T_USER_AGENT_MUTT	__USER_AGENT_MUTT && __VALID_MUTT_MSGID && !MIME_HTML_ONLY
meta T_USER_AGENT_MUTT		__T_USER_AGENT_MUTT && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_MUTT		__USER_AGENT_MUTT && !__UNUSABLE_MSGID && !__T_USER_AGENT_MUTT

header __USER_AGENT_MOZILLA_UA	User-Agent =~ /^Mozilla\/5\.\d+ \(.*\) Gecko\/\d{8}(?: |$)/
header __MSGID_MOZILLA_UA	Message-Id =~ /^<[0-9A-F]{8}\.\d+\@\S+>$/
meta __T_USER_AGENT_MOZILLA_UA	__USER_AGENT_MOZILLA_UA && __MSGID_MOZILLA_UA
meta T_USER_AGENT_MOZILLA_UA	__T_USER_AGENT_MOZILLA_UA && !T_FORGED_USER_AGENT

header __USER_AGENT_MOZILLA_XM	X-Mailer   =~ /^Mozilla 4\.\d{2} \[[a-z]{2}\]/
header __MSGID_MOZILLA_XM	Message-Id =~ /^<[0-9A-F]{8}\.[0-9A-F]{8}\@\S+>$/
meta __T_USER_AGENT_MOZILLA_XM	__USER_AGENT_MOZILLA_XM && __MSGID_MOZILLA_XM
meta T_USER_AGENT_MOZILLA_XM	__T_USER_AGENT_MOZILLA_XM && !T_FORGED_USER_AGENT

header __USER_AGENT_MACOE	User-Agent =~ /^Microsoft[ -]Outlook[ -]Express[ -]Macintosh[ -]Edition/
meta __T_USER_AGENT_MACOE	__USER_AGENT_MACOE && __MSGID_ENTOURAGE
meta T_USER_AGENT_MACOE		__T_USER_AGENT_MACOE && !T_FORGED_USER_AGENT

header __USER_AGENT_ENTOURAGE	User-Agent =~ /^Microsoft-Entourage\/\d{1,2}(?:\.\d){1,2}\.\d{4}$/
header __MSGID_ENTOURAGE	Message-ID =~ /^<[0-9A-F]{8}\.[0-9A-F]+\%\S+\@\S+>$/
meta __T_USER_AGENT_ENTOURAGE	__USER_AGENT_ENTOURAGE && __MSGID_ENTOURAGE && !MIME_HTML_ONLY
meta T_USER_AGENT_ENTOURAGE	__T_USER_AGENT_ENTOURAGE && !T_FORGED_USER_AGENT

header __USER_AGENT_KMAIL	User-Agent =~ /^KMail\/1\.\d\.\d+$/
header __MSGID_KMAIL		Message-Id =~ /^<[12]\d{3}[01]\d[0-3]\d[0-2]\d[0-5]\d\.\d+\.\S+@\S+>$/
meta __T_USER_AGENT_KMAIL	__USER_AGENT_KMAIL && __MSGID_KMAIL
meta T_USER_AGENT_KMAIL		__T_USER_AGENT_KMAIL && !T_FORGED_USER_AGENT

header __USER_AGENT_IMP		User-Agent =~ /^Internet Messaging Program \(IMP\) [34]\.\d/
header __MSGID_IMP		Message-Id =~ /^<\d{9,10}\.[0-9a-f]{13}\@\S+>$/
meta __T_USER_AGENT_IMP		__USER_AGENT_IMP && __MSGID_IMP
meta T_USER_AGENT_IMP		__T_USER_AGENT_IMP && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_IMP		__USER_AGENT_IMP && !__UNUSABLE_MSGID && !__T_USER_AGENT_IMP

header __USER_AGENT_TONLINE	X-Mailer   =~ /^T-Online (?:e|Web)Mail \d\.\d+$/
meta T_USER_AGENT_TONLINE	__USER_AGENT_TONLINE && !T_FORGED_USER_AGENT

header __USER_AGENT_GNUS_UA	User-Agent =~ /^Gnus\/\d\.\d+ /
meta T_USER_AGENT_GNUS_UA	__USER_AGENT_GNUS_UA && !T_FORGED_USER_AGENT

header __USER_AGENT_GNUS_XM	X-Mailer   =~ /^Gnus v\d(?:\.\d+){1,2}\/X?Emacs \d+\.\d+/
meta T_USER_AGENT_GNUS_XM	__USER_AGENT_GNUS_XM && !T_FORGED_USER_AGENT

header __USER_AGENT_VM		X-Mailer =~ /^\s*VM\s+\d+\.\d+\s+under\s+.{0,30}?[Ee]macs\b/
meta T_USER_AGENT_VM		__USER_AGENT_VM && !T_FORGED_USER_AGENT

# frequently forged, needs some correlation meta checks with other headers.
meta __T_USER_AGENT_MSN		(__USER_AGENT_MSN && __HAS_XOAT && __HAS_XOIP)
meta T_USER_AGENT_MSN		__T_USER_AGENT_MSN && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_MSN		__USER_AGENT_MSN && !T_USER_AGENT_MSN

header __USER_AGENT_FORTE	X-Mailer =~ /^Forte Agent \d\.\d+\/\d+\.\d+$/
header __MSGID_FORTE		Message-Id =~ /^<[0-9a-f]{8}\.\d+\@\S+>$/
meta __T_USER_AGENT_FORTE	__USER_AGENT_FORTE && __MSGID_FORTE
meta T_USER_AGENT_FORTE		__T_USER_AGENT_FORTE && !T_FORGED_USER_AGENT

meta __USER_AGENT_XIMIAN	(__XIMIAN_MSGID && __XIMIAN_MUA)
meta T_USER_AGENT_XIMIAN	__USER_AGENT_XIMIAN && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_XIMIAN	__XIMIAN_MUA && !__UNUSABLE_MSGID && !__USER_AGENT_XIMIAN

# duncf
body T_EMAIL_ROT13     /\b[a-z(\]-]+\^[a-z-]+\((?:pbz|arg|bet|pn)\b/
test T_EMAIL_ROT13 ok  qhabs^ebtref(pbz
test T_EMAIL_ROT13 ok  zxrggyre^riv-vap(pbz
test T_EMAIL_ROT13 fail	duncf@rogers.com

# bug 1561
# stronger version of USER_AGENT_APPLEMAIL
# Apple Mail doesn't send text/html at all (unless it's an attachment)
# It'll send text/plain, or multipart/alternative with text/plain and text/enriched parts (boundary of
# "Apple-Mail-\d--\d+").  It can, however, send a multipart/mixed with a single text/html attachment, so
# don't use MIME_HTML_ONLY.
# perhaps limit CTYPE to "text/plain", "multipart/alternative" with "text/plain" and "text/enhanced", or
# "multipart/mixed"?
header __X_MAILER_APPLEMAIL	X-Mailer	=~ /^Apple Mail \(\d\.\d+\)$/
header __MSGID_APPLEMAIL	Message-Id	=~ /^<[0-9A-F]{8}-(?:[0-9A-F]{4}-){3}[0-9A-F]{12}\@\S+>$/
header __MIME_VERSION_APPLEMAIL	Mime-Version	=~ /^1\.0 \(Apple Message framework v\d+\)$/
meta __USER_AGENT_APPLEMAIL	!__CTYPE_HTML && __X_MAILER_APPLEMAIL && ( __MSGID_APPLEMAIL || __MIME_VERSION_APPLEMAIL )
meta T_USER_AGENT_APPLEMAIL	__USER_AGENT_APPLEMAIL && !T_FORGED_USER_AGENT
meta T_FORGED_MUA_APPLEMAIL	__X_MAILER_APPLEMAIL && !__UNUSABLE_MSGID && !__USER_AGENT_APPLEMAIL

# per bug 1373
body __HTML_COMMENT_RATIO_00_10		eval:html_range('total_comment_ratio','0.00','0.10')
body __HTML_COMMENT_RATIO_10_20		eval:html_range('total_comment_ratio','0.10','0.20')
body __HTML_COMMENT_RATIO_20_30		eval:html_range('total_comment_ratio','0.20','0.30')
body __HTML_COMMENT_RATIO_30_40		eval:html_range('total_comment_ratio','0.30','0.40')
body __HTML_COMMENT_RATIO_40_50		eval:html_range('total_comment_ratio','0.40','0.50')
body __HTML_COMMENT_RATIO_50_60		eval:html_range('total_comment_ratio','0.50','0.60')
body __HTML_COMMENT_RATIO_60_70		eval:html_range('total_comment_ratio','0.60','0.70')
body __HTML_COMMENT_RATIO_70_80		eval:html_range('total_comment_ratio','0.70','0.80')
body __HTML_COMMENT_RATIO_80_90		eval:html_range('total_comment_ratio','0.80','0.90')
body __HTML_COMMENT_RATIO_90_100	eval:html_range('total_comment_ratio','0.90','0.100')
meta T_HTML_COMMENT_RATIO_00_10_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_00_10 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_10_20_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_10_20 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_20_30_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_20_30 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_30_40_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_30_40 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_40_50_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_40_50 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_50_60_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_50_60 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_60_70_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_60_70 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_70_80_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_70_80 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_80_90_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_80_90 && MIME_HTML_ONLY
meta T_HTML_COMMENT_RATIO_90_100_MIME_HTML_ONLY		__HTML_COMMENT_RATIO_90_100 && MIME_HTML_ONLY

meta T_HTML_COMMENT_RATIO_00_10___MIME_HTML		__HTML_COMMENT_RATIO_00_10 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_10_20___MIME_HTML		__HTML_COMMENT_RATIO_10_20 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_20_30___MIME_HTML		__HTML_COMMENT_RATIO_20_30 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_30_40___MIME_HTML		__HTML_COMMENT_RATIO_30_40 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_40_50___MIME_HTML		__HTML_COMMENT_RATIO_40_50 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_50_60___MIME_HTML		__HTML_COMMENT_RATIO_50_60 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_60_70___MIME_HTML		__HTML_COMMENT_RATIO_60_70 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_70_80___MIME_HTML		__HTML_COMMENT_RATIO_70_80 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_80_90___MIME_HTML		__HTML_COMMENT_RATIO_80_90 && __MIME_HTML
meta T_HTML_COMMENT_RATIO_90_100___MIME_HTML		__HTML_COMMENT_RATIO_90_100 && __MIME_HTML

meta T_HTML_COMMENT_RATIO_00_10_HTML_MESSAGE		__HTML_COMMENT_RATIO_00_10 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_10_20_HTML_MESSAGE		__HTML_COMMENT_RATIO_10_20 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_20_30_HTML_MESSAGE		__HTML_COMMENT_RATIO_20_30 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_30_40_HTML_MESSAGE		__HTML_COMMENT_RATIO_30_40 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_40_50_HTML_MESSAGE		__HTML_COMMENT_RATIO_40_50 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_50_60_HTML_MESSAGE		__HTML_COMMENT_RATIO_50_60 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_60_70_HTML_MESSAGE		__HTML_COMMENT_RATIO_60_70 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_70_80_HTML_MESSAGE		__HTML_COMMENT_RATIO_70_80 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_80_90_HTML_MESSAGE		__HTML_COMMENT_RATIO_80_90 && HTML_MESSAGE
meta T_HTML_COMMENT_RATIO_90_100_HTML_MESSAGE		__HTML_COMMENT_RATIO_90_100 && HTML_MESSAGE

# a new spamware tool; catch it
header T_FORGED_RCVD_FROM_NUM	Received =~ /from \S+ \(\d+ \[/
describe T_FORGED_RCVD_FROM_NUM	Received headers forged (numeric hostname)

header T_RATWARE_EMPTY_HELO	Received =~ /from  \(\) by /
describe T_RATWARE_EMPTY_HELO	Received headers forged (empty HELO)

header T_RATWARE_RCVD_BONUS_SPC	Received =~ /\) by  [a-zA-Z0-9]/
describe T_RATWARE_RCVD_BONUS_SPC Received headers forged (extra spaces)

meta T_MIME_HTML_NO_HTML_TAG	MIME_HTML_ONLY && !__TAG_EXISTS_HTML
meta T_MIME_HTML_NO_BODY_TAG	MIME_HTML_ONLY && !__TAG_EXISTS_BODY

# this code uses an access database (sendmail, postfix, etc.)
# Since you need to actively create an accessdb to use it, I'm forcing the score to 0.
# If you have an accessdb, feel free to override the score in your own config. :)
header T_ACCESSDB	eval:check_access_database('/etc/mail/access-full.db')
describe T_ACCESSDB Would have been caught by accessdb
tflags T_ACCESSDB userconf
score T_ACCESSDB 0
