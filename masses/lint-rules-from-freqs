#!/usr/bin/perl
# usage:
# ./lint-rules-from-freqs < freqs > badtests

readrules();
lintrules();

open (OUT, "|sort -g --key=4");
while (<>) {
  if (!/^\s*([\d\.]+)/) {
    print OUT;
    next;
  }

  my $badrule;
  my ($overall, $spam, $nons, $sn, $score, $name) = split (' ');
  next unless ($name =~ /\S/);

  if ($overall == 0.0) {
    $badrule = 'zarro metches';

  } else {
    if ($score < 0.0) {
      # negative score with more spams than nonspams? bad rule.
      if ($sn > 0.5 && $score < 0.5) { $badrule = 'fn'; }

      # low number of matches overall
      if ($nons < 0.05) { $badrule ||= ''; $badrule .= ', low matches'; }

    } elsif ($score > 0.0) {
      # positive score with more nonspams than spams? bad.
      if ($sn < 0.5 && $score > 0.5) { $badrule = 'fp'; }

      # low number of matches overall
      if ($spam < 0.05) { $badrule ||= ''; $badrule .= ', low matches'; }

    } elsif ($score == 0.0) {
      $badrule = 'score is 0';
    }
  }

  if (defined $badrule) {
    $badrule =~ s/^, //;
    chomp; print OUT $_ . " ($badrule)\n";
  }
}
close OUT;

sub readrules {
  my @files = <../rules/[0-9]*.cf>;
  my $file;
  @rulesfound = ();
  foreach $file (@files) {
    open (IN, "<$file");
    while (<IN>) {
      s/#.*$//g; s/^\s+//; s/\s+$//; next if /^$/;
      s/^lang\s+\S+\s+//;

      if (/^(header|rawbody|body|full|uri)\s+(\S+)\s+/) {
        push (@rulesfound, $2);
        $rulefile{$2} ||= $file;
        $scorefile{$1} = $file;
        $score{$2} ||= 1.0;
        $descfile{$2} ||= $file;       # a rule with no score or desc is OK
      } elsif (/^describe\s+(\S+)\s+/) {
        push (@rulesfound, $1);
        $descfile{$1} = $file;
      } elsif (/^score\s+(\S+)\s+(.+)$/) {
        push (@rulesfound, $1);
        $scorefile{$1} = $file;
        $score{$1} = $2;
      } elsif (/^(clear-report-template|clear-spamtrap-template|report|spamtrap|
                clear-terse-report-template|terse-report|
                required_hits|ok_locales|ok_languages|test|lang|
                spamphrase|whitelist_from
                )/x) {
        next;
      } else {
        print "warning: unknown rule in $file: $_\n";
      }
    }
    close IN;
  }
}

sub lintrules {
  foreach my $rule (@rulesfound) {
    if (defined $descfile{$rule} && !defined ($rulefile{$rule})) {
      print "warning: $rule has description, but no rule: $descfile{$rule}\n";
    }
    if (defined $score{$rule} && !defined ($rulefile{$rule})) {
      print "warning: $rule has score, but no rule: $scorefile{$rule}\n";
    }
  }
}

