#!/bin/sh

# settings are located in $HOME/.corpus

echo "Using corpus-nightly settings from $HOME/.corpus"
. $HOME/.corpus

RSYNC_PASSWORD=$password 
export RSYNC_PASSWORD

renice 10 -p $$

# use $PERL from env if unset
if [ "x${PERL:-}" = x ] ; then
  PERL=perl
fi
export PERL

set -x
set -e

# ensure we're running after 0900 UTC; complex due to daylight savings.
# If we're running in the 08xx UTC hour-space, sleep for 1 hour; when
# we wake, we will be in 09xx.
(
  TIME="%e,%U,%S"; TZ=UTC; export TIME TZ
  if date | egrep '^... ... .. 08:'; then
    date; echo "sleeping for 1 hour to compensate for DST"
    sleep 3600 ; date 
  fi
)

# day of week
if date | egrep '^Sat' || [ "$1" = "net" ]; then
	net="net-"
else
	net=""
fi

# enter tree
if [ -d $tree ] ; then 
  cd $tree
else
  echo "$tree does not exist yet. you need to check it out first" 1>&2
  exit 2
fi

[ -d $tmp ] || mkdir -p $tmp

# find current revision
rm -f weekly-versions.txt nightly-versions.txt
if ! wget --tries=120 --wait=30 \
    http://rsync.spamassassin.org/weekly-versions.txt \
    http://rsync.spamassassin.org/nightly-versions.txt
then
	echo "wget failed" 1>&2
	exit 0
fi

if [ -n "$net" ]; then
	revision=$(tail -1 weekly-versions.txt|awk '{print $2}')
else
	revision=$(tail -1 nightly-versions.txt|awk '{print $2}')
fi

# update
# TODO: replace all this with rsync, it's much safer ;)
set +e
retry=0
while true; do
        rm -rf rules    # causing trouble for some reason
        rm -rf rulesrc/sandbox

	if svn update -r $revision < /dev/null && \
            svn update -r $revision rulesrc < /dev/null
        then
		break;
	fi

        # if that failed, get aggressive about getting a full
        # checkout, regardless of what may have been here already;
        # delete most of the checkout to do so, and just use "svn co"
        # instead of "svn up".

        svnpath=`svn info .| grep -i ^URL: | cut -d ' ' -f 2`

        rm -rf rules lib build rulesrc spamd spamc
        svn cleanup < /dev/null
        svn co --non-interactive `$svnpath` .

        # just 10 times; our SVN repo shouldn't be *that* unreliable!
	if [ $retry -eq 20 ]; then
		echo "svn update/co failed" 1>&2
		exit 1
	fi

	retry=$(( $retry + 1 ))

        # longer and longer between retries
	sleep `expr 20 '*' $retry`
done
set -e

# build
$PERL Makefile.PL < /dev/null
make

# call ext command, if required
if [ "x${pre_mass_check_command:-}" != x ] ; then
  $pre_mass_check_command
fi

# run test
cd masses
rm -f spamassassin/auto*
rm -f spamassassin/bayes*
rm -f razor-agent.log
[ -d spamassassin ] || mkdir spamassassin

if [ -n "$net" ]; then
	prefs=$prefs_weekly
	opts=$opts_weekly
else
	prefs=$prefs_nightly
	opts=$opts_nightly
fi
if [ -n "$prefs" -a -f "$prefs" ]; then
	cp $prefs spamassassin/user_prefs
else
	rm -f spamassassin/user_prefs
fi

date | tee test.start

if [ "${clienthosts:-}" = "" ] ; then

  # local mass-check
  $PERL mass-check $opts

else

  # client-server mode
  for host in $clienthosts ; do
    rule-qa/nightly-slave-start $host
  done

  $PERL mass-check --server $serverhost $opts

  # the slaves will exit when the server mass-check does
fi

date | tee test.end

uptime
ls -l spam.log ham.log

# results name
mv spam.log spam-$net$username.log
mv ham.log ham-$net$username.log

# rsync
set +e
retry=0
while true; do
	if rsync -Pcvuzb --timeout=120 \
            spam-$net$username.log ham-$net$username.log \
            $username@rsync.spamassassin.org::corpus/
        then
		break;
	fi
	if [ $retry -eq 120 ]; then
		echo "rsync failed" 1>&2
		exit 1
	fi
	retry=$(( $retry + 1 ))
	sleep 30
done
set -e
