#!/usr/bin/perl
#
# very handy for e.g.:
#
#   grep SUBJECT_FREQ spam.log | ./mass-check-results-to-mbox | grep Subject:

my $grep = undef;
while ($#ARGV >= 0) {
  $_ = $ARGV[0]; shift;
  if ($ARGV[0] eq '-grep') { $grep = $ARGV[0]; shift; }
}

while (<>) {
  /^.\s+\d+\s+(\S+) / or next;
  my $mail = $1;

  if ($mail =~ /^(\S+):</) {
    my $msgp = find_in_mailbox ($mail);
    if (defined $msgp) {
      handle ($msgp);
    } else {
      warn "failed to find $mail\n";
    }

  } else {
    if ($mail =~ /\.gz$/) {
      open (IN, "gunzip -cd $mail |") or warn "gunzip $mail failed: $@";
    } elsif ($mail =~ /\.bz2$/) {
      open (IN, "bzip2 -cd $mail |") or warn "bunzip2 $mail failed: $@";
    } else {
      open (IN, "<$mail") or warn "open $mail failed: $@";
    }
    my @msg = (<IN>); close IN;
    handle (\@msg);
  }
}

###########################################################################

sub find_in_mailbox {
  my ($mail) = @_;
  $mail =~ /^(\S+):</;
  $folder = $1; my $wantid = $_;

  if (defined $CURRENT_MBOX_OPEN && $folder eq $CURRENT_MBOX_OPEN) {
    # try from current position first
    my $msgp = mbox_search($mail, $folder);
    if (defined ($msgp->[0])) { return $msgp; }
  }

  # failed. have to (re-|)open.
  if ($folder =~ /\.gz$/) {
    open (MBOX, "gunzip -cd $folder |") or warn "gunzip $folder failed: $@";
  } elsif ($folder =~ /\.bz2$/) {
    open (MBOX, "bzip2 -cd $folder |") or warn "bunzip2 $folder failed: $@";
  } else {
    open (MBOX, "<$folder") or warn "open $folder failed: $@";
  }

  $CURRENT_MBOX_OPEN = $folder;
  while (<MBOX>) { /^From \S+ +... ... / and last; }
  my $msgp = mbox_search($mail, $folder);
  return $msgp;
}

sub mbox_search {
  my ($mail, $folder) = @_;
  my $wantid = $mail;

  while (!eof MBOX) {
    my @msg = ();
    my $msgid = undef;
    $count++;

    while (<MBOX>) {
      /^Message-[Ii][Dd]: (.*)\s*$/ and $msgid = $1;

      if (/^$/) {
        if (!defined ($msgid)) {
          $msgid = "<$count\@no_msgid_in_msg.taint.org>";
          push (@msg, "Message-Id: $msgid\n");
        }
      }

      /^From \S+ +... ... / and last;
      push (@msg, $_);
    }

    $msgid = "$folder:$msgid";	# so we can find it again
    $msgid =~ s/\s/_/gs;	# make safe

    # print "JMD $wantid $msgid\n";

    if ($wantid ne $msgid) { next; }
    return \@msg;
  }

  close MBOX; $CURRENT_MBOX_OPEN = undef;
}

###########################################################################

sub handle {
  my $msgp = shift;
  print STDOUT @$msgp;
}

